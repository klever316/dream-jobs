---
http_interactions:
- request:
    method: get
    uri: https://programathor.com.br/jobs/page/1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:14 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"a2599be2492d1ea30124a38a8fd79dba"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=VllmdVlZTktzb0xMNVk4elMwa09WdTU1bWZ4WFlqYmxzaDNGTFhmYjQ1QlNmazIybHBudHhDSWt4bjJoT1hVVlNTQjdjbWtPTHRlRXhsQStTcEE5ckw4dm9NdnYzNmlqU2ZZS3Y3MXpZTlMyL1ViMGlUNnBBSEllQ1hFUWlkWTVnRldvSm5zMjZQcm5KSllxMzlJalFnPT0tLVJxdnBVbDJLemhydlUySWN2SkczYXc9PQ%3D%3D--5bfa29ce67bea016b860661b448a224a334a26bd;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - e41e6671-9746-4d0d-917a-1db6f28b8338
      X-Runtime:
      - '1.033884'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:15 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2778-programador-a-php-pleno-senior-rj
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:15 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"ea6856cc3e632691ebb17ddd4b86913e"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=RTBjMS80NFpJSjBRL1o5YjJoVmpRc3Y2U2RBczY0U2RqQUZ0eUIzMEkydXFzbUFoaVRDNHNaa0dNV0ROc2ROem9ZRWp0djVWakg4elRNMzViVFhrY1RtRWdHZVo5L0hqL2poRE5MZ2pWV0VMODBqajNWR2RFZW9UQWlLR3RnbEhRR0JrdXYyb3lYWHRHTzhXbkd5eEhRPT0tLU9FQkdrREhwcjhVNEhrWHd2TnEzemc9PQ%3D%3D--7b0f59aca7bfa5437379a7a77822377554847d13;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - ba361ae8-167d-4015-894e-8ea036e11335
      X-Runtime:
      - '0.391891'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:16 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2776-desenvolvedor-a-asp-net-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:17 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"362f58d2bf6afb7ed06865e663c9ec14"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=WHkwS3hIbjR6ZVpQMkZxbUhQV3R0WEM1QjlrYjRlQmM3OVlENStOS0JINFBEVzBMaGQvekFXd2oxZy8wMHF1MWRneGNxSWEveHk2MGp6OUJucHNSQXBDRnk1M0thT1lCSEZQNlJYL2c5UW84SkJoVlkxZWNqNGgySkVhcWF5OSs1Z21NcVYzSHNUcXN5T3lLbzdHSG1BPT0tLXZTNCs4WVRoTnI3SDMxWGVXMVRqOVE9PQ%3D%3D--70b02ab26d61f776e40c344df73f0e8c906c66a3;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 96edfc74-c7f8-4574-a9ea-aaead0780c78
      X-Runtime:
      - '0.580978'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:18 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2774-desenvolvedor-a-fullstack-node-js-e-react-native
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:19 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"17830a14c4dc01cac957d3003ed1bf43"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=TjRCeUtQQUxSaHoyMTR2TFBSRzBCZS8vWGZVN1JSMzN3YzBMUUdBaWVGL3h6Z2UxSjBtTTcrOGR6ajE1S3JXd01rUWtKS0orc25pUVc2cU5JcVhReWRkNlVhMVhVNm13N2FCYXhYd01mQ2hkV2tlOEFTWmFaT0wxL3hjaGRpdkVISUM3YkpVUFBzbU9meWhmL0J0dTdBPT0tLTcxQnRjV3ZheFpSWnpiVzljSXEwclE9PQ%3D%3D--7ca39bd08d13cee90ac56828e073798c5a8f324a;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 311edb22-c518-4620-a777-a32db5eed993
      X-Runtime:
      - '0.828702'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:19 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2772-desenvolvedor-a-back-end
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:21 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"d72ac689efbb9e7d3664b1b8b3ecf1b9"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=ZU5aNW0zajNIdm1zVVBRQ284SWovU3FsWnlHanQva053YzBqYk9kUDgxNnVCd1k1aGFKM3RmYjVVSzNWTmRqazVmVjFMbHVxSUMzTWJzc0IvUVN5MjZZYklFYmVlOEM2T2ZoUkVZN2NQcGhnN0xYNUlrOGh5d3hnY2N2SCtRL0EzRWp4OHZJVm9kcW03NCtxNWNBVHZRPT0tLURvTzV2VWthY0pZdlZ5RTdTOFZLL1E9PQ%3D%3D--f6e782e1943e3e23f2d107e73c4aa18cf42c47db;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 36e7be2d-d969-45fd-a513-1075b25d9a4c
      X-Runtime:
      - '0.343606'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:21 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2771-cientista-de-dados-python
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:21 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"4a4694185b626002dad822140c42aecc"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=K1Mzd3VHcmRJVEdMc2xQMkhGRWRtVW5tci9aMXpkUlRSblZpUGNndHQ0a0xCQUJCc0MrcXhPVEl5VStkdmZpbUk4b1dmcEhPZ1hzQ2VXR1dhUjhOckFoZ29jU1daSUJpeEkyRXdzdzFWSmUwOWx0eStGREpxbkZZZEJ4L1JSWkcvSFEyLzQwR2pKaUtxaFpHMTBlcTdRPT0tLW9tcUpzNnhNSWt4WWM3TG1BMm95RVE9PQ%3D%3D--622397fa85abd283e76507c9fee7755f572efed1;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - d3c9fb7f-fa2f-40d5-9a40-3f3eb4923eef
      X-Runtime:
      - '0.387050'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InB0Ij4KICA8aGVhZD4KICAgIDxtZXRhIG5hbWU9ImNzcmYtcGFyYW0iIGNvbnRlbnQ9ImF1dGhlbnRpY2l0eV90b2tlbiIgLz4KPG1ldGEgbmFtZT0iY3NyZi10b2tlbiIgY29udGVudD0iN0hud2VaVFpHOFpodDY5UFltTXQvLy9KTnVDbmpaSEk3RXpKYys5NnZscXVYTkpBNGhkOGZKZlVGMVFxK0xqYllSZVlCc3hobXIvTDZ0QjRvSmoraXc9PSIgLz4KICAgIDxtZXRhIG5hbWU9ImFjdGlvbi1jYWJsZS11cmwiIGNvbnRlbnQ9Ii9jYWJsZSIgLz4KCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlLGNocm9tZT0xIj4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPndpbmRvdy5OUkVVTXx8KE5SRVVNPXt9KTtOUkVVTS5pbmZvPXsiYmVhY29uIjoiYmFtLm5yLWRhdGEubmV0IiwiZXJyb3JCZWFjb24iOiJiYW0ubnItZGF0YS5uZXQiLCJsaWNlbnNlS2V5IjoiNmJhOWFiODU3YiIsImFwcGxpY2F0aW9uSUQiOiI0NTQ2MDI3MiIsInRyYW5zYWN0aW9uTmFtZSI6ImNRMElGaFFLQ1FoY1MwMEpEVkFSU1JFT0NoST0iLCJxdWV1ZVRpbWUiOjcsImFwcGxpY2F0aW9uVGltZSI6NDAzLCJhZ2VudCI6IiJ9PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij53aW5kb3cuTlJFVU18fChOUkVVTT17fSksX19ucl9yZXF1aXJlPWZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKG4pe2lmKCF0W25dKXt2YXIgbz10W25dPXtleHBvcnRzOnt9fTtlW25dWzBdLmNhbGwoby5leHBvcnRzLGZ1bmN0aW9uKHQpe3ZhciBvPWVbbl1bMV1bdF07cmV0dXJuIHIob3x8dCl9LG8sby5leHBvcnRzKX1yZXR1cm4gdFtuXS5leHBvcnRzfWlmKCJmdW5jdGlvbiI9PXR5cGVvZiBfX25yX3JlcXVpcmUpcmV0dXJuIF9fbnJfcmVxdWlyZTtmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKylyKG5bb10pO3JldHVybiByfSh7MTpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoKXt9ZnVuY3Rpb24gbyhlLHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGkoZSxbZi5ub3coKV0uY29uY2F0KHUoYXJndW1lbnRzKSksdD9udWxsOnRoaXMsbiksdD92b2lkIDA6dGhpc319dmFyIGk9ZSgiaGFuZGxlIiksYT1lKDIpLHU9ZSgzKSxjPWUoImVlIikuZ2V0KCJ0cmFjZXIiKSxmPWUoImxvYWRlciIpLHM9TlJFVU07InVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3cubmV3cmVsaWMmJihuZXdyZWxpYz1zKTt2YXIgcD1bInNldFBhZ2VWaWV3TmFtZSIsInNldEN1c3RvbUF0dHJpYnV0ZSIsInNldEVycm9ySGFuZGxlciIsImZpbmlzaGVkIiwiYWRkVG9UcmFjZSIsImlubGluZUhpdCIsImFkZFJlbGVhc2UiXSxkPSJhcGktIixsPWQrIml4bi0iO2EocCxmdW5jdGlvbihlLHQpe3NbdF09byhkK3QsITAsImFwaSIpfSkscy5hZGRQYWdlQWN0aW9uPW8oZCsiYWRkUGFnZUFjdGlvbiIsITApLHMuc2V0Q3VycmVudFJvdXRlTmFtZT1vKGQrInJvdXRlTmFtZSIsITApLHQuZXhwb3J0cz1uZXdyZWxpYyxzLmludGVyYWN0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyByKS5nZXQoKX07dmFyIG09ci5wcm90b3R5cGU9e2NyZWF0ZVRyYWNlcjpmdW5jdGlvbihlLHQpe3ZhciBuPXt9LHI9dGhpcyxvPSJmdW5jdGlvbiI9PXR5cGVvZiB0O3JldHVybiBpKGwrInRyYWNlciIsW2Yubm93KCksZSxuXSxyKSxmdW5jdGlvbigpe2lmKGMuZW1pdCgobz8iIjoibm8tIikrImZuLXN0YXJ0IixbZi5ub3coKSxyLG9dLG4pLG8pdHJ5e3JldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaChlKXt0aHJvdyBjLmVtaXQoImZuLWVyciIsW2FyZ3VtZW50cyx0aGlzLGVdLG4pLGV9ZmluYWxseXtjLmVtaXQoImZuLWVuZCIsW2Yubm93KCldLG4pfX19fTthKCJzZXROYW1lLHNldEF0dHJpYnV0ZSxzYXZlLGlnbm9yZSxvbkVuZCxnZXRDb250ZXh0LGVuZCxnZXQiLnNwbGl0KCIsIiksZnVuY3Rpb24oZSx0KXttW3RdPW8obCt0KX0pLG5ld3JlbGljLm5vdGljZUVycm9yPWZ1bmN0aW9uKGUpeyJzdHJpbmciPT10eXBlb2YgZSYmKGU9bmV3IEVycm9yKGUpKSxpKCJlcnIiLFtlLGYubm93KCldKX19LHt9XSwyOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQpe3ZhciBuPVtdLHI9IiIsaT0wO2ZvcihyIGluIGUpby5jYWxsKGUscikmJihuW2ldPXQocixlW3JdKSxpKz0xKTtyZXR1cm4gbn12YXIgbz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1yfSx7fV0sMzpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe3R8fCh0PTApLCJ1bmRlZmluZWQiPT10eXBlb2YgbiYmKG49ZT9lLmxlbmd0aDowKTtmb3IodmFyIHI9LTEsbz1uLXR8fDAsaT1BcnJheShvPDA/MDpvKTsrK3I8bzspaVtyXT1lW3Qrcl07cmV0dXJuIGl9dC5leHBvcnRzPXJ9LHt9XSw0OltmdW5jdGlvbihlLHQsbil7dC5leHBvcnRzPXtleGlzdHM6InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UmJndpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcmJiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnR9fSx7fV0sZWU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7fWZ1bmN0aW9uIG8oZSl7ZnVuY3Rpb24gdChlKXtyZXR1cm4gZSYmZSBpbnN0YW5jZW9mIHI/ZTplP2MoZSx1LGkpOmkoKX1mdW5jdGlvbiBuKG4scixvLGkpe2lmKCFkLmFib3J0ZWR8fGkpe2UmJmUobixyLG8pO2Zvcih2YXIgYT10KG8pLHU9bShuKSxjPXUubGVuZ3RoLGY9MDtmPGM7ZisrKXVbZl0uYXBwbHkoYSxyKTt2YXIgcD1zW3lbbl1dO3JldHVybiBwJiZwLnB1c2goW2IsbixyLGFdKSxhfX1mdW5jdGlvbiBsKGUsdCl7dltlXT1tKGUpLmNvbmNhdCh0KX1mdW5jdGlvbiBtKGUpe3JldHVybiB2W2VdfHxbXX1mdW5jdGlvbiB3KGUpe3JldHVybiBwW2VdPXBbZV18fG8obil9ZnVuY3Rpb24gZyhlLHQpe2YoZSxmdW5jdGlvbihlLG4pe3Q9dHx8ImZlYXR1cmUiLHlbbl09dCx0IGluIHN8fChzW3RdPVtdKX0pfXZhciB2PXt9LHk9e30sYj17b246bCxlbWl0Om4sZ2V0OncsbGlzdGVuZXJzOm0sY29udGV4dDp0LGJ1ZmZlcjpnLGFib3J0OmEsYWJvcnRlZDohMX07cmV0dXJuIGJ9ZnVuY3Rpb24gaSgpe3JldHVybiBuZXcgcn1mdW5jdGlvbiBhKCl7KHMuYXBpfHxzLmZlYXR1cmUpJiYoZC5hYm9ydGVkPSEwLHM9ZC5iYWNrbG9nPXt9KX12YXIgdT0ibnJAY29udGV4dCIsYz1lKCJnb3MiKSxmPWUoMikscz17fSxwPXt9LGQ9dC5leHBvcnRzPW8oKTtkLmJhY2tsb2c9c30se31dLGdvczpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe2lmKG8uY2FsbChlLHQpKXJldHVybiBlW3RdO3ZhciByPW4oKTtpZihPYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5rZXlzKXRyeXtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExfSkscn1jYXRjaChpKXt9cmV0dXJuIGVbdF09cixyfXZhciBvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPXJ9LHt9XSxoYW5kbGU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCxuLHIpe28uYnVmZmVyKFtlXSxyKSxvLmVtaXQoZSx0LG4pfXZhciBvPWUoImVlIikuZ2V0KCJoYW5kbGUiKTt0LmV4cG9ydHM9cixyLmVlPW99LHt9XSxpZDpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSl7dmFyIHQ9dHlwZW9mIGU7cmV0dXJuIWV8fCJvYmplY3QiIT09dCYmImZ1bmN0aW9uIiE9PXQ/LTE6ZT09PXdpbmRvdz8wOmEoZSxpLGZ1bmN0aW9uKCl7cmV0dXJuIG8rK30pfXZhciBvPTEsaT0ibnJAaWQiLGE9ZSgiZ29zIik7dC5leHBvcnRzPXJ9LHt9XSxsb2FkZXI6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7aWYoIXgrKyl7dmFyIGU9aC5pbmZvPU5SRVVNLmluZm8sdD1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKVswXTtpZihzZXRUaW1lb3V0KHMuYWJvcnQsM2U0KSwhKGUmJmUubGljZW5zZUtleSYmZS5hcHBsaWNhdGlvbklEJiZ0KSlyZXR1cm4gcy5hYm9ydCgpO2YoeSxmdW5jdGlvbih0LG4pe2VbdF18fChlW3RdPW4pfSksYygibWFyayIsWyJvbmxvYWQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIik7dmFyIG49ZC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtuLnNyYz0iaHR0cHM6Ly8iK2UuYWdlbnQsdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuLHQpfX1mdW5jdGlvbiBvKCl7ImNvbXBsZXRlIj09PWQucmVhZHlTdGF0ZSYmaSgpfWZ1bmN0aW9uIGkoKXtjKCJtYXJrIixbImRvbUNvbnRlbnQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIil9ZnVuY3Rpb24gYSgpe3JldHVybiBFLmV4aXN0cyYmcGVyZm9ybWFuY2Uubm93P01hdGgucm91bmQocGVyZm9ybWFuY2Uubm93KCkpOih1PU1hdGgubWF4KChuZXcgRGF0ZSkuZ2V0VGltZSgpLHUpKS1oLm9mZnNldH12YXIgdT0obmV3IERhdGUpLmdldFRpbWUoKSxjPWUoImhhbmRsZSIpLGY9ZSgyKSxzPWUoImVlIikscD13aW5kb3csZD1wLmRvY3VtZW50LGw9ImFkZEV2ZW50TGlzdGVuZXIiLG09ImF0dGFjaEV2ZW50Iix3PXAuWE1MSHR0cFJlcXVlc3QsZz13JiZ3LnByb3RvdHlwZTtOUkVVTS5vPXtTVDpzZXRUaW1lb3V0LFNJOnAuc2V0SW1tZWRpYXRlLENUOmNsZWFyVGltZW91dCxYSFI6dyxSRVE6cC5SZXF1ZXN0LEVWOnAuRXZlbnQsUFI6cC5Qcm9taXNlLE1POnAuTXV0YXRpb25PYnNlcnZlcn07dmFyIHY9IiIrbG9jYXRpb24seT17YmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGVycm9yQmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGFnZW50OiJqcy1hZ2VudC5uZXdyZWxpYy5jb20vbnItMTA3MS5taW4uanMifSxiPXcmJmcmJmdbbF0mJiEvQ3JpT1MvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksaD10LmV4cG9ydHM9e29mZnNldDp1LG5vdzphLG9yaWdpbjp2LGZlYXR1cmVzOnt9LHhocldyYXBwYWJsZTpifTtlKDEpLGRbbF0/KGRbbF0oIkRPTUNvbnRlbnRMb2FkZWQiLGksITEpLHBbbF0oImxvYWQiLHIsITEpKTooZFttXSgib25yZWFkeXN0YXRlY2hhbmdlIixvKSxwW21dKCJvbmxvYWQiLHIpKSxjKCJtYXJrIixbImZpcnN0Ynl0ZSIsdV0sbnVsbCwiYXBpIik7dmFyIHg9MCxFPWUoNCl9LHt9XX0se30sWyJsb2FkZXIiXSk7PC9zY3JpcHQ+CgoKICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgbWVkaWE9ImFsbCIgaHJlZj0iL2Fzc2V0cy9hcHBsaWNhdGlvbi02MmNhODNiNWI5ZGNlN2NkMjcwNjI2OTMzNDYyZDdjZGY1YmVlYTVmYWYwZDk5YzYzYTllMjFiMDc1ZWJhYzMyLmNzcyIgLz4KCgogICAgPHRpdGxlPlZBR0EgQmFjay1FbmQgLSBDaWVudGlzdGEgZGUgZGFkb3MgUHl0aG9uPC90aXRsZT4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJPIG1haW9yIGJhbmNvIHByaXZhZG8gZGEgQW3DqXJpY2EgTGF0aW5hIGJ1c2NhIGNpZW50aXN0YXMgZGUgZGFkb3MuDQoNCk5vc3NvcyA2MCBtaWxow7VlcyBkZSBjbGllbnRlcyBtb3ZpbWVudGFtIDEvNCBkYSBlY29ub21pYSBicmFzaWxlaXJhLg0KDQpDb25zZWd1ZSBpbS4uLiI+CgogICAgPCEtLSBBbmRyb2lkIHNlYXJjaCBiYXIgY29sb3IgLS0+CiAgICA8bWV0YSBuYW1lPSJ0aGVtZS1jb2xvciIgY29udGVudD0iIzM0NDk1RSIgLz4KCiAgICA8IS0tIE1vYmlsZSBpY29uIC0tPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2ljb25zL2lvcy0xMjB4MTIwLnBuZyIgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTIweDEyMCIgIC8+CiAgICA8bGluayBocmVmPSJodHRwczovL3Byb2dyYW1hdGhvci5jb20uYnIvYXNzZXRzL2ljb25zL2lvcy0xNTJ4MTUyLTZiNmJhODcyMTY2MTlhYmRmOTM1ZGU5OGFmM2VmZTlmMjM2YzVlN2QwNWUyNjUyNDVkMDIwODFjMzQ3MTRkNGIucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSIxNTJ4MTUyIiAvPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2Fzc2V0cy9pY29ucy9pb3MtMTY3eDE2Ny1hMjU0NTNhNzUzZmM4N2FkNTI5MGUzMmNmYzZhNzQ5MmM0MzRkOTI1Nzc0MmE4OTBmNWUzZmI1ODZlZTYzYzJmLnBuZyIgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTY3eDE2NyIgLz4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9hc3NldHMvaWNvbnMvaW9zLTE4MHgxODAtZjNlYTc2ZTI0NjFlMjE3NWE2M2IxZjcxNmJiN2Y3MmJmNDVhZTg1YTQ4Yzc2YjE0ZmNhNzdkNDcyNTNhOWQwZC5wbmciIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9IjE4MHgxODAiIC8+CiAgICA8bGluayBocmVmPSJodHRwczovL3Byb2dyYW1hdGhvci5jb20uYnIvYXNzZXRzL2ljb25zL2FuZHJvaWQtMTkyeDE5Mi02MWE3ZDBjM2E3NTc5OWQ4YmI2ZjA3ZjEwNDA1MjcwZTU1OWY4OTEzYTNmN2Y2ZjFmYThkMTU3OTg0YzcyZDQyLnBuZyIgcmVsPSJpY29uIiBzaXplcz0iMTkyeDE5MiIgLz4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9hc3NldHMvaWNvbnMvYW5kcm9pZC0xMjh4MTI4LTRiZDdmMjc4MTMyMTVkZmNiOWM0MjcwMzBmOWQxOTM4MDUxMTBkOWRiNTFlMjA5YTgzZjdhNjY0YmM5NTM4ZjgucG5nIiByZWw9Imljb24iIHNpemVzPSIxMjh4MTI4IiAvPgoKICAgIDwhLS0gRmFjZWJvb2sgT3BlbiBHcmFwaCBkYXRhIC0tPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOnRpdGxlIiBjb250ZW50PSJWQUdBIEJhY2stRW5kIC0gQ2llbnRpc3RhIGRlIGRhZG9zIFB5dGhvbiIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJ3ZWJzaXRlIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2pvYnMvMjc3MS1jaWVudGlzdGEtZGUtZGFkb3MtcHl0aG9uIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9hc3NldHMvY29tcGFueV9hdmF0YXItNmM1NWY3NjI4ZGUwYWRmNTI2NTJlMjJiM2Y2YmY1YmYwMDY3MjUzYWJkYzRiZTE5ZmEyYjBmZjU5MDcyNmZjYS5wbmciIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9Ik8gbWFpb3IgYmFuY28gcHJpdmFkbyBkYSBBbcOpcmljYSBMYXRpbmEgYnVzY2EgY2llbnRpc3RhcyBkZSBkYWRvcy4NCg0KTm9zc29zIDYwIG1pbGjDtWVzIGRlIGNsaWVudGVzIG1vdmltZW50YW0gMS80IGRhIGVjb25vbWlhIGJyYXNpbGVpcmEuDQoNCkNvbnNlZ3VlIGltLi4uIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iVkFHQSBCYWNrLUVuZCAtIENpZW50aXN0YSBkZSBkYWRvcyBQeXRob24iIC8+CgogICAgPCEtLSBUd2l0dGVyIENhcmQgZGF0YSAtLT4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6Y2FyZCIgY29udGVudD0ic3VtbWFyeV9sYXJnZV9pbWFnZSI+CiAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOnNpdGUiIGNvbnRlbnQ9IkBQcm9ncmFtYVRob3IiPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjp0aXRsZSIgY29udGVudD0iVkFHQSBCYWNrLUVuZCAtIENpZW50aXN0YSBkZSBkYWRvcyBQeXRob24iPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpkZXNjcmlwdGlvbiIgY29udGVudD0iTyBtYWlvciBiYW5jbyBwcml2YWRvIGRhIEFtw6lyaWNhIExhdGluYSBidXNjYSBjaWVudGlzdGFzIGRlIGRhZG9zLg0KDQpOb3Nzb3MgNjAgbWlsaMO1ZXMgZGUgY2xpZW50ZXMgbW92aW1lbnRhbSAxLzQgZGEgZWNvbm9taWEgYnJhc2lsZWlyYS4NCg0KQ29uc2VndWUgaW0uLi4iPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjcmVhdG9yIiBjb250ZW50PSJAUHJvZ3JhbWFUaG9yIj4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6aW1hZ2U6c3JjIiBjb250ZW50PSJodHRwOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9hc3NldHMvY29tcGFueV9hdmF0YXItNmM1NWY3NjI4ZGUwYWRmNTI2NTJlMjJiM2Y2YmY1YmYwMDY3MjUzYWJkYzRiZTE5ZmEyYjBmZjU5MDcyNmZjYS5wbmciPgoKICAgIDwhLS0gR29vZ2xlKyBTY2hlbWEub3JnIG1hcmt1cCAtLT4KICAgIDxtZXRhIGl0ZW1wcm9wPSJuYW1lIiBjb250ZW50PSJWQUdBIEJhY2stRW5kIC0gQ2llbnRpc3RhIGRlIGRhZG9zIFB5dGhvbiI+CiAgICA8bWV0YSBpdGVtcHJvcD0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9Ik8gbWFpb3IgYmFuY28gcHJpdmFkbyBkYSBBbcOpcmljYSBMYXRpbmEgYnVzY2EgY2llbnRpc3RhcyBkZSBkYWRvcy4NCg0KTm9zc29zIDYwIG1pbGjDtWVzIGRlIGNsaWVudGVzIG1vdmltZW50YW0gMS80IGRhIGVjb25vbWlhIGJyYXNpbGVpcmEuDQoNCkNvbnNlZ3VlIGltLi4uIj4KICAgIDxtZXRhIGl0ZW1wcm9wPSJpbWFnZSIgY29udGVudD0iaHR0cDovL3Byb2dyYW1hdGhvci5jb20uYnIvYXNzZXRzL2NvbXBhbnlfYXZhdGFyLTZjNTVmNzYyOGRlMGFkZjUyNjUyZTIyYjNmNmJmNWJmMDA2NzI1M2FiZGM0YmUxOWZhMmIwZmY1OTA3MjZmY2EucG5nIj4KCiAgICA8IS0tIEZhdmljb24gLS0+CiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIHR5cGU9ImltYWdlL3gtaWNvbiIgaHJlZj0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2Fzc2V0cy9mYXZpY29uLWQ0YTM1MDE0YzgzOWNlZWVjOGM2YWM3NmEyOTYzOTFjZTcxMTUyN2U3M2Q2ZmM0Y2ZjODE0NTYwYmRhNzkzNGQucG5nIiAvPgoKICAgIDwhLS0gQW5pbWF0ZS5jc3MgZm9yIGJ1dHRvbiBhbmltYXRpb25zIChodHRwczovL2RhbmVkZW4uZ2l0aHViLmlvL2FuaW1hdGUuY3NzLykgLS0+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2FuaW1hdGUuY3NzLzMuNS4yL2FuaW1hdGUubWluLmNzcyI+CgogICAgPCEtLSAgQ2Fub25pY2FsICAtLT4KICAgIDxsaW5rIHJlbD0iY2Fub25pY2FsIiBocmVmPSJodHRwczovL3Byb2dyYW1hdGhvci5jb20uYnIvam9icy8yNzcxLWNpZW50aXN0YS1kZS1kYWRvcy1weXRob24iIC8+CgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJodHRwczovL3VzZS5mb250YXdlc29tZS5jb20vcmVsZWFzZXMvdjUuMC4xMC9jc3MvYWxsLmNzcyIgaW50ZWdyaXR5PSJzaGEzODQtK2QwUDgzbjlrYVFNQ3dqOEY0UkpCNjZ0ekl3T0ttcmRiNDYrcG9yRC9PdnJKKzM3V3FJTTdVb0J0d0hPNk5sZyIgY3Jvc3NvcmlnaW49ImFub255bW91cyI+CgogICAgPCEtLSBHb29nbGUgQW5hbHl0aWNzIC0tPgogICAgICA8c2NyaXB0IGFzeW5jIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RhZy9qcz9pZD1VQS04ODc3NTEyMS0xIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdD4KICAgICAgICB3aW5kb3cuZGF0YUxheWVyID0gd2luZG93LmRhdGFMYXllciB8fCBbXTsKICAgICAgICBmdW5jdGlvbiBndGFnKCl7ZGF0YUxheWVyLnB1c2goYXJndW1lbnRzKTt9CiAgICAgICAgZ3RhZygnanMnLCBuZXcgRGF0ZSgpKTsKCiAgICAgICAgZ3RhZygnY29uZmlnJywgJ1VBLTg4Nzc1MTIxLTEnKTsKICAgICAgPC9zY3JpcHQ+CgogICAgPCEtLSAgQ2hhcnRraWNrIC0tPgogIDwvaGVhZD4KCiAgPGJvZHk+CgogICAgPGRpdiBjbGFzcz0ibmF2YmFyLXdhZ29uIG5hdmJhci13YWdvbi1maXhlZCI+CgogIDwhLS0gTG9nbyAtLT4KICAgIDxhIGNsYXNzPSJuYXZiYXItd2Fnb24tYnJhbmQiIGhyZWY9Ii8iPgogICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2Fzc2V0cy9sb2dvLXByb2dyYW1hdGhvci00NmY0NTgyOWY0YzhkNGY1YmZkOWQ5YWViNDYxYjZkNzE4MzljMzdjYzM5ZjJjMTQ2Yjc3OWQyYzU0N2JmMTdiLnBuZyIgYWx0PSJQcm9ncmFtYVRob3IiPgo8L2E+CiAgPCEtLSBSaWdodCBOYXZpZ2F0aW9uIC0tPgogIDxkaXYgY2xhc3M9Im5hdmJhci13YWdvbi1yaWdodCBoaWRkZW4teHMgaGlkZGVuLXNtIj4KCgogICAgICA8c3Ryb25nPjxhIGNsYXNzPSJuYXZiYXItd2Fnb24taXRlbSBjb2xvci1ncmVlbiIgaHJlZj0iL2pvYnMiPlZFUiBWQUdBUzwvYT48L3N0cm9uZz4KICAgICAgPGEgY2xhc3M9Im5hdmJhci13YWdvbi1pdGVtIiBocmVmPSIvcmVjcnVpdGVyIj5TT1UgRU1QUkVTQTwvYT4KCiAgICAgIDxkaXYgY2xhc3M9Im5hdmJhci13YWdvbi1pdGVtIj4KICAgICAgICA8c3BhbiBjbGFzcz0iZHJvcGRvd24iPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbG9yLWJsdWUgZHJvcGRvd24tdG9nZ2xlIiBpZD0ibmF2YmFyLXdhZ29uLW1lbnUiIGRhdGEtdG9nZ2xlPWRyb3Bkb3duPjxzdHJvbmc+TE9HSU48L3N0cm9uZz48L3NwYW4+CgogICAgICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtcmlnaHQgbmF2YmFyLXdhZ29uLWRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL3VzZXJzL3NpZ25faW4iPgogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS11c2VyIj48L2k+IENvbW8gY2FuZGlkYXRvCjwvYT4gICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL2NvbXBhbmllcy9zaWduX2luIj4KICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYXMgZmEtc3VpdGNhc2UiPjwvaT4gQ29tbyBlbXByZXNhCjwvYT4gICAgICAgICAgICA8L2xpPgogICAgICAgICAgPC91bD4KICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgoKICA8L2Rpdj4KCiAgPCEtLSBEcm9wZG93biBsaXN0IGFwcGVhcmluZyBvbiBtb2JpbGUgb25seSAtLT4KICA8ZGl2IGNsYXNzPSJuYXZiYXItd2Fnb24taXRlbSBoaWRkZW4tbWQgaGlkZGVuLWxnIj4KICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duIj4KICAgICAgPGkgY2xhc3M9ImZhIGZhLWJhcnMgZHJvcGRvd24tdG9nZ2xlIiBkYXRhLXRvZ2dsZT0iZHJvcGRvd24iPjwvaT4KICAgICAgPHVsIGNsYXNzPSJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtcmlnaHQgbmF2YmFyLXdhZ29uLWRyb3Bkb3duLW1lbnUiPgogICAgICAgICAgPGxpPjxhIGNsYXNzPSJuYXZiYXItd2Fnb24taXRlbSIgaHJlZj0iL2pvYnMiPlZFUiBWQUdBUzwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGNsYXNzPSJuYXZiYXItd2Fnb24taXRlbSIgaHJlZj0iL3VzZXJzL3NpZ25faW4iPkxPR0lOIENPTU8gQ0FORElEQVRPPC9hPjwvbGk+CiAgICAgICAgICA8aHI+CiAgICAgICAgICA8bGk+PGEgY2xhc3M9Im5hdmJhci13YWdvbi1pdGVtIiBocmVmPSIvcmVjcnVpdGVyIj5TT1UgRU1QUkVTQTwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGNsYXNzPSJuYXZiYXItd2Fnb24taXRlbSIgaHJlZj0iL2NvbXBhbmllcy9zaWduX2luIj5MT0dJTiBDT01PIEVNUFJFU0E8L2E+PC9saT4KICAgICAgPC91bD4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KCgogICAgCgogICAgCjwhLS0gU3RhcnQgQWRkIG1hcmt1cCBHb29nbGUgZGF0YSB0eXBlcyBKb2JQb3N0aW5nIGh0dHBzOi8vZGV2ZWxvcGVycy5nb29nbGUuY29tL3NlYXJjaC9kb2NzL2RhdGEtdHlwZXMvam9iLXBvc3RpbmcgIC0tPgo8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2xkK2pzb24iPiB7CiAgIkBjb250ZXh0IiA6ICJodHRwOi8vc2NoZW1hLm9yZy8iLAogICJAdHlwZSIgOiAiSm9iUG9zdGluZyIsCiAgInRpdGxlIiA6ICJDaWVudGlzdGEgZGUgZGFkb3MgUHl0aG9uIC0gQmFjay1FbmQiLAogICJkZXNjcmlwdGlvbiIgOiAiPHA+TyBtYWlvciBiYW5jbyBwcml2YWRvIGRhIEFtw6lyaWNhIExhdGluYSBidXNjYSBjaWVudGlzdGFzIGRlIGRhZG9zLg0KDQpOb3Nzb3MgNjAgbWlsaMO1ZXMgZGUgY2xpZW50ZXMgbW92aW1lbnRhbSAxLzQgZGEgZWNvbm9taWEgYnJhc2lsZWlyYS4NCg0KQ29uc2VndWUgaW1hZ2luYXIgYSBxdWFudGlkYWRlIGRlIGRhZG9zIGdlcmFkb3M/DQoNClRlbSBpZGVpYSBkZSBjb21vIHBvZGVtb3MgdXRpbGl6w6EtbG9zIHBhcmEgYXRlbmRlciBtZWxob3Igbm9zc29zIGNsaWVudGVzLCBhZ3JlZ2FuZG8gdmFsb3IgYW8gbmVnw7NjaW8/DQoNCkVzdGFtb3MgYnVzY2FuZG8gY2llbnRpc3RhcyBkZSBkYWRvcywgZXhwZXJ0cyBlbSBBcHJlbmRpemFkbyBkZSBNw6FxdWluYSwgcGFyYSB0cmFiYWxoYXIgbm8gbm9zc28gcmVjw6ltIGNyaWFkbyDigJxDZW50cm8gZGUgRXhjZWzDqm5jaWEgZW0gQmlnIERhdGEgQW5hbHl0aWNz4oCdLCBuYSBjaWRhZGUgZGUgU8OjbyBQYXVsby4gDQoNClZlbmhhIGRlc2Vudm9sdmVyIGUgYXBsaWNhciBvIGVzdGFkbyBkYSBhcnRlIGVtIGJpZyBkYXRhIGFuYWx5dGljcyBwYXJhIGdlcmFyIGFjdGlvbmFibGUgaW5zaWdodHMuIFByb2N1cmFtb3MgZW50dXNpYXN0YXMgZW0gYXByZW5kZXIgY29uc3RhbnRlbWVudGUgZSBxdWUgdGVuaGFtIGludGVyZXNzZSBnZW51w61ubyBwb3IgY2nDqm5jaWEgZGUgZGFkb3MuIA0KDQpPIGNpZW50aXN0YSB0cmFiYWxoYXLDoSBlbSBwcm9ibGVtYXMgY29tcGxleG9zIGUgcXVlIGFwcmVzZW50YW0gYWx0byBwb3RlbmNpYWwgZW0gaW1wYWN0YXIgcG9zaXRpdmFtZW50ZSBvIHJlbGFjaW9uYW1lbnRvIGRvcyBjbGllbnRlcyBjb20gbyBiYW5jby4gVmFsb3JpemFtb3MgbyB0cmFiYWxobyBlbSBlcXVpcGVzIG11bHRpZGlzY2lwbGluYXJlcyBmb3JtYWRhcyBwb3IgY29sYWJvcmFkb3JlcyBkZSB2w6FyaWFzIMOhcmVhcyBkbyBiYW5jby4NCg0KPC9wPiIsCiAgInJlc3BvbnNpYmlsaXRpZXMiIDogIjxwPk8gcXVlIGJ1c2NhbW9zPw0KDQotIFPDs2xpZGEgZm9ybWHDp8OjbyBhY2Fkw6ptaWNhIGVtIHF1YWxxdWVyIMOhcmVhDQoNCi0gQ29uaGVjaW1lbnRvIGRlIHTDqWNuaWNhcyBkZSBhcHJlbmRpemFkbyBkZSBtw6FxdWluYTsNCg0KLSBIYWJpbGlkYWRlIGRlIHByb2dyYW1hw6fDo28gZW0gUHl0aG9uLCBSIGUvb3UgU2NhbGE7DQoNCi0gRXhwZXJpw6puY2lhIGNvbSBnZXN0w6NvIGRlIHBlc3NvYXM7DQoNCk8gcXVlIMOpIGRpZmVyZW5jaWFsPw0KDQotIENvbmhlY2ltZW50byBkZSBiYW5jb3MgZGUgZGFkb3MgcmVsYWNpb25haXMgZSBuw6NvIHJlbGFjaW9uYWlzOw0KDQotIENvbmhlY2ltZW50byBkZSBwcmluY8OtcGlvcyBkZSBjb21wdXRhw6fDo28gcGFyYWxlbGEgZSBkaXN0cmlidcOtZGEgKGUuZy4sIG1hcC1yZWR1Y2UpIGUgZmVycmFtZW50YXMgZGUgQmlnIERhdGEgKGUuZy4sIEhhZG9vcCwgSGl2ZSBlIFNwYXJrKS4NCg0KLSBNZXN0cmFkbyBvdSBkb3V0b3JhZG8gZW0gYXByZW5kaXphZG8gZGUgbcOhcXVpbmEgb3Ugw6FyZWFzIGNvcnJlbGF0YXM7DQoNCi0gUG9ydGZvbGlvIGRlIHByb2pldG9zIHJlbGFjaW9uYWRvcyDDoCBDacOqbmNpYSBkZSBEYWRvcyAoR2l0aHViLCBLYWdnbGUgZXRjLik7DQoNCi0gQ29udHJpYnVpw6fDtWVzIGVtIGNvbXVuaWRhZGVzIChzdGFja292ZXJmbG93LCBRdW9yYSBldGMuKTwvcD4iLAogICJza2lsbHMiIDogIkdpdCwgUHl0aG9uLCBCaWcgRGF0YSIsCiAgImV4cGVyaWVuY2VSZXF1aXJlbWVudHMiIDogIlPDqm5pb3IiLAogICJpZGVudGlmaWVyIjogewogICAgIkB0eXBlIjogIlByb3BlcnR5VmFsdWUiLAogICAgIm5hbWUiOiAiQ29ubmVrdCBUZWNub2xvZ2lhIGUgU29sdWNvZXMgRW0gUmVjdXJzb3MgSHVtYW5vcyBMdGRhIiwKICAgICJ2YWx1ZSI6ICIyMDczIgogIH0sCgogICJkYXRlUG9zdGVkIiA6ICIyMDE4LTA3LTMxIiwKICAidmFsaWRUaHJvdWdoIiA6ICIyMDE4LTA4LTMwIiwKICAgICJlbXBsb3ltZW50VHlwZSIgOiAiRlVMTF9USU1FIiwKICAiaGlyaW5nT3JnYW5pemF0aW9uIiA6IHsKICAgICJAdHlwZSIgOiAiT3JnYW5pemF0aW9uIiwKICAgICJuYW1lIiA6ICJDb25uZWt0IFRlY25vbG9naWEgZSBTb2x1Y29lcyBFbSBSZWN1cnNvcyBIdW1hbm9zIEx0ZGEiLAogICAgInNhbWVBcyIgOiAid3d3LmNvbm5la3QuY29tLmJyIiwKICAgICAgImxvZ28iIDogImh0dHA6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2Fzc2V0cy9jb21wYW55X2F2YXRhci02YzU1Zjc2MjhkZTBhZGY1MjY1MmUyMmIzZjZiZjViZjAwNjcyNTNhYmRjNGJlMTlmYTJiMGZmNTkwNzI2ZmNhLnBuZyIKICB9LAogICJqb2JMb2NhdGlvbiIgOiB7CiAgICAiQHR5cGUiIDogIlBsYWNlIiwKICAgICJhZGRyZXNzIiA6IHsKICAgICAgIkB0eXBlIiA6ICJQb3N0YWxBZGRyZXNzIiwKICAgICAgInN0cmVldEFkZHJlc3MiIDogIlJ1YSBEb25hIEFuYSBOw6lyaSwgMzY4IC0gTW9vY2EsIFPDo28gUGF1bG8gLSBTUCwgQnJhc2lsIiwKICAgICAgImFkZHJlc3NMb2NhbGl0eSIgOiAiU8OjbyBQYXVsbyIsCiAgICAgICJhZGRyZXNzUmVnaW9uIiA6ICItIiwKICAgICAgImFkZHJlc3NDb3VudHJ5IjogIkJSIgogICAgfQogIH0KfQo8L3NjcmlwdD4KPCEtLSBFbmQgQWRkIG1hcmt1cCBHb29nbGUgZGF0YSB0eXBlcyBKb2JQb3N0aW5nICAtLT4KCgoKCiAgPGRpdiBjbGFzcz0id3JhcHBlci1oZWFkZXItam9iLXNob3cgYmFja2dyb3VuZC1ibHVlIHRleHQtY2VudGVyIj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgogICAgICA8cCBjbGFzcz0iY29sb3Itd2hpdGUiPjxpPkJhY2stRW5kPC9pPjwvcD4KICAgICAgPGgxPkNpZW50aXN0YSBkZSBkYWRvcyBQeXRob248L2gxPgogICAgICAgIDxhIGhyZWY9Ii9qb2JzLWdpdCI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0idGFnIGNvbG9yLXdoaXRlIHRhZy1ob3ZlciI+R2l0PC9zcGFuPgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSIvam9icy1weXRob24iPgogICAgICAgICAgPHNwYW4gY2xhc3M9InRhZyBjb2xvci13aGl0ZSB0YWctaG92ZXIiPlB5dGhvbjwvc3Bhbj4KICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iL2pvYnMtYmlnLWRhdGEiPgogICAgICAgICAgPHNwYW4gY2xhc3M9InRhZyBjb2xvci13aGl0ZSB0YWctaG92ZXIiPkJpZyBEYXRhPC9zcGFuPgogICAgICAgIDwvYT4KICAgIDwvZGl2PgogIDwvZGl2PgogIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICA8YnI+CiAgICA8b2wgY2xhc3M9ImJyZWFkY3J1bWIgYmFja2dyb3VuZC13aGl0ZSI+CiAgICAgIDxsaT48YSBocmVmPSIvIj5pbmRleDwvYT48L2xpPgogICAgICA8bGk+PGEgaHJlZj0iL2pvYnMiPnZhZ2FzIHByb2dyYW1hZG9yZXM8L2E+PC9saT4KICAgICAgPGxpIGNsYXNzPSJhY3RpdmUiPkNpZW50aXN0YSBkZSBkYWRvcyBQeXRob248L2xpPgogICAgPC9vbD4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC05Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJ3cmFwcGVyLWNvbnRlbnQtam9iLXNob3ciPgogICAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTUgY29sLW1kLTQiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9hc3NldHMvY29tcGFueV9hdmF0YXItZDFkY2U4NjY5MzljODM4ZWJhMGI4Y2E4OTJjYzczY2Q1OWY3NjE2ZmExZWZhZWIyZTM1OTZjYjI0MmZlM2Q3Ny5wbmciIGFsdD0iQ29ubmVrdCBUZWNub2xvZ2lhIGUgU29sdWNvZXMgRW0gUmVjdXJzb3MgSHVtYW5vcyBMdGRhIiBjbGFzcz0iIj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC03IGNvbC1tZC04Ij4KICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgPGgyPjxhIGhyZWY9Ii9jb21wYW5pZXMvMjA3MyI+Q29ubmVrdCBUZWNub2xvZ2lhIGUgU29sdWNvZXMgRW0gUmVjdXJzb3MgSHVtYW5vcyBMdGRhPC9hPjwvaDI+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGgzPkRlc2NyacOnw6NvIGRhIGVtcHJlc2E8L2gzPgogICAgICAgICAgICA8cD48cD5SZWNydXRhbWVudG8gZGlnaXRhbDwvcD48L3A+CiAgICAgICAgICAgIDxoMz5PIHF1ZSBuw7NzIGJ1c2NhbW9zPC9oMz4KICAgICAgICAgICAgPHA+PHA+TyBtYWlvciBiYW5jbyBwcml2YWRvIGRhIEFtw6lyaWNhIExhdGluYSBidXNjYSBjaWVudGlzdGFzIGRlIGRhZG9zLjwvcD4KCjxwPk5vc3NvcyA2MCBtaWxow7VlcyBkZSBjbGllbnRlcyBtb3ZpbWVudGFtIDEvNCBkYSBlY29ub21pYSBicmFzaWxlaXJhLjwvcD4KCjxwPkNvbnNlZ3VlIGltYWdpbmFyIGEgcXVhbnRpZGFkZSBkZSBkYWRvcyBnZXJhZG9zPzwvcD4KCjxwPlRlbSBpZGVpYSBkZSBjb21vIHBvZGVtb3MgdXRpbGl6w6EtbG9zIHBhcmEgYXRlbmRlciBtZWxob3Igbm9zc29zIGNsaWVudGVzLCBhZ3JlZ2FuZG8gdmFsb3IgYW8gbmVnw7NjaW8/PC9wPgoKPHA+RXN0YW1vcyBidXNjYW5kbyBjaWVudGlzdGFzIGRlIGRhZG9zLCBleHBlcnRzIGVtIEFwcmVuZGl6YWRvIGRlIE3DoXF1aW5hLCBwYXJhIHRyYWJhbGhhciBubyBub3NzbyByZWPDqW0gY3JpYWRvIOKAnENlbnRybyBkZSBFeGNlbMOqbmNpYSBlbSBCaWcgRGF0YSBBbmFseXRpY3PigJ0sIG5hIGNpZGFkZSBkZSBTw6NvIFBhdWxvLiA8L3A+Cgo8cD5WZW5oYSBkZXNlbnZvbHZlciBlIGFwbGljYXIgbyBlc3RhZG8gZGEgYXJ0ZSBlbSBiaWcgZGF0YSBhbmFseXRpY3MgcGFyYSBnZXJhciBhY3Rpb25hYmxlIGluc2lnaHRzLiBQcm9jdXJhbW9zIGVudHVzaWFzdGFzIGVtIGFwcmVuZGVyIGNvbnN0YW50ZW1lbnRlIGUgcXVlIHRlbmhhbSBpbnRlcmVzc2UgZ2VudcOtbm8gcG9yIGNpw6puY2lhIGRlIGRhZG9zLiA8L3A+Cgo8cD5PIGNpZW50aXN0YSB0cmFiYWxoYXLDoSBlbSBwcm9ibGVtYXMgY29tcGxleG9zIGUgcXVlIGFwcmVzZW50YW0gYWx0byBwb3RlbmNpYWwgZW0gaW1wYWN0YXIgcG9zaXRpdmFtZW50ZSBvIHJlbGFjaW9uYW1lbnRvIGRvcyBjbGllbnRlcyBjb20gbyBiYW5jby4gVmFsb3JpemFtb3MgbyB0cmFiYWxobyBlbSBlcXVpcGVzIG11bHRpZGlzY2lwbGluYXJlcyBmb3JtYWRhcyBwb3IgY29sYWJvcmFkb3JlcyBkZSB2w6FyaWFzIMOhcmVhcyBkbyBiYW5jby48L3A+PC9wPgogICAgICAgICAgICA8aDM+UHJpbmNpcGFpcyByZXNwb25zYWJpbGlkYWRlczwvaDM+CiAgICAgICAgICAgIDxwPjxwPk8gcXVlIGJ1c2NhbW9zPzwvcD4KCjxwPi0gU8OzbGlkYSBmb3JtYcOnw6NvIGFjYWTDqm1pY2EgZW0gcXVhbHF1ZXIgw6FyZWE8L3A+Cgo8cD4tIENvbmhlY2ltZW50byBkZSB0w6ljbmljYXMgZGUgYXByZW5kaXphZG8gZGUgbcOhcXVpbmE7PC9wPgoKPHA+LSBIYWJpbGlkYWRlIGRlIHByb2dyYW1hw6fDo28gZW0gUHl0aG9uLCBSIGUvb3UgU2NhbGE7PC9wPgoKPHA+LSBFeHBlcmnDqm5jaWEgY29tIGdlc3TDo28gZGUgcGVzc29hczs8L3A+Cgo8cD5PIHF1ZSDDqSBkaWZlcmVuY2lhbD88L3A+Cgo8cD4tIENvbmhlY2ltZW50byBkZSBiYW5jb3MgZGUgZGFkb3MgcmVsYWNpb25haXMgZSBuw6NvIHJlbGFjaW9uYWlzOzwvcD4KCjxwPi0gQ29uaGVjaW1lbnRvIGRlIHByaW5jw61waW9zIGRlIGNvbXB1dGHDp8OjbyBwYXJhbGVsYSBlIGRpc3RyaWJ1w61kYSAoZS5nLiwgbWFwLXJlZHVjZSkgZSBmZXJyYW1lbnRhcyBkZSBCaWcgRGF0YSAoZS5nLiwgSGFkb29wLCBIaXZlIGUgU3BhcmspLjwvcD4KCjxwPi0gTWVzdHJhZG8gb3UgZG91dG9yYWRvIGVtIGFwcmVuZGl6YWRvIGRlIG3DoXF1aW5hIG91IMOhcmVhcyBjb3JyZWxhdGFzOzwvcD4KCjxwPi0gUG9ydGZvbGlvIGRlIHByb2pldG9zIHJlbGFjaW9uYWRvcyDDoCBDacOqbmNpYSBkZSBEYWRvcyAoR2l0aHViLCBLYWdnbGUgZXRjLik7PC9wPgoKPHA+LSBDb250cmlidWnDp8O1ZXMgZW0gY29tdW5pZGFkZXMgKHN0YWNrb3ZlcmZsb3csIFF1b3JhIGV0Yy4pPC9wPjwvcD4KICAgICAgICAgICAgICA8aDM+TyBxdWUgbsOzcyBvZmVyZWNlbW9zPC9oMz4KICAgICAgICAgICAgICA8cD48cD5WYWxlIFRyYW5zcG9ydGUsIFZhbGUgUmVmZWnDp8OjbywgVmFsZSBBbGltZW50YcOnw6NvLCBQTFIgZSBldGMuPC9wPjwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIj4KCiAgICAgICAgPGRpdiBjbGFzcz0id3JhcHBlci1kZXRhaWxzLWpvYi1zaG93Ij4KICAgICAgICAgIDxoND48aSBjbGFzcz0iZmFzIGZhLXN1aXRjYXNlIj48L2k+IFRpcG8gZGUgZW1wcmVzYTwvaDQ+CiAgICAgICAgICA8cD5QZXF1ZW5hIG91IE3DqWRpYSBlbXByZXNhPC9wPgoKICAgICAgICAgIDxoND48aSBjbGFzcz0iZmFyIGZhLWZpbGUtYWx0Ij48L2k+IFRpcG8gZGUgY29udHJhdG88L2g0PgogICAgICAgICAgPHA+CiAgICAgICAgICAgICAgPGEgaHJlZj0iL2pvYnM/Y29udHJhY3RfdHlwZT1DTFQiPgogICAgICAgICAgICAgICAgQ0xUCjwvYT4gICAgICAgICAgICA8YnI+CiAgICAgICAgICA8L3A+CgogICAgICAgICAgPGg0PjxpIGNsYXNzPSJmYSBmYS1zaWduYWwiPjwvaT4gTsOtdmVsIGRlIGV4cGVyacOqbmNpYTwvaDQ+CiAgICAgICAgICA8cD4KICAgICAgICAgICAgPGEgaHJlZj0iL2pvYnM/ZXhwZXJ0aXNlPVMlQzMlQUFuaW9yIj4KICAgICAgICAgICAgICBTw6puaW9yCjwvYT4gICAgICAgICAgPC9wPgoKCiAgICAgICAgICA8aDQ+PGkgY2xhc3M9ImZhcyBmYS1tYXAtbWFya2VyLWFsdCI+PC9pPiBMb2NhbGl6YcOnw6NvPC9oND4KICAgICAgICAgIDxwPjxhIGhyZWY9IiNtYXAiPiBSdWEgRG9uYSBBbmEgTsOpcmksIDM2OCAtIE1vb2NhLCBTw6NvIFBhdWxvIC0gU1AsIEJyYXNpbDwvYT48L3A+CgogICAgICAgICAgPGg0PjxpIGNsYXNzPSJmYSBmYS1nbG9iZSI+PC9pPiDDiSBwb3Nzw612ZWwgdHJhYmFsaGFyIHJlbW90YW1lbnRlPzwvaDQ+CiAgICAgICAgICAgICAgPHA+IE7Do28gPC9wPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgaGlkZGVuLWxnIGhpZGRlbi1tZCI+CiAgICAgICAgICAgIDxocj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0nc29jaWFsLXNoYXJlLWJ1dHRvbicgZGF0YS10aXRsZT0nQ2llbnRpc3RhIGRlIGRhZG9zIFB5dGhvbicgZGF0YS1pbWc9JycKZGF0YS11cmw9J2h0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9qb2JzLzI3NzEtY2llbnRpc3RhLWRlLWRhZG9zLXB5dGhvbicgZGF0YS1kZXNjPSdSZWNydXRhbWVudG8gZGlnaXRhbCBPIG1haW9yIGJhbmNvIHByaXZhZG8gZGEgQW3DqXJpY2EgTGF0aW5hIGJ1c2NhIGNpZW50aXN0YXMgZGUgZGFkb3MuDQoNCk5vc3NvcyA2MCBtaWxow7VlcyBkZSBjbGllbnRlcyBtb3ZpbWVudGFtIDEvNCBkYSBlY29ub21pYSBicmFzaWxlaXJhLg0KDQpDb25zZWd1ZSBpbWFnaW5hciBhIHF1YW50aWRhZGUgZGUgZGFkb3MgZ2VyYWRvcz8NCg0KVGVtIGlkZWlhIGRlIGNvbW8gcG9kZW1vcyB1dGlsaXrDoS1sb3MgcGFyYSBhdGVuZGVyIG1lbGhvciBub3Nzb3MgY2xpZW50ZXMsIGFncmVnYW5kbyB2YWxvciBhbyBuZWfDs2Npbz8NCg0KRXN0YW1vcyBidXNjYW5kbyBjaWVudGlzdGFzIGRlIGRhZG9zLCBleHBlcnRzIGVtIEFwcmVuZGl6YWRvIGRlIE3DoXF1aW5hLCBwYXJhIHRyYWJhbGhhciBubyBub3NzbyByZWPDqW0gY3JpYWRvIOKAnENlbnRybyBkZSBFeGNlbMOqbmNpYSBlbSBCaWcgRGF0YSBBbmFseXRpY3PigJ0sIG5hIGNpZGFkZSBkZSBTw6NvIFBhdWxvLiANCg0KVmVuaGEgZGVzZW52b2x2ZXIgZSBhcGxpY2FyIG8gZXN0YWRvIGRhIGFydGUgZW0gYmlnIGRhdGEgYW5hbHl0aWNzIHBhcmEgZ2VyYXIgYWN0aW9uYWJsZSBpbnNpZ2h0cy4gUHJvY3VyYW1vcyBlbnR1c2lhc3RhcyBlbSBhcHJlbmRlciBjb25zdGFudGVtZW50ZSBlIHF1ZSB0ZW5oYW0gaW50ZXJlc3NlIGdlbnXDrW5vIHBvciBjacOqbmNpYSBkZSBkYWRvcy4gDQoNCk8gY2llbnRpc3RhIHRyYWJhbGhhcsOhIGVtIHByb2JsZW1hcyBjb21wbGV4b3MgZSBxdWUgYXByZXNlbnRhbSBhbHRvIHBvdGVuY2lhbCBlbSBpbXBhY3RhciBwb3NpdGl2YW1lbnRlIG8gcmVsYWNpb25hbWVudG8gZG9zIGNsaWVudGVzIGNvbSBvIGJhbmNvLiBWYWxvcml6YW1vcyBvIHRyYWJhbGhvIGVtIGVxdWlwZXMgbXVsdGlkaXNjaXBsaW5hcmVzIGZvcm1hZGFzIHBvciBjb2xhYm9yYWRvcmVzIGRlIHbDoXJpYXMgw6FyZWFzIGRvIGJhbmNvLg0KDQonIGRhdGEtdmlhPSdQcm9ncmFtYVRob3InPgo8YSByZWw9Im5vZm9sbG93ICIgZGF0YS1zaXRlPSJ0d2l0dGVyIiBjbGFzcz0ic3NiLWljb24gc3NiLXR3aXR0ZXIiIG9uY2xpY2s9InJldHVybiBTb2NpYWxTaGFyZUJ1dHRvbi5zaGFyZSh0aGlzKTsiIHRpdGxlPSJTaGFyZSB0byBUd2l0dGVyIiBocmVmPSIjIj48L2E+CjxhIHJlbD0ibm9mb2xsb3cgIiBkYXRhLXNpdGU9ImZhY2Vib29rIiBjbGFzcz0ic3NiLWljb24gc3NiLWZhY2Vib29rIiBvbmNsaWNrPSJyZXR1cm4gU29jaWFsU2hhcmVCdXR0b24uc2hhcmUodGhpcyk7IiB0aXRsZT0iU2hhcmUgdG8gRmFjZWJvb2siIGhyZWY9IiMiPjwvYT4KPGEgcmVsPSJub2ZvbGxvdyAiIGRhdGEtc2l0ZT0ibGlua2VkaW4iIGNsYXNzPSJzc2ItaWNvbiBzc2ItbGlua2VkaW4iIG9uY2xpY2s9InJldHVybiBTb2NpYWxTaGFyZUJ1dHRvbi5zaGFyZSh0aGlzKTsiIHRpdGxlPSJTaGFyZSB0byBMaW5rZWRpbiIgaHJlZj0iIyI+PC9hPgo8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2PgoKICA8YnI+CgogIDwhLS0gU3VnZ2VzdGVkIG9mZmVycyAtLT4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0yIGNvbC1tZC00Ij48aHI+PC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOCBjb2wtbWQtNCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIG1hcmdpbi14cy10Ij48c3Ryb25nPiBWYWdhcyBkZSBzZXUgaW50ZXJlc3NlPC9zdHJvbmc+PC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0yIGNvbC1tZC00Ij48aHI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICA8YSBocmVmPSIvam9icy8yNTQyLXByb2dyYW1hZG9yLWphdmEtcGxlbm8iPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBjZWxsLWNhcmQtb2ZmZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0iY29sb3ItYmx1ZSI+UHJvZ3JhbWFkb3IgSmF2YSBQbGVubzwvaDQ+CiAgICAgICAgICAgICAgICAgICAgPHA+VGhlIEhpdmUgQnJhc2lsPC9wPgogICAgICAgICAgICAgICAgICAgIDxzcGFuPlPDo28gUGF1bG88L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CjwvYT4gICAgICAgICAgICAgIDxhIGhyZWY9Ii9qb2JzLzI1NDUtYW5hbGlzdGEtcHl0aG9uLWRldm9wcyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIGNlbGwtY2FyZC1vZmZlciI+CiAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJjb2xvci1ibHVlIj5BbmFsaXN0YSBQeXRob24gRGV2T3BzPC9oND4KICAgICAgICAgICAgICAgICAgICA8cD5SSFRFQyBDb25zdWx0b3JpYSBlbSBJbmZvcm3DoXRpY2EgZSBSZWN1cnNvcyBIdW1hbm9zIEx0ZGE8L3A+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4+U8OjbyBQYXVsbzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KPC9hPiAgICAgICAgICAgICAgPGEgaHJlZj0iL2pvYnMvMjU5NS1zZW5pb3ItcHl0aG9uLWRldmVsb3BlciI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIGNlbGwtY2FyZC1vZmZlciI+CiAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJjb2xvci1ibHVlIj5TZW5pb3IgUHl0aG9uIGRldmVsb3BlcjwvaDQ+CiAgICAgICAgICAgICAgICAgICAgPHA+U2luZ3VsYXJpdHlORVQ8L3A+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4+QmVsbyBIb3Jpem9udGUgTUc8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CjwvYT4gICAgICAgIDwvZGl2PgogICAgICA8YnI+CiAgICA8L2Rpdj4KCiAgPCEtLSBNYXAgR29vZ2xlIC0tPgogIDxkaXYgaWQ9Im1hcCIgc3R5bGU9IndpZHRoOiAxMDAlOyBoZWlnaHQ6IDQwMHB4OyI+PC9kaXY+CiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgPGJyPjxicj4KICAgICAgICA8YSBocmVmPSIvdXNlcnMvc2lnbl91cCI+CiAgICA8ZGl2IGNsYXNzPSJiYW5uZXItc2lnbnVwIGJhY2tncm91bmQtZ3JheSI+CiAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTIiPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIgaGlkZGVuLXhzIj4KICAgICAgICAgICAgPGltZyBzdHlsZT0id2lkdGg6IDkwcHg7IiBzcmM9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9hc3NldHMvdGhvci1iY2E0MjQ4MTk0MzE3YWIzNWE4MDM2NTY4YjYyYWIwODYwY2E3NTI4ZmEzNzRlNWEzMjU4MGU1NTNmMWY3Y2ViLnBuZyIgYWx0PSJUaG9yIj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS03Ij4KICAgICAgICAgIDxoND5DcmllIHVtIHBlcmZpbCBuYSBQcm9ncmFtYVRob3IgcGFyYSA8c3Ryb25nPnNlciBub3RpZmljYWRvIGFzc2ltIHF1ZSBhY29udGVjZXIgdW0gbWF0Y2hpbmcgZW50cmUgdW1hIHZhZ2EgZSBvIHNldSBwZXJmaWw8L3N0cm9uZz4uPC9oND4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMyI+CiAgICAgICAgPGJyIGNsYXNzPSJoaWRkZW4teHMiPgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIGJ0bi1sZyBhbmltYXRlZCB6b29tSW4iIGhyZWY9Ii91c2Vycy9zaWduX3VwIj5NZSBjYWRhc3RyYXI8L2E+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KPC9hPgogIDwvZGl2PgoKICA8IS0tICBNb2RhbCBzaXRlIC0tPgogICAgPCEtLSBPdWlCb3VuY2UgTW9kYWwgLS0+CiAgICA8ZGl2IGNsYXNzPSJtb2RhbCBmYWRlIiBpZD0ib3VpYm91bmNlLW1vZGFsIiB0YWJpbmRleD0iLTEiIHJvbGU9ImRpYWxvZyIgYXJpYS1sYWJlbGxlZGJ5PSJteU1vZGFsTGFiZWwiIGFyaWEtaGlkZGVuPSJ0cnVlIj4KICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIj4KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50IGJhY2tncm91bmQtYmx1ZSB0ZXh0LWNlbnRlciBwYWRkaW5nLWJhc2ljLXQtYiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgICAgPGltZyBzcmM9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9hc3NldHMvZW1haWwtNTI3YTRjZThkZDEyNTUwZDgzNzM3NDVkM2I1ODFkNmE2YmQyZDExOGJkYmQwMmVkZjllOWNjYjhmNjJlMzAwMy5wbmciIGFsdD0iYWxlcnRhIGVtYWlsIiBjbGFzcz0iIj4KICAgICAgICAgICAgPGJyPgogICAgICAgICAgICA8aDIgY2xhc3M9ImNvbG9yLXdoaXRlIHRleHQtMjUgZm9udC1ib2xkLTcwMCI+TsOjbyBwZXJjYSBuZWh1bWEgb3BvcnR1bmlkYWRlITwvaDI+CiAgICAgICAgICAgIDxoNCBjbGFzcz0iY29sb3Itd2hpdGUgdGV4dC0xOCI+Q3JpZSB1bSBwZXJmaWwgbmEgUHJvZ3JhbWFUaG9yIGUgcmVjZWJhIHVtIGFsZXJ0YSBkZSB2YWdhcyBxdWUgY29tYmluZW0gY29tIHNldSBwZXJmaWwuPC9oND4KICAgICAgICAgICAgPGJyPgogICAgICAgICAgICA8YSBjbGFzcz0iYnRuIGJ0bi1zdWNjZXNzIGJ0bi1sZyBmb250LWJvbGQtNzAwIiBocmVmPSIvdXNlcnMvc2lnbl91cD9zb3VyY2U9am9iX3BvcHVwX2V4aXQiPkNSSUFSIFVNQSBDT05UQTwvYT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgoKCgo8ZGl2IGNsYXNzPSJ3cmFwcGVyLWJvdHRvbS1maXhlZCI+CiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC05Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MgYnRuLWxnIGFuaW1hdGVkIHB1bHNlIiBocmVmPSIvdXNlcnMvc2lnbl91cCI+UXVlcm8gbWUgY2FuZGlkYXRhcjwvYT4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC0zIj4KICAgICAgICA8ZGl2IGNsYXNzPSJoaWRkZW4teHMgaGlkZGVuLXNtIiBzdHlsZT0ibWFyZ2luLXRvcDogLTEwcHg7Ij4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0ZXh0LXNtIj4gPHN0cm9uZz5Db21wYXJ0aWxoYXIgdmFnYTo8L3N0cm9uZz48L3NwYW4+IDxicj4KICAgICAgICAgIDxkaXYgY2xhc3M9J3NvY2lhbC1zaGFyZS1idXR0b24nIGRhdGEtdGl0bGU9J0NpZW50aXN0YSBkZSBkYWRvcyBQeXRob24nIGRhdGEtaW1nPScnCmRhdGEtdXJsPSdodHRwczovL3Byb2dyYW1hdGhvci5jb20uYnIvam9icy8yNzcxLWNpZW50aXN0YS1kZS1kYWRvcy1weXRob24nIGRhdGEtZGVzYz0nUmVjcnV0YW1lbnRvIGRpZ2l0YWwgTyBtYWlvciBiYW5jbyBwcml2YWRvIGRhIEFtw6lyaWNhIExhdGluYSBidXNjYSBjaWVudGlzdGFzIGRlIGRhZG9zLg0KDQpOb3Nzb3MgNjAgbWlsaMO1ZXMgZGUgY2xpZW50ZXMgbW92aW1lbnRhbSAxLzQgZGEgZWNvbm9taWEgYnJhc2lsZWlyYS4NCg0KQ29uc2VndWUgaW1hZ2luYXIgYSBxdWFudGlkYWRlIGRlIGRhZG9zIGdlcmFkb3M/DQoNClRlbSBpZGVpYSBkZSBjb21vIHBvZGVtb3MgdXRpbGl6w6EtbG9zIHBhcmEgYXRlbmRlciBtZWxob3Igbm9zc29zIGNsaWVudGVzLCBhZ3JlZ2FuZG8gdmFsb3IgYW8gbmVnw7NjaW8/DQoNCkVzdGFtb3MgYnVzY2FuZG8gY2llbnRpc3RhcyBkZSBkYWRvcywgZXhwZXJ0cyBlbSBBcHJlbmRpemFkbyBkZSBNw6FxdWluYSwgcGFyYSB0cmFiYWxoYXIgbm8gbm9zc28gcmVjw6ltIGNyaWFkbyDigJxDZW50cm8gZGUgRXhjZWzDqm5jaWEgZW0gQmlnIERhdGEgQW5hbHl0aWNz4oCdLCBuYSBjaWRhZGUgZGUgU8OjbyBQYXVsby4gDQoNClZlbmhhIGRlc2Vudm9sdmVyIGUgYXBsaWNhciBvIGVzdGFkbyBkYSBhcnRlIGVtIGJpZyBkYXRhIGFuYWx5dGljcyBwYXJhIGdlcmFyIGFjdGlvbmFibGUgaW5zaWdodHMuIFByb2N1cmFtb3MgZW50dXNpYXN0YXMgZW0gYXByZW5kZXIgY29uc3RhbnRlbWVudGUgZSBxdWUgdGVuaGFtIGludGVyZXNzZSBnZW51w61ubyBwb3IgY2nDqm5jaWEgZGUgZGFkb3MuIA0KDQpPIGNpZW50aXN0YSB0cmFiYWxoYXLDoSBlbSBwcm9ibGVtYXMgY29tcGxleG9zIGUgcXVlIGFwcmVzZW50YW0gYWx0byBwb3RlbmNpYWwgZW0gaW1wYWN0YXIgcG9zaXRpdmFtZW50ZSBvIHJlbGFjaW9uYW1lbnRvIGRvcyBjbGllbnRlcyBjb20gbyBiYW5jby4gVmFsb3JpemFtb3MgbyB0cmFiYWxobyBlbSBlcXVpcGVzIG11bHRpZGlzY2lwbGluYXJlcyBmb3JtYWRhcyBwb3IgY29sYWJvcmFkb3JlcyBkZSB2w6FyaWFzIMOhcmVhcyBkbyBiYW5jby4NCg0KJyBkYXRhLXZpYT0nUHJvZ3JhbWFUaG9yJz4KPGEgcmVsPSJub2ZvbGxvdyAiIGRhdGEtc2l0ZT0idHdpdHRlciIgY2xhc3M9InNzYi1pY29uIHNzYi10d2l0dGVyIiBvbmNsaWNrPSJyZXR1cm4gU29jaWFsU2hhcmVCdXR0b24uc2hhcmUodGhpcyk7IiB0aXRsZT0iU2hhcmUgdG8gVHdpdHRlciIgaHJlZj0iIyI+PC9hPgo8YSByZWw9Im5vZm9sbG93ICIgZGF0YS1zaXRlPSJmYWNlYm9vayIgY2xhc3M9InNzYi1pY29uIHNzYi1mYWNlYm9vayIgb25jbGljaz0icmV0dXJuIFNvY2lhbFNoYXJlQnV0dG9uLnNoYXJlKHRoaXMpOyIgdGl0bGU9IlNoYXJlIHRvIEZhY2Vib29rIiBocmVmPSIjIj48L2E+CjxhIHJlbD0ibm9mb2xsb3cgIiBkYXRhLXNpdGU9ImxpbmtlZGluIiBjbGFzcz0ic3NiLWljb24gc3NiLWxpbmtlZGluIiBvbmNsaWNrPSJyZXR1cm4gU29jaWFsU2hhcmVCdXR0b24uc2hhcmUodGhpcyk7IiB0aXRsZT0iU2hhcmUgdG8gTGlua2VkaW4iIGhyZWY9IiMiPjwvYT4KPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CjwvZGl2PgoKCiAgICA8Zm9vdGVyIGlkPSdmb290ZXInPgogIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hYm91dF91cyI+U29icmUgbsOzczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZWNydWl0ZXIiPlBhcmEgZW1wcmVzYXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvIj5QYXJhIGRlc2Vudm9sdmVkb3JlczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9ibG9nLyI+IEJsb2cgPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3BhcnRuZXJzIj5QYXJjZWlyb3M8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvdGVybXMiPlRlcm1vczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jb250YWN0Ij5Db250YXRvczwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgPHVsIGNsYXNzPSJoaWRkZW4teHMgaGlkZGVuLXNtIj4KICAgICAgICAgIDxsaT48YSBocmVmPSIvam9icyI+VmFnYXMgZGVzZW52b2x2ZWRvcjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLWphdmEiPlZhZ2FzIHByb2dyYW1hZG9yIEpBVkE8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvam9icy1waHAiPlZhZ2FzIHByb2dyYW1hZG9yIFBIUDwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLWMtc2hhcnAiPlZhZ2FzIHByb2dyYW1hZG9yIEMjPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2pvYnMtbm9kZS1qcyI+VmFnYXMgcHJvZ3JhbWFkb3IgTk9ERS5KUzwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLWZyb250LWVuZCI+VmFnYXMgcHJvZ3JhbWFkb3IgRlJPTlQtRU5EPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2pvYnMtbmV0Ij5WYWdhcyBwcm9ncmFtYWRvciAuTkVUPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgICAgICA8dWwgY2xhc3M9ImhpZGRlbi14cyBoaWRkZW4tc20iPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLWFuZHJvaWQiPlZhZ2FzIHByb2dyYW1hZG9yIEFORFJPSUQ8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvam9icy1pb3MiPlZhZ2FzIHByb2dyYW1hZG9yIElPUzwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLXJ1Ynktb24tcmFpbHMiPlZhZ2FzIHByb2dyYW1hZG9yIFJVQlkgT04gUkFJTFM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvam9icy1weXRob24iPlZhZ2FzIHByb2dyYW1hZG9yIFBZVEhPTjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hcmNoaXZlcyI+VmFnYXMgYXJxdWl2YWRhcyBwcm9ncmFtYcOnw6NvPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL29uZWJpdGNvZGUuY29tLyIgdGFyZ2V0PSJfYmxhbmsiPlByb2dyYW1hw6fDo28gWmVuIE9uZUJpdENvZGUgPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIiBzdHlsZT0iZm9udC1zaXplOiAxNHB4OyI+CiAgICAgIDxicj4KICAgICAgPGRpdj4KICAgICAgICA8c3Bhbj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9Qcm9ncmFtYVRob3JCci8iIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iZmFiIGZhLWZhY2Vib29rLWYiPiA8L2k+PC9hPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3Bhbj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vUHJvZ3JhbWFUaG9yIiB0YXJnZXQ9Il9ibGFuayI+PGkgY2xhc3M9ImZhYiBmYS10d2l0dGVyIj4gPC9pPjwvYT4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS9wcm9ncmFtYXRob3IiIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluLWluIj4gPC9pPjwvYT4KICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2Pjxicj4KICAgICAgUHJvZ3JhbWFUaG9yIMKpIDIwMTggLSBUb2RvcyBvcyBkaXJlaXRvcyByZXNlcnZhZG9zCiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9mb290ZXI+CgoKICAgIDwhLS0gR29vZ2xlIE1hcHMgZm9yIEpvYiBvZmZlciAtLT4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2FwaS9qcz9rZXk9QUl6YVN5QVdnWGRLUVgtQk1yU0lXTDR0amp5VXMzOHE3TGsyNjFvJmFtcDtsaWJyYXJpZXM9cGxhY2VzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIvL2Nkbi5yYXdnaXQuY29tL21haG51bmNoaWsvbWFya2VyY2x1c3RlcmVycGx1cy9tYXN0ZXIvZGlzdC9tYXJrZXJjbHVzdGVyZXIubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5yYXdnaXQuY29tL3ByaW50ZXJjdS9nb29nbGUtbWFwcy11dGlsaXR5LWxpYnJhcnktdjMtcmVhZC1vbmx5L21hc3Rlci9pbmZvYm94L3NyYy9pbmZvYm94X3BhY2tlZC5qcyI+PC9zY3JpcHQ+CgogICAgPCEtLSBNYXRjaGluZyBjaXJjbGUgLS0+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMy4xLjAvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CgogICAgPCEtLSBTY3JvbGwgcmV2ZWFsIC0tPgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vdW5wa2cuY29tL3Njcm9sbHJldmVhbEAzLjMuMi9kaXN0L3Njcm9sbHJldmVhbC5taW4uanMiPjwvc2NyaXB0PgoKICAgIDwhLS0gRm9yIHRleHQgYW5pbWF0aW9uIFNraWxsIGluIEhQIGhlYWRlciAtLT4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9nc2FwL2xhdGVzdC9Ud2Vlbk1heC5taW4uanMiPjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgc3JjPSIvYXNzZXRzL2FwcGxpY2F0aW9uLTNmYTUxNTJlYzgwNjIwY2RkMDY3N2IzNmIzNzFiYmIzZGI4M2U0YmJiZDQ0NGM0Mjg1NjkzMjRmODVlODM2ODguanMiPjwvc2NyaXB0PgoKICAgIDwhLS0gQ2xvdWRpbmFyeSAtLT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4kLmNsb3VkaW5hcnkuY29uZmlnKHsiYXBpX2tleSI6IjE5NzExODE3OTU4MzQ0NiIsImNsb3VkX25hbWUiOiJwcm9ncmFtYXRob3IiLCJwcml2YXRlX2NkbiI6ZmFsc2V9KTs8L3NjcmlwdD4KCiAgICAgICAgPHNjcmlwdD4KLy88IVtDREFUQVsKCiAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKCl7JCgiaHRtbCIpLm9uKCJtb3VzZW91dC5vdWlib3VuY2UiLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeyQoIiNvdWlib3VuY2UtbW9kYWwiKS5tb2RhbCgpfXJldHVybiBmdW5jdGlvbih0KXtpZighKHQuY2xpZW50WTwyMCkpcmV0dXJuO2UoKTskKCJodG1sIikub2ZmKCJtb3VzZW91dC5vdWlib3VuY2UiKX19KCkpfSkoKTskKCJoZWFkIikucHJlcGVuZCgnPHN0eWxlIHR5cGU9InRleHQvY3NzIj4ubW9kYWwtb3BlbntvdmVyZmxvdzpoaWRkZW59Lm1vZGFse3Bvc2l0aW9uOmZpeGVkO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bGVmdDowO3otaW5kZXg6MTA0MDtkaXNwbGF5Om5vbmU7b3ZlcmZsb3c6YXV0bztvdmVyZmxvdy15OnNjcm9sbH0ubW9kYWwuZmFkZSAubW9kYWwtZGlhbG9ney13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSgwLC0yNSUpOy1tcy10cmFuc2Zvcm06dHJhbnNsYXRlKDAsLTI1JSk7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLC0yNSUpOy13ZWJraXQtdHJhbnNpdGlvbjotd2Via2l0LXRyYW5zZm9ybSAuM3MgZWFzZS1vdXQ7LW1vei10cmFuc2l0aW9uOi1tb3otdHJhbnNmb3JtIC4zcyBlYXNlLW91dDstby10cmFuc2l0aW9uOi1vLXRyYW5zZm9ybSAuM3MgZWFzZS1vdXQ7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gLjNzIGVhc2Utb3V0fS5tb2RhbC5pbiAubW9kYWwtZGlhbG9ney13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSgwLDApOy1tcy10cmFuc2Zvcm06dHJhbnNsYXRlKDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLDApfS5tb2RhbC1kaWFsb2d7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxMDUwO3dpZHRoOmF1dG87bWFyZ2luOjEwcHh9Lm1vZGFsLWNvbnRlbnR7cG9zaXRpb246cmVsYXRpdmU7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgIzk5OTtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4yKTtib3JkZXItcmFkaXVzOjZweDtvdXRsaW5lOjA7LXdlYmtpdC1ib3gtc2hhZG93OjAgM3B4IDlweCByZ2JhKDAsMCwwLDAuNSk7Ym94LXNoYWRvdzowIDNweCA5cHggcmdiYSgwLDAsMCwwLjUpO2JhY2tncm91bmQtY2xpcDpwYWRkaW5nLWJveH0ubW9kYWwtYmFja2Ryb3B7cG9zaXRpb246Zml4ZWQ7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDoxMDMwO2JhY2tncm91bmQtY29sb3I6IzAwMH0ubW9kYWwtYmFja2Ryb3AuZmFkZXtvcGFjaXR5OjA7ZmlsdGVyOmFscGhhKG9wYWNpdHk9MCl9Lm1vZGFsLWJhY2tkcm9wLmlue29wYWNpdHk6LjU7ZmlsdGVyOmFscGhhKG9wYWNpdHk9NTApfS5tb2RhbC1oZWFkZXJ7bWluLWhlaWdodDoxNi40Mjg1NzE0MjlweDtwYWRkaW5nOjE1cHg7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2U1ZTVlNX0ubW9kYWwtaGVhZGVyIC5jbG9zZXttYXJnaW4tdG9wOi0ycHh9Lm1vZGFsLXRpdGxle21hcmdpbjowO2xpbmUtaGVpZ2h0OjEuNDI4NTcxNDI5fS5tb2RhbC1ib2R5e3Bvc2l0aW9uOnJlbGF0aXZlO3BhZGRpbmc6MjBweDttaW4taGVpZ2h0OjMwMHB4fS5tb2RhbC1mb290ZXJ7cGFkZGluZzoxOXB4IDIwcHggMjBweDttYXJnaW4tdG9wOjE1cHg7dGV4dC1hbGlnbjpyaWdodDtib3JkZXItdG9wOjFweCBzb2xpZCAjZTVlNWU1fS5tb2RhbC1mb290ZXI6YmVmb3JlLC5tb2RhbC1mb290ZXI6YWZ0ZXJ7ZGlzcGxheTp0YWJsZTtjb250ZW50OiIgIn0ubW9kYWwtZm9vdGVyOmFmdGVye2NsZWFyOmJvdGh9Lm1vZGFsLWZvb3RlcjpiZWZvcmUsLm1vZGFsLWZvb3RlcjphZnRlcntkaXNwbGF5OnRhYmxlO2NvbnRlbnQ6IiAifS5tb2RhbC1mb290ZXI6YWZ0ZXJ7Y2xlYXI6Ym90aH0ubW9kYWwtZm9vdGVyIC5idG4rLmJ0bnttYXJnaW4tYm90dG9tOjA7bWFyZ2luLWxlZnQ6NXB4fS5tb2RhbC1mb290ZXIgLmJ0bi1ncm91cCAuYnRuKy5idG57bWFyZ2luLWxlZnQ6LTFweH0ubW9kYWwtZm9vdGVyIC5idG4tYmxvY2srLmJ0bi1ibG9ja3ttYXJnaW4tbGVmdDowfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6NzY4cHgpey5tb2RhbC1kaWFsb2d7d2lkdGg6NjAwcHg7bWFyZ2luOjMwcHggYXV0b30ubW9kYWwtY29udGVudHstd2Via2l0LWJveC1zaGFkb3c6MCA1cHggMTVweCByZ2JhKDAsMCwwLDAuNSk7Ym94LXNoYWRvdzowIDVweCAxNXB4IHJnYmEoMCwwLDAsMC41KX19LmJ0bntkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjZweCAxMnB4O21hcmdpbi1ib3R0b206MDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDpub3JtYWw7bGluZS1oZWlnaHQ6MS40Mjg1NzE0Mjk7dGV4dC1hbGlnbjpjZW50ZXI7d2hpdGUtc3BhY2U6bm93cmFwO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Ym9yZGVyOjFweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItcmFkaXVzOjRweDstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lOy1vLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZX0uYnRuLXByaW1hcnl7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM0MjhiY2E7Ym9yZGVyLWNvbG9yOiMzNTdlYmR9LmJ0bi1wcmltYXJ5OmhvdmVyLC5idG4tcHJpbWFyeTpmb2N1cywuYnRuLXByaW1hcnk6YWN0aXZlLC5idG4tcHJpbWFyeS5hY3RpdmUsLm9wZW4gLmRyb3Bkb3duLXRvZ2dsZS5idG4tcHJpbWFyeXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzMyNzZiMTtib3JkZXItY29sb3I6IzI4NWU4ZX08L3N0eWxlPicpOytmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24odCxuKXt0aGlzLm9wdGlvbnM9bjt0aGlzLiRlbGVtZW50PWUodCk7dGhpcy4kYmFja2Ryb3A9dGhpcy5pc1Nob3duPW51bGw7aWYodGhpcy5vcHRpb25zLnJlbW90ZSl0aGlzLiRlbGVtZW50LmxvYWQodGhpcy5vcHRpb25zLnJlbW90ZSl9O3QuREVGQVVMVFM9e2JhY2tkcm9wOnRydWUsa2V5Ym9hcmQ6dHJ1ZSxzaG93OnRydWV9O3QucHJvdG90eXBlLnRvZ2dsZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpc1shdGhpcy5pc1Nob3duPyJzaG93IjoiaGlkZSJdKGUpfTt0LnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKHQpe3ZhciBuPXRoaXM7dmFyIHI9ZS5FdmVudCgic2hvdy5icy5tb2RhbCIse3JlbGF0ZWRUYXJnZXQ6dH0pO3RoaXMuJGVsZW1lbnQudHJpZ2dlcihyKTtpZih0aGlzLmlzU2hvd258fHIuaXNEZWZhdWx0UHJldmVudGVkKCkpcmV0dXJuO3RoaXMuaXNTaG93bj10cnVlO3RoaXMuZXNjYXBlKCk7dGhpcy4kZWxlbWVudC5vbigiY2xpY2suZGlzbWlzcy5tb2RhbCIsJ1tkYXRhLWRpc21pc3M9Im1vZGFsIl0nLGUucHJveHkodGhpcy5oaWRlLHRoaXMpKTt0aGlzLmJhY2tkcm9wKGZ1bmN0aW9uKCl7dmFyIHI9ZS5zdXBwb3J0LnRyYW5zaXRpb24mJm4uJGVsZW1lbnQuaGFzQ2xhc3MoImZhZGUiKTtpZighbi4kZWxlbWVudC5wYXJlbnQoKS5sZW5ndGgpe24uJGVsZW1lbnQuYXBwZW5kVG8oZG9jdW1lbnQuYm9keSl9bi4kZWxlbWVudC5zaG93KCk7aWYocil7bi4kZWxlbWVudFswXS5vZmZzZXRXaWR0aH1uLiRlbGVtZW50LmFkZENsYXNzKCJpbiIpLmF0dHIoImFyaWEtaGlkZGVuIixmYWxzZSk7bi5lbmZvcmNlRm9jdXMoKTt2YXIgaT1lLkV2ZW50KCJzaG93bi5icy5tb2RhbCIse3JlbGF0ZWRUYXJnZXQ6dH0pO3I/bi4kZWxlbWVudC5maW5kKCIubW9kYWwtZGlhbG9nIikub25lKGUuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCxmdW5jdGlvbigpe24uJGVsZW1lbnQuZm9jdXMoKS50cmlnZ2VyKGkpfSkuZW11bGF0ZVRyYW5zaXRpb25FbmQoMzAwKTpuLiRlbGVtZW50LmZvY3VzKCkudHJpZ2dlcihpKX0pfTt0LnByb3RvdHlwZS5oaWRlPWZ1bmN0aW9uKHQpe2lmKHQpdC5wcmV2ZW50RGVmYXVsdCgpO3Q9ZS5FdmVudCgiaGlkZS5icy5tb2RhbCIpO3RoaXMuJGVsZW1lbnQudHJpZ2dlcih0KTtpZighdGhpcy5pc1Nob3dufHx0LmlzRGVmYXVsdFByZXZlbnRlZCgpKXJldHVybjt0aGlzLmlzU2hvd249ZmFsc2U7dGhpcy5lc2NhcGUoKTtlKGRvY3VtZW50KS5vZmYoImZvY3VzaW4uYnMubW9kYWwiKTt0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKCJpbiIpLmF0dHIoImFyaWEtaGlkZGVuIix0cnVlKS5vZmYoImNsaWNrLmRpc21pc3MubW9kYWwiKTtlLnN1cHBvcnQudHJhbnNpdGlvbiYmdGhpcy4kZWxlbWVudC5oYXNDbGFzcygiZmFkZSIpP3RoaXMuJGVsZW1lbnQub25lKGUuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCxlLnByb3h5KHRoaXMuaGlkZU1vZGFsLHRoaXMpKS5lbXVsYXRlVHJhbnNpdGlvbkVuZCgzMDApOnRoaXMuaGlkZU1vZGFsKCl9O3QucHJvdG90eXBlLmVuZm9yY2VGb2N1cz1mdW5jdGlvbigpe2UoZG9jdW1lbnQpLm9mZigiZm9jdXNpbi5icy5tb2RhbCIpLm9uKCJmb2N1c2luLmJzLm1vZGFsIixlLnByb3h5KGZ1bmN0aW9uKGUpe2lmKHRoaXMuJGVsZW1lbnRbMF0hPT1lLnRhcmdldCYmIXRoaXMuJGVsZW1lbnQuaGFzKGUudGFyZ2V0KS5sZW5ndGgpe3RoaXMuJGVsZW1lbnQuZm9jdXMoKX19LHRoaXMpKX07dC5wcm90b3R5cGUuZXNjYXBlPWZ1bmN0aW9uKCl7aWYodGhpcy5pc1Nob3duJiZ0aGlzLm9wdGlvbnMua2V5Ym9hcmQpe3RoaXMuJGVsZW1lbnQub24oImtleXVwLmRpc21pc3MuYnMubW9kYWwiLGUucHJveHkoZnVuY3Rpb24oZSl7ZS53aGljaD09MjcmJnRoaXMuaGlkZSgpfSx0aGlzKSl9ZWxzZSBpZighdGhpcy5pc1Nob3duKXt0aGlzLiRlbGVtZW50Lm9mZigia2V5dXAuZGlzbWlzcy5icy5tb2RhbCIpfX07dC5wcm90b3R5cGUuaGlkZU1vZGFsPWZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLiRlbGVtZW50LmhpZGUoKTt0aGlzLmJhY2tkcm9wKGZ1bmN0aW9uKCl7ZS5yZW1vdmVCYWNrZHJvcCgpO2UuJGVsZW1lbnQudHJpZ2dlcigiaGlkZGVuLmJzLm1vZGFsIil9KX07dC5wcm90b3R5cGUucmVtb3ZlQmFja2Ryb3A9ZnVuY3Rpb24oKXt0aGlzLiRiYWNrZHJvcCYmdGhpcy4kYmFja2Ryb3AucmVtb3ZlKCk7dGhpcy4kYmFja2Ryb3A9bnVsbH07dC5wcm90b3R5cGUuYmFja2Ryb3A9ZnVuY3Rpb24odCl7dmFyIG49dGhpczt2YXIgcj10aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCJmYWRlIik/ImZhZGUiOiIiO2lmKHRoaXMuaXNTaG93biYmdGhpcy5vcHRpb25zLmJhY2tkcm9wKXt2YXIgaT1lLnN1cHBvcnQudHJhbnNpdGlvbiYmcjt0aGlzLiRiYWNrZHJvcD1lKCc8ZGl2IGNsYXNzPSJtb2RhbC1iYWNrZHJvcCAnK3IrJyIgLz4nKS5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KTt0aGlzLiRlbGVtZW50Lm9uKCJjbGljay5kaXNtaXNzLm1vZGFsIixlLnByb3h5KGZ1bmN0aW9uKGUpe2lmKGUudGFyZ2V0IT09ZS5jdXJyZW50VGFyZ2V0KXJldHVybjt0aGlzLm9wdGlvbnMuYmFja2Ryb3A9PSJzdGF0aWMiP3RoaXMuJGVsZW1lbnRbMF0uZm9jdXMuY2FsbCh0aGlzLiRlbGVtZW50WzBdKTp0aGlzLmhpZGUuY2FsbCh0aGlzKX0sdGhpcykpO2lmKGkpdGhpcy4kYmFja2Ryb3BbMF0ub2Zmc2V0V2lkdGg7dGhpcy4kYmFja2Ryb3AuYWRkQ2xhc3MoImluIik7aWYoIXQpcmV0dXJuO2k/dGhpcy4kYmFja2Ryb3Aub25lKGUuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCx0KS5lbXVsYXRlVHJhbnNpdGlvbkVuZCgxNTApOnQoKX1lbHNlIGlmKCF0aGlzLmlzU2hvd24mJnRoaXMuJGJhY2tkcm9wKXt0aGlzLiRiYWNrZHJvcC5yZW1vdmVDbGFzcygiaW4iKTtlLnN1cHBvcnQudHJhbnNpdGlvbiYmdGhpcy4kZWxlbWVudC5oYXNDbGFzcygiZmFkZSIpP3RoaXMuJGJhY2tkcm9wLm9uZShlLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsdCkuZW11bGF0ZVRyYW5zaXRpb25FbmQoMTUwKTp0KCl9ZWxzZSBpZih0KXt0KCl9fTt2YXIgbj1lLmZuLm1vZGFsO2UuZm4ubW9kYWw9ZnVuY3Rpb24obixyKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9ZSh0aGlzKTt2YXIgcz1pLmRhdGEoImJzLm1vZGFsIik7dmFyIG89ZS5leHRlbmQoe30sdC5ERUZBVUxUUyxpLmRhdGEoKSx0eXBlb2Ygbj09Im9iamVjdCImJm4pO2lmKCFzKWkuZGF0YSgiYnMubW9kYWwiLHM9bmV3IHQodGhpcyxvKSk7aWYodHlwZW9mIG49PSJzdHJpbmciKXNbbl0ocik7ZWxzZSBpZihvLnNob3cpcy5zaG93KHIpfSl9O2UuZm4ubW9kYWwuQ29uc3RydWN0b3I9dDtlLmZuLm1vZGFsLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtlLmZuLm1vZGFsPW47cmV0dXJuIHRoaXN9O2UoZG9jdW1lbnQpLm9uKCJjbGljay5icy5tb2RhbC5kYXRhLWFwaSIsJ1tkYXRhLXRvZ2dsZT0ibW9kYWwiXScsZnVuY3Rpb24odCl7dmFyIG49ZSh0aGlzKTt2YXIgcj1uLmF0dHIoImhyZWYiKTt2YXIgaT1lKG4uYXR0cigiZGF0YS10YXJnZXQiKXx8ciYmci5yZXBsYWNlKC8uKig/PSNbXlxzXSskKS8sIiIpKTt2YXIgcz1pLmRhdGEoIm1vZGFsIik/InRvZ2dsZSI6ZS5leHRlbmQoe3JlbW90ZTohLyMvLnRlc3QocikmJnJ9LGkuZGF0YSgpLG4uZGF0YSgpKTt0LnByZXZlbnREZWZhdWx0KCk7aS5tb2RhbChzLHRoaXMpLm9uZSgiaGlkZSIsZnVuY3Rpb24oKXtuLmlzKCI6dmlzaWJsZSIpJiZuLmZvY3VzKCl9KX0pO2UoZG9jdW1lbnQpLm9uKCJzaG93LmJzLm1vZGFsIiwiLm1vZGFsIixmdW5jdGlvbigpe2UoZG9jdW1lbnQuYm9keSkuYWRkQ2xhc3MoIm1vZGFsLW9wZW4iKX0pLm9uKCJoaWRkZW4uYnMubW9kYWwiLCIubW9kYWwiLGZ1bmN0aW9uKCl7ZShkb2N1bWVudC5ib2R5KS5yZW1vdmVDbGFzcygibW9kYWwtb3BlbiIpfSl9KGpRdWVyeSl9KTsKCi8vXV0+Cjwvc2NyaXB0PiAgICA8c2NyaXB0PgovLzwhW0NEQVRBWwoKICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGhhbmRsZXIgPSBHbWFwcy5idWlsZCgnR29vZ2xlJyk7CiAgICAgICAgaGFuZGxlci5idWlsZE1hcCh7IHByb3ZpZGVyOiB7IHNjcm9sbHdoZWVsOiBmYWxzZSB9LCBpbnRlcm5hbDogeyBpZDogJ21hcCcgfSB9LCBmdW5jdGlvbigpIHsKICAgICAgICAgIG1hcmtlcnMgPSBoYW5kbGVyLmFkZE1hcmtlcnMoW3sibGF0IjotMjMuNTU3NjU1NCwibG5nIjotNDYuNjE1NTY1LCJwaWN0dXJlIjp7InVybCI6Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL3Byb2dyYW1hdGhvci9pbWFnZS91cGxvYWQvY19maWxsLGhfNDIsd180Mi9wbGFjZWhvbGRlcl9md3Vlb3giLCJ3aWR0aCI6NDIsImhlaWdodCI6NDJ9fV0pOwogICAgICAgICAgaGFuZGxlci5ib3VuZHMuZXh0ZW5kV2l0aChtYXJrZXJzKTsKICAgICAgICAgIGhhbmRsZXIuZml0TWFwVG9Cb3VuZHMoKTsKICAgICAgICAgIGlmIChtYXJrZXJzLmxlbmd0aCA9PSAwKSB7CiAgICAgICAgICAgIGhhbmRsZXIuZ2V0TWFwKCkuc2V0Wm9vbSgyKTsKICAgICAgICAgIH0gZWxzZSBpZiAobWFya2Vycy5sZW5ndGggPT0gMSkgewogICAgICAgICAgICBoYW5kbGVyLmdldE1hcCgpLnNldFpvb20oMTQpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9KTsKCi8vXV0+Cjwvc2NyaXB0PgoKICAgIDwhLS0gQ2hhdGJveCAtIENyaXNwIC0tPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPiRjcmlzcD1bXTtDUklTUF9XRUJTSVRFX0lEPSI3OTBmNWRmYS0zZGFkLTQyYmUtYWI5ZC01Y2U1NTYyMDZjOWEiOyhmdW5jdGlvbigpe2Q9ZG9jdW1lbnQ7cz1kLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpO3Muc3JjPSJodHRwczovL2NsaWVudC5jcmlzcC5pbS9sLmpzIjtzLmFzeW5jPTE7ZC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdLmFwcGVuZENoaWxkKHMpO30pKCk7PC9zY3JpcHQ+CgogIDwvYm9keT4KCjwvaHRtbD4K
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:22 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2770-desenvolvedor-a-backend-senior
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:22 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"78d576507755f90ecdfd6ebd3f3c3ab0"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=MU5wbHo4eFZGbkFVVjJXcnJZTm5YeDlZZ1RaQWtScnB0SW1IUStlWWlNZmVrRFRsR1hMTDNxV0l4SDlzT0NkZlRTMmNLQ21ia05NdGNWSGMxdGNvWnhBemcxaGpNS21yRjVZNlhRS0RwU2svbVdiUmoyMkpvZ0l0VVl1MDVkM3Y2TTVLQ0drZUZJeE8vNkZ1a1RpcEhnPT0tLTBaSktlUWFLWVVkYkp3eG5sN3FpaFE9PQ%3D%3D--92b1717686458c4ffe53978a37b9e655c4460fdc;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - d718179a-f1a0-46e6-b2db-de607e9bd57a
      X-Runtime:
      - '0.183964'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:23 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2768-programador-a-ruby-on-rails
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:24 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"bc84855a6ad971e288b5e21967e87f56"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=UzRGSVNpdGVQTU5YY281aXIxWnh4U2VRZEtwd0tKWGdUeGhscnpKdnVETkhBRFRNdWh6UHV3TXFrYTJhb3V4aDVRRmx2dUR6UkRmTytWUjJEdndCQVlKd2hsTzlYcDBJbFlCY1lxYkFpaUFpU1M1U2lDVUh2NHkyQ3pwMk9Ia2ZGeCtqM3JUbHIvdDFBNjNndDJ3VGdBPT0tLUFYWGJMYkprbmdTTzNaQXBCWGFEdFE9PQ%3D%3D--77aef70271d5ab5c6c464dc1e352fa1b6a7c6065;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 066eb1fe-ac00-4303-945b-39884f7a4173
      X-Runtime:
      - '0.410090'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InB0Ij4KICA8aGVhZD4KICAgIDxtZXRhIG5hbWU9ImNzcmYtcGFyYW0iIGNvbnRlbnQ9ImF1dGhlbnRpY2l0eV90b2tlbiIgLz4KPG1ldGEgbmFtZT0iY3NyZi10b2tlbiIgY29udGVudD0iTm9TWVFLeGVnRlVlOGcrblJqSWZOYUhvSGY4MnFzZTNzV1lBZElJUkIxTzBMaE5VQlN2dEdMMkhSR2tJMFNNNWkvbGdyREdiM2ZORzZnVlRTU2lrQ1E9PSIgLz4KICAgIDxtZXRhIG5hbWU9ImFjdGlvbi1jYWJsZS11cmwiIGNvbnRlbnQ9Ii9jYWJsZSIgLz4KCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCBpbml0aWFsLXNjYWxlPTEiPgogICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlLGNocm9tZT0xIj4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPndpbmRvdy5OUkVVTXx8KE5SRVVNPXt9KTtOUkVVTS5pbmZvPXsiYmVhY29uIjoiYmFtLm5yLWRhdGEubmV0IiwiZXJyb3JCZWFjb24iOiJiYW0ubnItZGF0YS5uZXQiLCJsaWNlbnNlS2V5IjoiNmJhOWFiODU3YiIsImFwcGxpY2F0aW9uSUQiOiI0NTQ2MDI3MiIsInRyYW5zYWN0aW9uTmFtZSI6ImNRMElGaFFLQ1FoY1MwMEpEVkFSU1JFT0NoST0iLCJxdWV1ZVRpbWUiOjM5LCJhcHBsaWNhdGlvblRpbWUiOjQyNCwiYWdlbnQiOiIifTwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+d2luZG93Lk5SRVVNfHwoTlJFVU09e30pLF9fbnJfcmVxdWlyZT1mdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihuKXtpZighdFtuXSl7dmFyIG89dFtuXT17ZXhwb3J0czp7fX07ZVtuXVswXS5jYWxsKG8uZXhwb3J0cyxmdW5jdGlvbih0KXt2YXIgbz1lW25dWzFdW3RdO3JldHVybiByKG98fHQpfSxvLG8uZXhwb3J0cyl9cmV0dXJuIHRbbl0uZXhwb3J0c31pZigiZnVuY3Rpb24iPT10eXBlb2YgX19ucl9yZXF1aXJlKXJldHVybiBfX25yX3JlcXVpcmU7Zm9yKHZhciBvPTA7bzxuLmxlbmd0aDtvKyspcihuW29dKTtyZXR1cm4gcn0oezE6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7fWZ1bmN0aW9uIG8oZSx0LG4pe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBpKGUsW2Yubm93KCldLmNvbmNhdCh1KGFyZ3VtZW50cykpLHQ/bnVsbDp0aGlzLG4pLHQ/dm9pZCAwOnRoaXN9fXZhciBpPWUoImhhbmRsZSIpLGE9ZSgyKSx1PWUoMyksYz1lKCJlZSIpLmdldCgidHJhY2VyIiksZj1lKCJsb2FkZXIiKSxzPU5SRVVNOyJ1bmRlZmluZWQiPT10eXBlb2Ygd2luZG93Lm5ld3JlbGljJiYobmV3cmVsaWM9cyk7dmFyIHA9WyJzZXRQYWdlVmlld05hbWUiLCJzZXRDdXN0b21BdHRyaWJ1dGUiLCJzZXRFcnJvckhhbmRsZXIiLCJmaW5pc2hlZCIsImFkZFRvVHJhY2UiLCJpbmxpbmVIaXQiLCJhZGRSZWxlYXNlIl0sZD0iYXBpLSIsbD1kKyJpeG4tIjthKHAsZnVuY3Rpb24oZSx0KXtzW3RdPW8oZCt0LCEwLCJhcGkiKX0pLHMuYWRkUGFnZUFjdGlvbj1vKGQrImFkZFBhZ2VBY3Rpb24iLCEwKSxzLnNldEN1cnJlbnRSb3V0ZU5hbWU9byhkKyJyb3V0ZU5hbWUiLCEwKSx0LmV4cG9ydHM9bmV3cmVsaWMscy5pbnRlcmFjdGlvbj1mdW5jdGlvbigpe3JldHVybihuZXcgcikuZ2V0KCl9O3ZhciBtPXIucHJvdG90eXBlPXtjcmVhdGVUcmFjZXI6ZnVuY3Rpb24oZSx0KXt2YXIgbj17fSxyPXRoaXMsbz0iZnVuY3Rpb24iPT10eXBlb2YgdDtyZXR1cm4gaShsKyJ0cmFjZXIiLFtmLm5vdygpLGUsbl0sciksZnVuY3Rpb24oKXtpZihjLmVtaXQoKG8/IiI6Im5vLSIpKyJmbi1zdGFydCIsW2Yubm93KCkscixvXSxuKSxvKXRyeXtyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9Y2F0Y2goZSl7dGhyb3cgYy5lbWl0KCJmbi1lcnIiLFthcmd1bWVudHMsdGhpcyxlXSxuKSxlfWZpbmFsbHl7Yy5lbWl0KCJmbi1lbmQiLFtmLm5vdygpXSxuKX19fX07YSgic2V0TmFtZSxzZXRBdHRyaWJ1dGUsc2F2ZSxpZ25vcmUsb25FbmQsZ2V0Q29udGV4dCxlbmQsZ2V0Ii5zcGxpdCgiLCIpLGZ1bmN0aW9uKGUsdCl7bVt0XT1vKGwrdCl9KSxuZXdyZWxpYy5ub3RpY2VFcnJvcj1mdW5jdGlvbihlKXsic3RyaW5nIj09dHlwZW9mIGUmJihlPW5ldyBFcnJvcihlKSksaSgiZXJyIixbZSxmLm5vdygpXSl9fSx7fV0sMjpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0KXt2YXIgbj1bXSxyPSIiLGk9MDtmb3IociBpbiBlKW8uY2FsbChlLHIpJiYobltpXT10KHIsZVtyXSksaSs9MSk7cmV0dXJuIG59dmFyIG89T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9cn0se31dLDM6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCxuKXt0fHwodD0wKSwidW5kZWZpbmVkIj09dHlwZW9mIG4mJihuPWU/ZS5sZW5ndGg6MCk7Zm9yKHZhciByPS0xLG89bi10fHwwLGk9QXJyYXkobzwwPzA6byk7KytyPG87KWlbcl09ZVt0K3JdO3JldHVybiBpfXQuZXhwb3J0cz1yfSx7fV0sNDpbZnVuY3Rpb24oZSx0LG4pe3QuZXhwb3J0cz17ZXhpc3RzOiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlJiZ3aW5kb3cucGVyZm9ybWFuY2UudGltaW5nJiYidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0fX0se31dLGVlOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcigpe31mdW5jdGlvbiBvKGUpe2Z1bmN0aW9uIHQoZSl7cmV0dXJuIGUmJmUgaW5zdGFuY2VvZiByP2U6ZT9jKGUsdSxpKTppKCl9ZnVuY3Rpb24gbihuLHIsbyxpKXtpZighZC5hYm9ydGVkfHxpKXtlJiZlKG4scixvKTtmb3IodmFyIGE9dChvKSx1PW0obiksYz11Lmxlbmd0aCxmPTA7ZjxjO2YrKyl1W2ZdLmFwcGx5KGEscik7dmFyIHA9c1t5W25dXTtyZXR1cm4gcCYmcC5wdXNoKFtiLG4scixhXSksYX19ZnVuY3Rpb24gbChlLHQpe3ZbZV09bShlKS5jb25jYXQodCl9ZnVuY3Rpb24gbShlKXtyZXR1cm4gdltlXXx8W119ZnVuY3Rpb24gdyhlKXtyZXR1cm4gcFtlXT1wW2VdfHxvKG4pfWZ1bmN0aW9uIGcoZSx0KXtmKGUsZnVuY3Rpb24oZSxuKXt0PXR8fCJmZWF0dXJlIix5W25dPXQsdCBpbiBzfHwoc1t0XT1bXSl9KX12YXIgdj17fSx5PXt9LGI9e29uOmwsZW1pdDpuLGdldDp3LGxpc3RlbmVyczptLGNvbnRleHQ6dCxidWZmZXI6ZyxhYm9ydDphLGFib3J0ZWQ6ITF9O3JldHVybiBifWZ1bmN0aW9uIGkoKXtyZXR1cm4gbmV3IHJ9ZnVuY3Rpb24gYSgpeyhzLmFwaXx8cy5mZWF0dXJlKSYmKGQuYWJvcnRlZD0hMCxzPWQuYmFja2xvZz17fSl9dmFyIHU9Im5yQGNvbnRleHQiLGM9ZSgiZ29zIiksZj1lKDIpLHM9e30scD17fSxkPXQuZXhwb3J0cz1vKCk7ZC5iYWNrbG9nPXN9LHt9XSxnb3M6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCxuKXtpZihvLmNhbGwoZSx0KSlyZXR1cm4gZVt0XTt2YXIgcj1uKCk7aWYoT2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3Qua2V5cyl0cnl7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOnIsd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMX0pLHJ9Y2F0Y2goaSl7fXJldHVybiBlW3RdPXIscn12YXIgbz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1yfSx7fV0saGFuZGxlOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQsbixyKXtvLmJ1ZmZlcihbZV0sciksby5lbWl0KGUsdCxuKX12YXIgbz1lKCJlZSIpLmdldCgiaGFuZGxlIik7dC5leHBvcnRzPXIsci5lZT1vfSx7fV0saWQ6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUpe3ZhciB0PXR5cGVvZiBlO3JldHVybiFlfHwib2JqZWN0IiE9PXQmJiJmdW5jdGlvbiIhPT10Py0xOmU9PT13aW5kb3c/MDphKGUsaSxmdW5jdGlvbigpe3JldHVybiBvKyt9KX12YXIgbz0xLGk9Im5yQGlkIixhPWUoImdvcyIpO3QuZXhwb3J0cz1yfSx7fV0sbG9hZGVyOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcigpe2lmKCF4Kyspe3ZhciBlPWguaW5mbz1OUkVVTS5pbmZvLHQ9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IilbMF07aWYoc2V0VGltZW91dChzLmFib3J0LDNlNCksIShlJiZlLmxpY2Vuc2VLZXkmJmUuYXBwbGljYXRpb25JRCYmdCkpcmV0dXJuIHMuYWJvcnQoKTtmKHksZnVuY3Rpb24odCxuKXtlW3RdfHwoZVt0XT1uKX0pLGMoIm1hcmsiLFsib25sb2FkIixhKCkraC5vZmZzZXRdLG51bGwsImFwaSIpO3ZhciBuPWQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7bi5zcmM9Imh0dHBzOi8vIitlLmFnZW50LHQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobix0KX19ZnVuY3Rpb24gbygpeyJjb21wbGV0ZSI9PT1kLnJlYWR5U3RhdGUmJmkoKX1mdW5jdGlvbiBpKCl7YygibWFyayIsWyJkb21Db250ZW50IixhKCkraC5vZmZzZXRdLG51bGwsImFwaSIpfWZ1bmN0aW9uIGEoKXtyZXR1cm4gRS5leGlzdHMmJnBlcmZvcm1hbmNlLm5vdz9NYXRoLnJvdW5kKHBlcmZvcm1hbmNlLm5vdygpKToodT1NYXRoLm1heCgobmV3IERhdGUpLmdldFRpbWUoKSx1KSktaC5vZmZzZXR9dmFyIHU9KG5ldyBEYXRlKS5nZXRUaW1lKCksYz1lKCJoYW5kbGUiKSxmPWUoMikscz1lKCJlZSIpLHA9d2luZG93LGQ9cC5kb2N1bWVudCxsPSJhZGRFdmVudExpc3RlbmVyIixtPSJhdHRhY2hFdmVudCIsdz1wLlhNTEh0dHBSZXF1ZXN0LGc9dyYmdy5wcm90b3R5cGU7TlJFVU0ubz17U1Q6c2V0VGltZW91dCxTSTpwLnNldEltbWVkaWF0ZSxDVDpjbGVhclRpbWVvdXQsWEhSOncsUkVROnAuUmVxdWVzdCxFVjpwLkV2ZW50LFBSOnAuUHJvbWlzZSxNTzpwLk11dGF0aW9uT2JzZXJ2ZXJ9O3ZhciB2PSIiK2xvY2F0aW9uLHk9e2JlYWNvbjoiYmFtLm5yLWRhdGEubmV0IixlcnJvckJlYWNvbjoiYmFtLm5yLWRhdGEubmV0IixhZ2VudDoianMtYWdlbnQubmV3cmVsaWMuY29tL25yLTEwNzEubWluLmpzIn0sYj13JiZnJiZnW2xdJiYhL0NyaU9TLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLGg9dC5leHBvcnRzPXtvZmZzZXQ6dSxub3c6YSxvcmlnaW46dixmZWF0dXJlczp7fSx4aHJXcmFwcGFibGU6Yn07ZSgxKSxkW2xdPyhkW2xdKCJET01Db250ZW50TG9hZGVkIixpLCExKSxwW2xdKCJsb2FkIixyLCExKSk6KGRbbV0oIm9ucmVhZHlzdGF0ZWNoYW5nZSIsbykscFttXSgib25sb2FkIixyKSksYygibWFyayIsWyJmaXJzdGJ5dGUiLHVdLG51bGwsImFwaSIpO3ZhciB4PTAsRT1lKDQpfSx7fV19LHt9LFsibG9hZGVyIl0pOzwvc2NyaXB0PgoKCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIG1lZGlhPSJhbGwiIGhyZWY9Ii9hc3NldHMvYXBwbGljYXRpb24tNjJjYTgzYjViOWRjZTdjZDI3MDYyNjkzMzQ2MmQ3Y2RmNWJlZWE1ZmFmMGQ5OWM2M2E5ZTIxYjA3NWViYWMzMi5jc3MiIC8+CgoKICAgIDx0aXRsZT5WQUdBIEZ1bGwgU3RhY2sgLSBQcm9ncmFtYWRvcihhKSBSdWJ5IG9uIFJhaWxzPC90aXRsZT4KICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJNYW50ZXIgbWVsaG9yaWFzIGUgbWFudXRlbsOnw7VlcyBlbSBzaXN0ZW1hcyBqw6EgZXhpc3RlbnRlcy4NCkRhciBpbmljaW8gYSBub3ZhcyBzaXN0ZW1hcyBxdWUgYXBvaWFtIG9zIGrDoSBleGlzdGVudGVzLg0KUG9zc2liaWxpZGFkZSBkZSBlc2NvbGhhIGRlIHRlY25vbG9nLi4uIj4KCiAgICA8IS0tIEFuZHJvaWQgc2VhcmNoIGJhciBjb2xvciAtLT4KICAgIDxtZXRhIG5hbWU9InRoZW1lLWNvbG9yIiBjb250ZW50PSIjMzQ0OTVFIiAvPgoKICAgIDwhLS0gTW9iaWxlIGljb24gLS0+CiAgICA8bGluayBocmVmPSJodHRwczovL3Byb2dyYW1hdGhvci5jb20uYnIvaWNvbnMvaW9zLTEyMHgxMjAucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSIxMjB4MTIwIiAgLz4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9hc3NldHMvaWNvbnMvaW9zLTE1MngxNTItNmI2YmE4NzIxNjYxOWFiZGY5MzVkZTk4YWYzZWZlOWYyMzZjNWU3ZDA1ZTI2NTI0NWQwMjA4MWMzNDcxNGQ0Yi5wbmciIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9IjE1MngxNTIiIC8+CiAgICA8bGluayBocmVmPSJodHRwczovL3Byb2dyYW1hdGhvci5jb20uYnIvYXNzZXRzL2ljb25zL2lvcy0xNjd4MTY3LWEyNTQ1M2E3NTNmYzg3YWQ1MjkwZTMyY2ZjNmE3NDkyYzQzNGQ5MjU3NzQyYTg5MGY1ZTNmYjU4NmVlNjNjMmYucG5nIiByZWw9ImFwcGxlLXRvdWNoLWljb24iIHNpemVzPSIxNjd4MTY3IiAvPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2Fzc2V0cy9pY29ucy9pb3MtMTgweDE4MC1mM2VhNzZlMjQ2MWUyMTc1YTYzYjFmNzE2YmI3ZjcyYmY0NWFlODVhNDhjNzZiMTRmY2E3N2Q0NzI1M2E5ZDBkLnBuZyIgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTgweDE4MCIgLz4KICAgIDxsaW5rIGhyZWY9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9hc3NldHMvaWNvbnMvYW5kcm9pZC0xOTJ4MTkyLTYxYTdkMGMzYTc1Nzk5ZDhiYjZmMDdmMTA0MDUyNzBlNTU5Zjg5MTNhM2Y3ZjZmMWZhOGQxNTc5ODRjNzJkNDIucG5nIiByZWw9Imljb24iIHNpemVzPSIxOTJ4MTkyIiAvPgogICAgPGxpbmsgaHJlZj0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2Fzc2V0cy9pY29ucy9hbmRyb2lkLTEyOHgxMjgtNGJkN2YyNzgxMzIxNWRmY2I5YzQyNzAzMGY5ZDE5MzgwNTExMGQ5ZGI1MWUyMDlhODNmN2E2NjRiYzk1MzhmOC5wbmciIHJlbD0iaWNvbiIgc2l6ZXM9IjEyOHgxMjgiIC8+CgogICAgPCEtLSBGYWNlYm9vayBPcGVuIEdyYXBoIGRhdGEgLS0+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IlZBR0EgRnVsbCBTdGFjayAtIFByb2dyYW1hZG9yKGEpIFJ1Ynkgb24gUmFpbHMiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dHlwZSIgY29udGVudD0id2Vic2l0ZSIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9qb2JzLzI3NjgtcHJvZ3JhbWFkb3ItYS1ydWJ5LW9uLXJhaWxzIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmltYWdlIiBjb250ZW50PSJodHRwOi8vcmVzLmNsb3VkaW5hcnkuY29tL3Byb2dyYW1hdGhvci9pbWFnZS91cGxvYWQvY19maXQsaF8yMDAsd18yMDAvdjE1MzI2NTcyMjUvZG5xaGo3czd0YmVzcXRxYWJhZ3kuanBnIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJNYW50ZXIgbWVsaG9yaWFzIGUgbWFudXRlbsOnw7VlcyBlbSBzaXN0ZW1hcyBqw6EgZXhpc3RlbnRlcy4NCkRhciBpbmljaW8gYSBub3ZhcyBzaXN0ZW1hcyBxdWUgYXBvaWFtIG9zIGrDoSBleGlzdGVudGVzLg0KUG9zc2liaWxpZGFkZSBkZSBlc2NvbGhhIGRlIHRlY25vbG9nLi4uIiAvPgogICAgPG1ldGEgcHJvcGVydHk9Im9nOnNpdGVfbmFtZSIgY29udGVudD0iVkFHQSBGdWxsIFN0YWNrIC0gUHJvZ3JhbWFkb3IoYSkgUnVieSBvbiBSYWlscyIgLz4KCiAgICA8IS0tIFR3aXR0ZXIgQ2FyZCBkYXRhIC0tPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjYXJkIiBjb250ZW50PSJzdW1tYXJ5X2xhcmdlX2ltYWdlIj4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6c2l0ZSIgY29udGVudD0iQFByb2dyYW1hVGhvciI+CiAgICA8bWV0YSBuYW1lPSJ0d2l0dGVyOnRpdGxlIiBjb250ZW50PSJWQUdBIEZ1bGwgU3RhY2sgLSBQcm9ncmFtYWRvcihhKSBSdWJ5IG9uIFJhaWxzIj4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9Ik1hbnRlciBtZWxob3JpYXMgZSBtYW51dGVuw6fDtWVzIGVtIHNpc3RlbWFzIGrDoSBleGlzdGVudGVzLg0KRGFyIGluaWNpbyBhIG5vdmFzIHNpc3RlbWFzIHF1ZSBhcG9pYW0gb3MgasOhIGV4aXN0ZW50ZXMuDQpQb3NzaWJpbGlkYWRlIGRlIGVzY29saGEgZGUgdGVjbm9sb2cuLi4iPgogICAgPG1ldGEgbmFtZT0idHdpdHRlcjpjcmVhdG9yIiBjb250ZW50PSJAUHJvZ3JhbWFUaG9yIj4KICAgIDxtZXRhIG5hbWU9InR3aXR0ZXI6aW1hZ2U6c3JjIiBjb250ZW50PSJodHRwOi8vcmVzLmNsb3VkaW5hcnkuY29tL3Byb2dyYW1hdGhvci9pbWFnZS91cGxvYWQvY19maXQsaF8yMDAsd18yMDAvdjE1MzI2NTcyMjUvZG5xaGo3czd0YmVzcXRxYWJhZ3kuanBnIj4KCiAgICA8IS0tIEdvb2dsZSsgU2NoZW1hLm9yZyBtYXJrdXAgLS0+CiAgICA8bWV0YSBpdGVtcHJvcD0ibmFtZSIgY29udGVudD0iVkFHQSBGdWxsIFN0YWNrIC0gUHJvZ3JhbWFkb3IoYSkgUnVieSBvbiBSYWlscyI+CiAgICA8bWV0YSBpdGVtcHJvcD0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9Ik1hbnRlciBtZWxob3JpYXMgZSBtYW51dGVuw6fDtWVzIGVtIHNpc3RlbWFzIGrDoSBleGlzdGVudGVzLg0KRGFyIGluaWNpbyBhIG5vdmFzIHNpc3RlbWFzIHF1ZSBhcG9pYW0gb3MgasOhIGV4aXN0ZW50ZXMuDQpQb3NzaWJpbGlkYWRlIGRlIGVzY29saGEgZGUgdGVjbm9sb2cuLi4iPgogICAgPG1ldGEgaXRlbXByb3A9ImltYWdlIiBjb250ZW50PSJodHRwOi8vcmVzLmNsb3VkaW5hcnkuY29tL3Byb2dyYW1hdGhvci9pbWFnZS91cGxvYWQvY19maXQsaF8yMDAsd18yMDAvdjE1MzI2NTcyMjUvZG5xaGo3czd0YmVzcXRxYWJhZ3kuanBnIj4KCiAgICA8IS0tIEZhdmljb24gLS0+CiAgICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIHR5cGU9ImltYWdlL3gtaWNvbiIgaHJlZj0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2Fzc2V0cy9mYXZpY29uLWQ0YTM1MDE0YzgzOWNlZWVjOGM2YWM3NmEyOTYzOTFjZTcxMTUyN2U3M2Q2ZmM0Y2ZjODE0NTYwYmRhNzkzNGQucG5nIiAvPgoKICAgIDwhLS0gQW5pbWF0ZS5jc3MgZm9yIGJ1dHRvbiBhbmltYXRpb25zIChodHRwczovL2RhbmVkZW4uZ2l0aHViLmlvL2FuaW1hdGUuY3NzLykgLS0+CiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vY2RuanMuY2xvdWRmbGFyZS5jb20vYWpheC9saWJzL2FuaW1hdGUuY3NzLzMuNS4yL2FuaW1hdGUubWluLmNzcyI+CgogICAgPCEtLSAgQ2Fub25pY2FsICAtLT4KICAgIDxsaW5rIHJlbD0iY2Fub25pY2FsIiBocmVmPSJodHRwczovL3Byb2dyYW1hdGhvci5jb20uYnIvam9icy8yNzY4LXByb2dyYW1hZG9yLWEtcnVieS1vbi1yYWlscyIgLz4KCiAgICA8bGluayByZWw9InN0eWxlc2hlZXQiIGhyZWY9Imh0dHBzOi8vdXNlLmZvbnRhd2Vzb21lLmNvbS9yZWxlYXNlcy92NS4wLjEwL2Nzcy9hbGwuY3NzIiBpbnRlZ3JpdHk9InNoYTM4NC0rZDBQODNuOWthUU1Dd2o4RjRSSkI2NnR6SXdPS21yZGI0Nitwb3JEL092ckorMzdXcUlNN1VvQnR3SE82TmxnIiBjcm9zc29yaWdpbj0iYW5vbnltb3VzIj4KCiAgICA8IS0tIEdvb2dsZSBBbmFseXRpY3MgLS0+CiAgICAgIDxzY3JpcHQgYXN5bmMgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndGFnL2pzP2lkPVVBLTg4Nzc1MTIxLTEiPjwvc2NyaXB0PgogICAgICA8c2NyaXB0PgogICAgICAgIHdpbmRvdy5kYXRhTGF5ZXIgPSB3aW5kb3cuZGF0YUxheWVyIHx8IFtdOwogICAgICAgIGZ1bmN0aW9uIGd0YWcoKXtkYXRhTGF5ZXIucHVzaChhcmd1bWVudHMpO30KICAgICAgICBndGFnKCdqcycsIG5ldyBEYXRlKCkpOwoKICAgICAgICBndGFnKCdjb25maWcnLCAnVUEtODg3NzUxMjEtMScpOwogICAgICA8L3NjcmlwdD4KCiAgICA8IS0tICBDaGFydGtpY2sgLS0+CiAgPC9oZWFkPgoKICA8Ym9keT4KCiAgICA8ZGl2IGNsYXNzPSJuYXZiYXItd2Fnb24gbmF2YmFyLXdhZ29uLWZpeGVkIj4KCiAgPCEtLSBMb2dvIC0tPgogICAgPGEgY2xhc3M9Im5hdmJhci13YWdvbi1icmFuZCIgaHJlZj0iLyI+CiAgICAgIDxpbWcgc3JjPSJodHRwczovL3Byb2dyYW1hdGhvci5jb20uYnIvYXNzZXRzL2xvZ28tcHJvZ3JhbWF0aG9yLTQ2ZjQ1ODI5ZjRjOGQ0ZjViZmQ5ZDlhZWI0NjFiNmQ3MTgzOWMzN2NjMzlmMmMxNDZiNzc5ZDJjNTQ3YmYxN2IucG5nIiBhbHQ9IlByb2dyYW1hVGhvciI+CjwvYT4KICA8IS0tIFJpZ2h0IE5hdmlnYXRpb24gLS0+CiAgPGRpdiBjbGFzcz0ibmF2YmFyLXdhZ29uLXJpZ2h0IGhpZGRlbi14cyBoaWRkZW4tc20iPgoKCiAgICAgIDxzdHJvbmc+PGEgY2xhc3M9Im5hdmJhci13YWdvbi1pdGVtIGNvbG9yLWdyZWVuIiBocmVmPSIvam9icyI+VkVSIFZBR0FTPC9hPjwvc3Ryb25nPgogICAgICA8YSBjbGFzcz0ibmF2YmFyLXdhZ29uLWl0ZW0iIGhyZWY9Ii9yZWNydWl0ZXIiPlNPVSBFTVBSRVNBPC9hPgoKICAgICAgPGRpdiBjbGFzcz0ibmF2YmFyLXdhZ29uLWl0ZW0iPgogICAgICAgIDxzcGFuIGNsYXNzPSJkcm9wZG93biI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iY29sb3ItYmx1ZSBkcm9wZG93bi10b2dnbGUiIGlkPSJuYXZiYXItd2Fnb24tbWVudSIgZGF0YS10b2dnbGU9ZHJvcGRvd24+PHN0cm9uZz5MT0dJTjwvc3Ryb25nPjwvc3Bhbj4KCiAgICAgICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCBuYXZiYXItd2Fnb24tZHJvcGRvd24tbWVudSI+CiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIvdXNlcnMvc2lnbl9pbiI+CiAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmFzIGZhLXVzZXIiPjwvaT4gQ29tbyBjYW5kaWRhdG8KPC9hPiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICA8YSBocmVmPSIvY29tcGFuaWVzL3NpZ25faW4iPgogICAgICAgICAgICAgICAgPGkgY2xhc3M9ImZhcyBmYS1zdWl0Y2FzZSI+PC9pPiBDb21vIGVtcHJlc2EKPC9hPiAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8L3VsPgogICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CgogIDwvZGl2PgoKICA8IS0tIERyb3Bkb3duIGxpc3QgYXBwZWFyaW5nIG9uIG1vYmlsZSBvbmx5IC0tPgogIDxkaXYgY2xhc3M9Im5hdmJhci13YWdvbi1pdGVtIGhpZGRlbi1tZCBoaWRkZW4tbGciPgogICAgPGRpdiBjbGFzcz0iZHJvcGRvd24iPgogICAgICA8aSBjbGFzcz0iZmEgZmEtYmFycyBkcm9wZG93bi10b2dnbGUiIGRhdGEtdG9nZ2xlPSJkcm9wZG93biI+PC9pPgogICAgICA8dWwgY2xhc3M9ImRyb3Bkb3duLW1lbnUgZHJvcGRvd24tbWVudS1yaWdodCBuYXZiYXItd2Fnb24tZHJvcGRvd24tbWVudSI+CiAgICAgICAgICA8bGk+PGEgY2xhc3M9Im5hdmJhci13YWdvbi1pdGVtIiBocmVmPSIvam9icyI+VkVSIFZBR0FTPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgY2xhc3M9Im5hdmJhci13YWdvbi1pdGVtIiBocmVmPSIvdXNlcnMvc2lnbl9pbiI+TE9HSU4gQ09NTyBDQU5ESURBVE88L2E+PC9saT4KICAgICAgICAgIDxocj4KICAgICAgICAgIDxsaT48YSBjbGFzcz0ibmF2YmFyLXdhZ29uLWl0ZW0iIGhyZWY9Ii9yZWNydWl0ZXIiPlNPVSBFTVBSRVNBPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgY2xhc3M9Im5hdmJhci13YWdvbi1pdGVtIiBocmVmPSIvY29tcGFuaWVzL3NpZ25faW4iPkxPR0lOIENPTU8gRU1QUkVTQTwvYT48L2xpPgogICAgICA8L3VsPgogICAgPC9kaXY+CiAgPC9kaXY+CjwvZGl2PgoKCiAgICAKCiAgICAKPCEtLSBTdGFydCBBZGQgbWFya3VwIEdvb2dsZSBkYXRhIHR5cGVzIEpvYlBvc3RpbmcgaHR0cHM6Ly9kZXZlbG9wZXJzLmdvb2dsZS5jb20vc2VhcmNoL2RvY3MvZGF0YS10eXBlcy9qb2ItcG9zdGluZyAgLS0+CjxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vbGQranNvbiI+IHsKICAiQGNvbnRleHQiIDogImh0dHA6Ly9zY2hlbWEub3JnLyIsCiAgIkB0eXBlIiA6ICJKb2JQb3N0aW5nIiwKICAidGl0bGUiIDogIlByb2dyYW1hZG9yKGEpIFJ1Ynkgb24gUmFpbHMgLSBGdWxsIFN0YWNrIiwKICAiZGVzY3JpcHRpb24iIDogIjxwPk1hbnRlciBtZWxob3JpYXMgZSBtYW51dGVuw6fDtWVzIGVtIHNpc3RlbWFzIGrDoSBleGlzdGVudGVzLg0KRGFyIGluaWNpbyBhIG5vdmFzIHNpc3RlbWFzIHF1ZSBhcG9pYW0gb3MgasOhIGV4aXN0ZW50ZXMuDQpQb3NzaWJpbGlkYWRlIGRlIGVzY29saGEgZGUgdGVjbm9sb2dpYXMgZSBlc3R1ZG8gZGUgbm92YXMgbGluZ3VhZ2VucyBjYXNvIHNlamEgZGUgaW50ZXJlc3NlLjwvcD4iLAogICJyZXNwb25zaWJpbGl0aWVzIiA6ICI8cD5Qcm9ncmFtYcOnw6NvIG5hIGxpbmd1YWdlbSBSdWJ5IG9uIFJhaWxzLCB1dGlsaXphbW9zIHRhbWLDqW0gUEhQIExhcmF2ZWwuDQpNYW50ZXIgb3Mgc2lzdGVtYXMgY29tIGEgbmVjZXNzaWRhZGUgZGUgaW5mcmFlc3RydXR1cmEgdXRpbGl6YW5kbyBtw6FxdWluYSBuYSBwbGF0YWZvcm1hIERpZ2l0YWwgT2NlYW4uDQpDb25oZWNpbWVudG8gbmVjZXNzw6FyaW8uDQpSZXN0IEFQSSYjMzk7cw0KRnJvbnQtZW5kIChCb290c3RyYXAgZW50cmUgb3V0cm9zKQ0KQ29uaGVjaW1lbnRvIGRlIGVzdHJ1dHVyYSBwYXJhIGJhbmNvIGRlIGRhZG9zLg0KDQpEaWZlcmVuY2lhbDoNCkNvbmhlY2ltZW50byBlbSBJb25pYyBjb20gYW5ndWxhci48L3A+IiwKICAic2tpbGxzIiA6ICJTUUwsIE15U1FMLCBSdWJ5IG9uIFJhaWxzIiwKICAiZXhwZXJpZW5jZVJlcXVpcmVtZW50cyIgOiAiUGxlbm8iLAogICJpZGVudGlmaWVyIjogewogICAgIkB0eXBlIjogIlByb3BlcnR5VmFsdWUiLAogICAgIm5hbWUiOiAiRGV2VXAgU2lzdGVtYXMiLAogICAgInZhbHVlIjogIjIwNTMiCiAgfSwKCiAgImRhdGVQb3N0ZWQiIDogIjIwMTgtMDctMzEiLAogICJ2YWxpZFRocm91Z2giIDogIjIwMTgtMDgtMzAiLAogICAgImVtcGxveW1lbnRUeXBlIiA6ICJDT05UUkFDVE9SIiwKICAiaGlyaW5nT3JnYW5pemF0aW9uIiA6IHsKICAgICJAdHlwZSIgOiAiT3JnYW5pemF0aW9uIiwKICAgICJuYW1lIiA6ICJEZXZVcCBTaXN0ZW1hcyIsCiAgICAic2FtZUFzIiA6ICJkZXZ1cHNpc3RlbWFzLmNvbS5iciIsCiAgICAgICJsb2dvIiA6ICJodHRwOi8vcmVzLmNsb3VkaW5hcnkuY29tL3Byb2dyYW1hdGhvci9pbWFnZS91cGxvYWQvY19maXQsaF8yMDAsd18yMDAvdjE1MzI2NTcyMjUvZG5xaGo3czd0YmVzcXRxYWJhZ3kuanBnIgogIH0sCiAgImpvYkxvY2F0aW9uIiA6IHsKICAgICJAdHlwZSIgOiAiUGxhY2UiLAogICAgImFkZHJlc3MiIDogewogICAgICAiQHR5cGUiIDogIlBvc3RhbEFkZHJlc3MiLAogICAgICAic3RyZWV0QWRkcmVzcyIgOiAiQXYuIEhpZ2lubyBNdXppIEZpbGhvLCA1MjkgLSBNaXJhbnRlLCBNYXLDrWxpYSAtIFNQLCBCcmFzaWwiLAogICAgICAiYWRkcmVzc0xvY2FsaXR5IiA6ICJNYXLDrWxpYSIsCiAgICAgICJhZGRyZXNzUmVnaW9uIiA6ICItIiwKICAgICAgImFkZHJlc3NDb3VudHJ5IjogIkJSIgogICAgfQogIH0KfQo8L3NjcmlwdD4KPCEtLSBFbmQgQWRkIG1hcmt1cCBHb29nbGUgZGF0YSB0eXBlcyBKb2JQb3N0aW5nICAtLT4KCgoKCiAgPGRpdiBjbGFzcz0id3JhcHBlci1oZWFkZXItam9iLXNob3cgYmFja2dyb3VuZC1ibHVlIHRleHQtY2VudGVyIj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgogICAgICA8cCBjbGFzcz0iY29sb3Itd2hpdGUiPjxpPkZ1bGwgU3RhY2s8L2k+PC9wPgogICAgICA8aDE+UHJvZ3JhbWFkb3IoYSkgUnVieSBvbiBSYWlsczwvaDE+CiAgICAgICAgPGEgaHJlZj0iL2pvYnMtc3FsIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0YWcgY29sb3Itd2hpdGUgdGFnLWhvdmVyIj5TUUw8L3NwYW4+CiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9Ii9qb2JzLW15c3FsIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0YWcgY29sb3Itd2hpdGUgdGFnLWhvdmVyIj5NeVNRTDwvc3Bhbj4KICAgICAgICA8L2E+CiAgICAgICAgPGEgaHJlZj0iL2pvYnMtcnVieS1vbi1yYWlscyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0idGFnIGNvbG9yLXdoaXRlIHRhZy1ob3ZlciI+UnVieSBvbiBSYWlsczwvc3Bhbj4KICAgICAgICA8L2E+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgPGJyPgogICAgPG9sIGNsYXNzPSJicmVhZGNydW1iIGJhY2tncm91bmQtd2hpdGUiPgogICAgICA8bGk+PGEgaHJlZj0iLyI+aW5kZXg8L2E+PC9saT4KICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzIj52YWdhcyBwcm9ncmFtYWRvcmVzPC9hPjwvbGk+CiAgICAgIDxsaSBjbGFzcz0iYWN0aXZlIj5Qcm9ncmFtYWRvcihhKSBSdWJ5IG9uIFJhaWxzPC9saT4KICAgIDwvb2w+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtOSI+CiAgICAgICAgPGRpdiBjbGFzcz0id3JhcHBlci1jb250ZW50LWpvYi1zaG93Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS01IGNvbC1tZC00Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PSJEZXZVcCBTaXN0ZW1hcyIgc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9wcm9ncmFtYXRob3IvaW1hZ2UvdXBsb2FkL2NfZml0LGhfMjAwLHdfMjAwL3YxNTMyNjU3MjI1L2RucWhqN3M3dGJlc3F0cWFiYWd5LmpwZyIgLz4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC03IGNvbC1tZC04Ij4KICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgPGgyPjxhIGhyZWY9Ii9jb21wYW5pZXMvMjA1MyI+RGV2VXAgU2lzdGVtYXM8L2E+PC9oMj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8aDM+RGVzY3Jpw6fDo28gZGEgZW1wcmVzYTwvaDM+CiAgICAgICAgICAgIDxwPjxwPlN0YXJ0dXAgbmEgcXVlIGF0dWEgY29tbyBmw6FicmljYSBkZSBzb2Z0d2FyZSBlIHBhcmEgYXBsaWNhw6fDtWVzIHByw7Nwcmlhcy48L3A+PC9wPgogICAgICAgICAgICA8aDM+TyBxdWUgbsOzcyBidXNjYW1vczwvaDM+CiAgICAgICAgICAgIDxwPjxwPk1hbnRlciBtZWxob3JpYXMgZSBtYW51dGVuw6fDtWVzIGVtIHNpc3RlbWFzIGrDoSBleGlzdGVudGVzLgo8YnIgLz5EYXIgaW5pY2lvIGEgbm92YXMgc2lzdGVtYXMgcXVlIGFwb2lhbSBvcyBqw6EgZXhpc3RlbnRlcy4KPGJyIC8+UG9zc2liaWxpZGFkZSBkZSBlc2NvbGhhIGRlIHRlY25vbG9naWFzIGUgZXN0dWRvIGRlIG5vdmFzIGxpbmd1YWdlbnMgY2FzbyBzZWphIGRlIGludGVyZXNzZS48L3A+PC9wPgogICAgICAgICAgICA8aDM+UHJpbmNpcGFpcyByZXNwb25zYWJpbGlkYWRlczwvaDM+CiAgICAgICAgICAgIDxwPjxwPlByb2dyYW1hw6fDo28gbmEgbGluZ3VhZ2VtIFJ1Ynkgb24gUmFpbHMsIHV0aWxpemFtb3MgdGFtYsOpbSBQSFAgTGFyYXZlbC4KPGJyIC8+TWFudGVyIG9zIHNpc3RlbWFzIGNvbSBhIG5lY2Vzc2lkYWRlIGRlIGluZnJhZXN0cnV0dXJhIHV0aWxpemFuZG8gbcOhcXVpbmEgbmEgcGxhdGFmb3JtYSBEaWdpdGFsIE9jZWFuLgo8YnIgLz5Db25oZWNpbWVudG8gbmVjZXNzw6FyaW8uCjxiciAvPlJlc3QgQVBJJ3MKPGJyIC8+RnJvbnQtZW5kIChCb290c3RyYXAgZW50cmUgb3V0cm9zKQo8YnIgLz5Db25oZWNpbWVudG8gZGUgZXN0cnV0dXJhIHBhcmEgYmFuY28gZGUgZGFkb3MuPC9wPgoKPHA+RGlmZXJlbmNpYWw6CjxiciAvPkNvbmhlY2ltZW50byBlbSBJb25pYyBjb20gYW5ndWxhci48L3A+PC9wPgogICAgICAgICAgICAgIDxoMz5PIHF1ZSBuw7NzIG9mZXJlY2Vtb3M8L2gzPgogICAgICAgICAgICAgIDxwPjxwPlBvc3NpYmlsaWRhZGUgZGUgZmxleGliaWxpemFyIGhvcsOhcmlvcy4KPGJyIC8+RW0gY29tYmluYcOnw6NvIGNvbSBhIGVxdWlwZSBkZSBnZXN0w6NvLjwvcD48L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtMyI+CgogICAgICAgIDxkaXYgY2xhc3M9IndyYXBwZXItZGV0YWlscy1qb2Itc2hvdyI+CiAgICAgICAgICA8aDQ+PGkgY2xhc3M9ImZhcyBmYS1zdWl0Y2FzZSI+PC9pPiBUaXBvIGRlIGVtcHJlc2E8L2g0PgogICAgICAgICAgPHA+U3RhcnR1cDwvcD4KCiAgICAgICAgICA8aDQ+PGkgY2xhc3M9ImZhciBmYS1maWxlLWFsdCI+PC9pPiBUaXBvIGRlIGNvbnRyYXRvPC9oND4KICAgICAgICAgIDxwPgogICAgICAgICAgICAgIDxhIGhyZWY9Ii9qb2JzP2NvbnRyYWN0X3R5cGU9UEoiPgogICAgICAgICAgICAgICAgUEoKPC9hPiAgICAgICAgICAgIDxicj4KICAgICAgICAgIDwvcD4KCiAgICAgICAgICA8aDQ+PGkgY2xhc3M9ImZhIGZhLXNpZ25hbCI+PC9pPiBOw612ZWwgZGUgZXhwZXJpw6puY2lhPC9oND4KICAgICAgICAgIDxwPgogICAgICAgICAgICA8YSBocmVmPSIvam9icz9leHBlcnRpc2U9UGxlbm8iPgogICAgICAgICAgICAgIFBsZW5vCjwvYT4gICAgICAgICAgPC9wPgoKCiAgICAgICAgICA8aDQ+PGkgY2xhc3M9ImZhcyBmYS1tYXAtbWFya2VyLWFsdCI+PC9pPiBMb2NhbGl6YcOnw6NvPC9oND4KICAgICAgICAgIDxwPjxhIGhyZWY9IiNtYXAiPiBBdi4gSGlnaW5vIE11emkgRmlsaG8sIDUyOSAtIE1pcmFudGUsIE1hcsOtbGlhIC0gU1AsIEJyYXNpbDwvYT48L3A+CgogICAgICAgICAgPGg0PjxpIGNsYXNzPSJmYSBmYS1nbG9iZSI+PC9pPiDDiSBwb3Nzw612ZWwgdHJhYmFsaGFyIHJlbW90YW1lbnRlPzwvaDQ+CiAgICAgICAgICAgICAgPHA+IFNpbSA8L3A+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBoaWRkZW4tbGcgaGlkZGVuLW1kIj4KICAgICAgICAgICAgPGhyPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSdzb2NpYWwtc2hhcmUtYnV0dG9uJyBkYXRhLXRpdGxlPSdQcm9ncmFtYWRvcihhKSBSdWJ5IG9uIFJhaWxzJyBkYXRhLWltZz0nJwpkYXRhLXVybD0naHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2pvYnMvMjc2OC1wcm9ncmFtYWRvci1hLXJ1Ynktb24tcmFpbHMnIGRhdGEtZGVzYz0nU3RhcnR1cCBuYSBxdWUgYXR1YSBjb21vIGbDoWJyaWNhIGRlIHNvZnR3YXJlIGUgcGFyYSBhcGxpY2HDp8O1ZXMgcHLDs3ByaWFzLiBNYW50ZXIgbWVsaG9yaWFzIGUgbWFudXRlbsOnw7VlcyBlbSBzaXN0ZW1hcyBqw6EgZXhpc3RlbnRlcy4NCkRhciBpbmljaW8gYSBub3ZhcyBzaXN0ZW1hcyBxdWUgYXBvaWFtIG9zIGrDoSBleGlzdGVudGVzLg0KUG9zc2liaWxpZGFkZSBkZSBlc2NvbGhhIGRlIHRlY25vbG9naWFzIGUgZXN0dWRvIGRlIG5vdmFzIGxpbmd1YWdlbnMgY2FzbyBzZWphIGRlIGludGVyZXNzZS4nIGRhdGEtdmlhPSdQcm9ncmFtYVRob3InPgo8YSByZWw9Im5vZm9sbG93ICIgZGF0YS1zaXRlPSJ0d2l0dGVyIiBjbGFzcz0ic3NiLWljb24gc3NiLXR3aXR0ZXIiIG9uY2xpY2s9InJldHVybiBTb2NpYWxTaGFyZUJ1dHRvbi5zaGFyZSh0aGlzKTsiIHRpdGxlPSJTaGFyZSB0byBUd2l0dGVyIiBocmVmPSIjIj48L2E+CjxhIHJlbD0ibm9mb2xsb3cgIiBkYXRhLXNpdGU9ImZhY2Vib29rIiBjbGFzcz0ic3NiLWljb24gc3NiLWZhY2Vib29rIiBvbmNsaWNrPSJyZXR1cm4gU29jaWFsU2hhcmVCdXR0b24uc2hhcmUodGhpcyk7IiB0aXRsZT0iU2hhcmUgdG8gRmFjZWJvb2siIGhyZWY9IiMiPjwvYT4KPGEgcmVsPSJub2ZvbGxvdyAiIGRhdGEtc2l0ZT0ibGlua2VkaW4iIGNsYXNzPSJzc2ItaWNvbiBzc2ItbGlua2VkaW4iIG9uY2xpY2s9InJldHVybiBTb2NpYWxTaGFyZUJ1dHRvbi5zaGFyZSh0aGlzKTsiIHRpdGxlPSJTaGFyZSB0byBMaW5rZWRpbiIgaHJlZj0iIyI+PC9hPgo8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2PgoKICA8YnI+CgogIDwhLS0gU3VnZ2VzdGVkIG9mZmVycyAtLT4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0yIGNvbC1tZC00Ij48aHI+PC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tOCBjb2wtbWQtNCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIG1hcmdpbi14cy10Ij48c3Ryb25nPiBWYWdhcyBkZSBzZXUgaW50ZXJlc3NlPC9zdHJvbmc+PC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0yIGNvbC1tZC00Ij48aHI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICAgICAgICA8YSBocmVmPSIvam9icy8yNDg5LWF1dG9tYXRpemFkb3ItYS1kZS10ZXN0ZXMiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBjZWxsLWNhcmQtb2ZmZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0iY29sb3ItYmx1ZSI+QXV0b21hdGl6YWRvcihhKSBkZSBUZXN0ZXM8L2g0PgogICAgICAgICAgICAgICAgICAgIDxwPllhbWFuPC9wPgogICAgICAgICAgICAgICAgICAgIDxzcGFuPkJhcnVlcmk8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CjwvYT4gICAgICAgICAgICAgIDxhIGhyZWY9Ii9qb2JzLzI1MDktYW5hbGlzdGEtZGUtZGVzZW52b2x2aW1lbnRvLXNpc3RlbWFzLWUtcHJvZHV0b3MiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTQiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBjZWxsLWNhcmQtb2ZmZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNCBjbGFzcz0iY29sb3ItYmx1ZSI+QW5hbGlzdGEgZGUgRGVzZW52b2x2aW1lbnRvIC0gU2lzdGVtYXMgZSBQcm9kdXRvcyAgICA8L2g0PgogICAgICAgICAgICAgICAgICAgIDxwPktpbmdIb3N0PC9wPgogICAgICAgICAgICAgICAgICAgIDxzcGFuPlBvcnRvIEFsZWdyZTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KPC9hPiAgICAgICAgICAgICAgPGEgaHJlZj0iL2pvYnMvMjUzMi1wcm9ncmFtYWRvci1hLW5ldCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIGNlbGwtY2FyZC1vZmZlciI+CiAgICAgICAgICAgICAgICAgICAgPGg0IGNsYXNzPSJjb2xvci1ibHVlIj5Qcm9ncmFtYWRvcihhKSAuTkVUIDwvaDQ+CiAgICAgICAgICAgICAgICAgICAgPHA+SGV4YWdvbiBCcmFzaWw8L3A+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4+U8OjbyBQYXVsbzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KPC9hPiAgICAgICAgPC9kaXY+CiAgICAgIDxicj4KICAgIDwvZGl2PgoKICA8IS0tIE1hcCBHb29nbGUgLS0+CiAgPGRpdiBpZD0ibWFwIiBzdHlsZT0id2lkdGg6IDEwMCU7IGhlaWdodDogNDAwcHg7Ij48L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICA8YnI+PGJyPgogICAgICAgIDxhIGhyZWY9Ii91c2Vycy9zaWduX3VwIj4KICAgIDxkaXYgY2xhc3M9ImJhbm5lci1zaWdudXAgYmFja2dyb3VuZC1ncmF5Ij4KICAgICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciBoaWRkZW4teHMiPgogICAgICAgICAgICA8aW1nIHN0eWxlPSJ3aWR0aDogOTBweDsiIHNyYz0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2Fzc2V0cy90aG9yLWJjYTQyNDgxOTQzMTdhYjM1YTgwMzY1NjhiNjJhYjA4NjBjYTc1MjhmYTM3NGU1YTMyNTgwZTU1M2YxZjdjZWIucG5nIiBhbHQ9IlRob3IiPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTciPgogICAgICAgICAgPGg0PkNyaWUgdW0gcGVyZmlsIG5hIFByb2dyYW1hVGhvciBwYXJhIDxzdHJvbmc+c2VyIG5vdGlmaWNhZG8gYXNzaW0gcXVlIGFjb250ZWNlciB1bSBtYXRjaGluZyBlbnRyZSB1bWEgdmFnYSBlIG8gc2V1IHBlcmZpbDwvc3Ryb25nPi48L2g0PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0zIj4KICAgICAgICA8YnIgY2xhc3M9ImhpZGRlbi14cyI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MgYnRuLWxnIGFuaW1hdGVkIHpvb21JbiIgaHJlZj0iL3VzZXJzL3NpZ25fdXAiPk1lIGNhZGFzdHJhcjwvYT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2Pgo8L2E+CiAgPC9kaXY+CgogIDwhLS0gIE1vZGFsIHNpdGUgLS0+CiAgICA8IS0tIE91aUJvdW5jZSBNb2RhbCAtLT4KICAgIDxkaXYgY2xhc3M9Im1vZGFsIGZhZGUiIGlkPSJvdWlib3VuY2UtbW9kYWwiIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBhcmlhLWxhYmVsbGVkYnk9Im15TW9kYWxMYWJlbCIgYXJpYS1oaWRkZW49InRydWUiPgogICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2ciPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQgYmFja2dyb3VuZC1ibHVlIHRleHQtY2VudGVyIHBhZGRpbmctYmFzaWMtdC1iIj4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICA8aW1nIHNyYz0iaHR0cHM6Ly9wcm9ncmFtYXRob3IuY29tLmJyL2Fzc2V0cy9lbWFpbC01MjdhNGNlOGRkMTI1NTBkODM3Mzc0NWQzYjU4MWQ2YTZiZDJkMTE4YmRiZDAyZWRmOWU5Y2NiOGY2MmUzMDAzLnBuZyIgYWx0PSJhbGVydGEgZW1haWwiIGNsYXNzPSIiPgogICAgICAgICAgICA8YnI+CiAgICAgICAgICAgIDxoMiBjbGFzcz0iY29sb3Itd2hpdGUgdGV4dC0yNSBmb250LWJvbGQtNzAwIj5Ow6NvIHBlcmNhIG5laHVtYSBvcG9ydHVuaWRhZGUhPC9oMj4KICAgICAgICAgICAgPGg0IGNsYXNzPSJjb2xvci13aGl0ZSB0ZXh0LTE4Ij5DcmllIHVtIHBlcmZpbCBuYSBQcm9ncmFtYVRob3IgZSByZWNlYmEgdW0gYWxlcnRhIGRlIHZhZ2FzIHF1ZSBjb21iaW5lbSBjb20gc2V1IHBlcmZpbC48L2g0PgogICAgICAgICAgICA8YnI+CiAgICAgICAgICAgIDxhIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MgYnRuLWxnIGZvbnQtYm9sZC03MDAiIGhyZWY9Ii91c2Vycy9zaWduX3VwP3NvdXJjZT1qb2JfcG9wdXBfZXhpdCI+Q1JJQVIgVU1BIENPTlRBPC9hPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CgoKCjxkaXYgY2xhc3M9IndyYXBwZXItYm90dG9tLWZpeGVkIj4KICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgPGRpdiBjbGFzcz0icm93Ij4KICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTkiPgogICAgICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIj4KICAgICAgICAgICAgPGEgY2xhc3M9ImJ0biBidG4tc3VjY2VzcyBidG4tbGcgYW5pbWF0ZWQgcHVsc2UiIGhyZWY9Ii91c2Vycy9zaWduX3VwIj5RdWVybyBtZSBjYW5kaWRhdGFyPC9hPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY29sLW1kLTMiPgogICAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbi14cyBoaWRkZW4tc20iIHN0eWxlPSJtYXJnaW4tdG9wOiAtMTBweDsiPgogICAgICAgICAgPHNwYW4gY2xhc3M9InRleHQtc20iPiA8c3Ryb25nPkNvbXBhcnRpbGhhciB2YWdhOjwvc3Ryb25nPjwvc3Bhbj4gPGJyPgogICAgICAgICAgPGRpdiBjbGFzcz0nc29jaWFsLXNoYXJlLWJ1dHRvbicgZGF0YS10aXRsZT0nUHJvZ3JhbWFkb3IoYSkgUnVieSBvbiBSYWlscycgZGF0YS1pbWc9JycKZGF0YS11cmw9J2h0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9qb2JzLzI3NjgtcHJvZ3JhbWFkb3ItYS1ydWJ5LW9uLXJhaWxzJyBkYXRhLWRlc2M9J1N0YXJ0dXAgbmEgcXVlIGF0dWEgY29tbyBmw6FicmljYSBkZSBzb2Z0d2FyZSBlIHBhcmEgYXBsaWNhw6fDtWVzIHByw7Nwcmlhcy4gTWFudGVyIG1lbGhvcmlhcyBlIG1hbnV0ZW7Dp8O1ZXMgZW0gc2lzdGVtYXMgasOhIGV4aXN0ZW50ZXMuDQpEYXIgaW5pY2lvIGEgbm92YXMgc2lzdGVtYXMgcXVlIGFwb2lhbSBvcyBqw6EgZXhpc3RlbnRlcy4NClBvc3NpYmlsaWRhZGUgZGUgZXNjb2xoYSBkZSB0ZWNub2xvZ2lhcyBlIGVzdHVkbyBkZSBub3ZhcyBsaW5ndWFnZW5zIGNhc28gc2VqYSBkZSBpbnRlcmVzc2UuJyBkYXRhLXZpYT0nUHJvZ3JhbWFUaG9yJz4KPGEgcmVsPSJub2ZvbGxvdyAiIGRhdGEtc2l0ZT0idHdpdHRlciIgY2xhc3M9InNzYi1pY29uIHNzYi10d2l0dGVyIiBvbmNsaWNrPSJyZXR1cm4gU29jaWFsU2hhcmVCdXR0b24uc2hhcmUodGhpcyk7IiB0aXRsZT0iU2hhcmUgdG8gVHdpdHRlciIgaHJlZj0iIyI+PC9hPgo8YSByZWw9Im5vZm9sbG93ICIgZGF0YS1zaXRlPSJmYWNlYm9vayIgY2xhc3M9InNzYi1pY29uIHNzYi1mYWNlYm9vayIgb25jbGljaz0icmV0dXJuIFNvY2lhbFNoYXJlQnV0dG9uLnNoYXJlKHRoaXMpOyIgdGl0bGU9IlNoYXJlIHRvIEZhY2Vib29rIiBocmVmPSIjIj48L2E+CjxhIHJlbD0ibm9mb2xsb3cgIiBkYXRhLXNpdGU9ImxpbmtlZGluIiBjbGFzcz0ic3NiLWljb24gc3NiLWxpbmtlZGluIiBvbmNsaWNrPSJyZXR1cm4gU29jaWFsU2hhcmVCdXR0b24uc2hhcmUodGhpcyk7IiB0aXRsZT0iU2hhcmUgdG8gTGlua2VkaW4iIGhyZWY9IiMiPjwvYT4KPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CjwvZGl2PgoKCiAgICA8Zm9vdGVyIGlkPSdmb290ZXInPgogIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hYm91dF91cyI+U29icmUgbsOzczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9yZWNydWl0ZXIiPlBhcmEgZW1wcmVzYXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvIj5QYXJhIGRlc2Vudm9sdmVkb3JlczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vcHJvZ3JhbWF0aG9yLmNvbS5ici9ibG9nLyI+IEJsb2cgPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3BhcnRuZXJzIj5QYXJjZWlyb3M8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvdGVybXMiPlRlcm1vczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jb250YWN0Ij5Db250YXRvczwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgogICAgICA8ZGl2IGNsYXNzPSJjb2wtbWQtNCI+CiAgICAgICAgPHVsIGNsYXNzPSJoaWRkZW4teHMgaGlkZGVuLXNtIj4KICAgICAgICAgIDxsaT48YSBocmVmPSIvam9icyI+VmFnYXMgZGVzZW52b2x2ZWRvcjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLWphdmEiPlZhZ2FzIHByb2dyYW1hZG9yIEpBVkE8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvam9icy1waHAiPlZhZ2FzIHByb2dyYW1hZG9yIFBIUDwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLWMtc2hhcnAiPlZhZ2FzIHByb2dyYW1hZG9yIEMjPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2pvYnMtbm9kZS1qcyI+VmFnYXMgcHJvZ3JhbWFkb3IgTk9ERS5KUzwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLWZyb250LWVuZCI+VmFnYXMgcHJvZ3JhbWFkb3IgRlJPTlQtRU5EPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2pvYnMtbmV0Ij5WYWdhcyBwcm9ncmFtYWRvciAuTkVUPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CiAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC00Ij4KICAgICAgICA8dWwgY2xhc3M9ImhpZGRlbi14cyBoaWRkZW4tc20iPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLWFuZHJvaWQiPlZhZ2FzIHByb2dyYW1hZG9yIEFORFJPSUQ8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvam9icy1pb3MiPlZhZ2FzIHByb2dyYW1hZG9yIElPUzwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzLXJ1Ynktb24tcmFpbHMiPlZhZ2FzIHByb2dyYW1hZG9yIFJVQlkgT04gUkFJTFM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvam9icy1weXRob24iPlZhZ2FzIHByb2dyYW1hZG9yIFBZVEhPTjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9hcmNoaXZlcyI+VmFnYXMgYXJxdWl2YWRhcyBwcm9ncmFtYcOnw6NvPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL29uZWJpdGNvZGUuY29tLyIgdGFyZ2V0PSJfYmxhbmsiPlByb2dyYW1hw6fDo28gWmVuIE9uZUJpdENvZGUgPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InRleHQtY2VudGVyIiBzdHlsZT0iZm9udC1zaXplOiAxNHB4OyI+CiAgICAgIDxicj4KICAgICAgPGRpdj4KICAgICAgICA8c3Bhbj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9Qcm9ncmFtYVRob3JCci8iIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iZmFiIGZhLWZhY2Vib29rLWYiPiA8L2k+PC9hPgogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3Bhbj4KICAgICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vdHdpdHRlci5jb20vUHJvZ3JhbWFUaG9yIiB0YXJnZXQ9Il9ibGFuayI+PGkgY2xhc3M9ImZhYiBmYS10d2l0dGVyIj4gPC9pPjwvYT4KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4+CiAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5saW5rZWRpbi5jb20vY29tcGFueS9wcm9ncmFtYXRob3IiIHRhcmdldD0iX2JsYW5rIj48aSBjbGFzcz0iZmFiIGZhLWxpbmtlZGluLWluIj4gPC9pPjwvYT4KICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2Pjxicj4KICAgICAgUHJvZ3JhbWFUaG9yIMKpIDIwMTggLSBUb2RvcyBvcyBkaXJlaXRvcyByZXNlcnZhZG9zCiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9mb290ZXI+CgoKICAgIDwhLS0gR29vZ2xlIE1hcHMgZm9yIEpvYiBvZmZlciAtLT4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL21hcHMuZ29vZ2xlLmNvbS9tYXBzL2FwaS9qcz9rZXk9QUl6YVN5QVdnWGRLUVgtQk1yU0lXTDR0amp5VXMzOHE3TGsyNjFvJmFtcDtsaWJyYXJpZXM9cGxhY2VzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSIvL2Nkbi5yYXdnaXQuY29tL21haG51bmNoaWsvbWFya2VyY2x1c3RlcmVycGx1cy9tYXN0ZXIvZGlzdC9tYXJrZXJjbHVzdGVyZXIubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2Nkbi5yYXdnaXQuY29tL3ByaW50ZXJjdS9nb29nbGUtbWFwcy11dGlsaXR5LWxpYnJhcnktdjMtcmVhZC1vbmx5L21hc3Rlci9pbmZvYm94L3NyYy9pbmZvYm94X3BhY2tlZC5qcyI+PC9zY3JpcHQ+CgogICAgPCEtLSBNYXRjaGluZyBjaXJjbGUgLS0+CiAgICA8c2NyaXB0IHNyYz0iaHR0cHM6Ly9hamF4Lmdvb2dsZWFwaXMuY29tL2FqYXgvbGlicy9qcXVlcnkvMy4xLjAvanF1ZXJ5Lm1pbi5qcyI+PC9zY3JpcHQ+CgogICAgPCEtLSBTY3JvbGwgcmV2ZWFsIC0tPgogICAgPHNjcmlwdCBzcmM9Imh0dHBzOi8vdW5wa2cuY29tL3Njcm9sbHJldmVhbEAzLjMuMi9kaXN0L3Njcm9sbHJldmVhbC5taW4uanMiPjwvc2NyaXB0PgoKICAgIDwhLS0gRm9yIHRleHQgYW5pbWF0aW9uIFNraWxsIGluIEhQIGhlYWRlciAtLT4KICAgIDxzY3JpcHQgc3JjPSJodHRwczovL2NkbmpzLmNsb3VkZmxhcmUuY29tL2FqYXgvbGlicy9nc2FwL2xhdGVzdC9Ud2Vlbk1heC5taW4uanMiPjwvc2NyaXB0PgoKICAgIDxzY3JpcHQgc3JjPSIvYXNzZXRzL2FwcGxpY2F0aW9uLTNmYTUxNTJlYzgwNjIwY2RkMDY3N2IzNmIzNzFiYmIzZGI4M2U0YmJiZDQ0NGM0Mjg1NjkzMjRmODVlODM2ODguanMiPjwvc2NyaXB0PgoKICAgIDwhLS0gQ2xvdWRpbmFyeSAtLT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4kLmNsb3VkaW5hcnkuY29uZmlnKHsiYXBpX2tleSI6IjE5NzExODE3OTU4MzQ0NiIsImNsb3VkX25hbWUiOiJwcm9ncmFtYXRob3IiLCJwcml2YXRlX2NkbiI6ZmFsc2V9KTs8L3NjcmlwdD4KCiAgICAgICAgPHNjcmlwdD4KLy88IVtDREFUQVsKCiAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7KGZ1bmN0aW9uKCl7JCgiaHRtbCIpLm9uKCJtb3VzZW91dC5vdWlib3VuY2UiLGZ1bmN0aW9uKCl7ZnVuY3Rpb24gZSgpeyQoIiNvdWlib3VuY2UtbW9kYWwiKS5tb2RhbCgpfXJldHVybiBmdW5jdGlvbih0KXtpZighKHQuY2xpZW50WTwyMCkpcmV0dXJuO2UoKTskKCJodG1sIikub2ZmKCJtb3VzZW91dC5vdWlib3VuY2UiKX19KCkpfSkoKTskKCJoZWFkIikucHJlcGVuZCgnPHN0eWxlIHR5cGU9InRleHQvY3NzIj4ubW9kYWwtb3BlbntvdmVyZmxvdzpoaWRkZW59Lm1vZGFse3Bvc2l0aW9uOmZpeGVkO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7bGVmdDowO3otaW5kZXg6MTA0MDtkaXNwbGF5Om5vbmU7b3ZlcmZsb3c6YXV0bztvdmVyZmxvdy15OnNjcm9sbH0ubW9kYWwuZmFkZSAubW9kYWwtZGlhbG9ney13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSgwLC0yNSUpOy1tcy10cmFuc2Zvcm06dHJhbnNsYXRlKDAsLTI1JSk7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLC0yNSUpOy13ZWJraXQtdHJhbnNpdGlvbjotd2Via2l0LXRyYW5zZm9ybSAuM3MgZWFzZS1vdXQ7LW1vei10cmFuc2l0aW9uOi1tb3otdHJhbnNmb3JtIC4zcyBlYXNlLW91dDstby10cmFuc2l0aW9uOi1vLXRyYW5zZm9ybSAuM3MgZWFzZS1vdXQ7dHJhbnNpdGlvbjp0cmFuc2Zvcm0gLjNzIGVhc2Utb3V0fS5tb2RhbC5pbiAubW9kYWwtZGlhbG9ney13ZWJraXQtdHJhbnNmb3JtOnRyYW5zbGF0ZSgwLDApOy1tcy10cmFuc2Zvcm06dHJhbnNsYXRlKDAsMCk7dHJhbnNmb3JtOnRyYW5zbGF0ZSgwLDApfS5tb2RhbC1kaWFsb2d7cG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxMDUwO3dpZHRoOmF1dG87bWFyZ2luOjEwcHh9Lm1vZGFsLWNvbnRlbnR7cG9zaXRpb246cmVsYXRpdmU7YmFja2dyb3VuZC1jb2xvcjojZmZmO2JvcmRlcjoxcHggc29saWQgIzk5OTtib3JkZXI6MXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4yKTtib3JkZXItcmFkaXVzOjZweDtvdXRsaW5lOjA7LXdlYmtpdC1ib3gtc2hhZG93OjAgM3B4IDlweCByZ2JhKDAsMCwwLDAuNSk7Ym94LXNoYWRvdzowIDNweCA5cHggcmdiYSgwLDAsMCwwLjUpO2JhY2tncm91bmQtY2xpcDpwYWRkaW5nLWJveH0ubW9kYWwtYmFja2Ryb3B7cG9zaXRpb246Zml4ZWQ7dG9wOjA7cmlnaHQ6MDtib3R0b206MDtsZWZ0OjA7ei1pbmRleDoxMDMwO2JhY2tncm91bmQtY29sb3I6IzAwMH0ubW9kYWwtYmFja2Ryb3AuZmFkZXtvcGFjaXR5OjA7ZmlsdGVyOmFscGhhKG9wYWNpdHk9MCl9Lm1vZGFsLWJhY2tkcm9wLmlue29wYWNpdHk6LjU7ZmlsdGVyOmFscGhhKG9wYWNpdHk9NTApfS5tb2RhbC1oZWFkZXJ7bWluLWhlaWdodDoxNi40Mjg1NzE0MjlweDtwYWRkaW5nOjE1cHg7Ym9yZGVyLWJvdHRvbToxcHggc29saWQgI2U1ZTVlNX0ubW9kYWwtaGVhZGVyIC5jbG9zZXttYXJnaW4tdG9wOi0ycHh9Lm1vZGFsLXRpdGxle21hcmdpbjowO2xpbmUtaGVpZ2h0OjEuNDI4NTcxNDI5fS5tb2RhbC1ib2R5e3Bvc2l0aW9uOnJlbGF0aXZlO3BhZGRpbmc6MjBweDttaW4taGVpZ2h0OjMwMHB4fS5tb2RhbC1mb290ZXJ7cGFkZGluZzoxOXB4IDIwcHggMjBweDttYXJnaW4tdG9wOjE1cHg7dGV4dC1hbGlnbjpyaWdodDtib3JkZXItdG9wOjFweCBzb2xpZCAjZTVlNWU1fS5tb2RhbC1mb290ZXI6YmVmb3JlLC5tb2RhbC1mb290ZXI6YWZ0ZXJ7ZGlzcGxheTp0YWJsZTtjb250ZW50OiIgIn0ubW9kYWwtZm9vdGVyOmFmdGVye2NsZWFyOmJvdGh9Lm1vZGFsLWZvb3RlcjpiZWZvcmUsLm1vZGFsLWZvb3RlcjphZnRlcntkaXNwbGF5OnRhYmxlO2NvbnRlbnQ6IiAifS5tb2RhbC1mb290ZXI6YWZ0ZXJ7Y2xlYXI6Ym90aH0ubW9kYWwtZm9vdGVyIC5idG4rLmJ0bnttYXJnaW4tYm90dG9tOjA7bWFyZ2luLWxlZnQ6NXB4fS5tb2RhbC1mb290ZXIgLmJ0bi1ncm91cCAuYnRuKy5idG57bWFyZ2luLWxlZnQ6LTFweH0ubW9kYWwtZm9vdGVyIC5idG4tYmxvY2srLmJ0bi1ibG9ja3ttYXJnaW4tbGVmdDowfUBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6NzY4cHgpey5tb2RhbC1kaWFsb2d7d2lkdGg6NjAwcHg7bWFyZ2luOjMwcHggYXV0b30ubW9kYWwtY29udGVudHstd2Via2l0LWJveC1zaGFkb3c6MCA1cHggMTVweCByZ2JhKDAsMCwwLDAuNSk7Ym94LXNoYWRvdzowIDVweCAxNXB4IHJnYmEoMCwwLDAsMC41KX19LmJ0bntkaXNwbGF5OmlubGluZS1ibG9jaztwYWRkaW5nOjZweCAxMnB4O21hcmdpbi1ib3R0b206MDtmb250LXNpemU6MTRweDtmb250LXdlaWdodDpub3JtYWw7bGluZS1oZWlnaHQ6MS40Mjg1NzE0Mjk7dGV4dC1hbGlnbjpjZW50ZXI7d2hpdGUtc3BhY2U6bm93cmFwO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLWltYWdlOm5vbmU7Ym9yZGVyOjFweCBzb2xpZCB0cmFuc3BhcmVudDtib3JkZXItcmFkaXVzOjRweDstd2Via2l0LXVzZXItc2VsZWN0Om5vbmU7LW1vei11c2VyLXNlbGVjdDpub25lOy1tcy11c2VyLXNlbGVjdDpub25lOy1vLXVzZXItc2VsZWN0Om5vbmU7dXNlci1zZWxlY3Q6bm9uZX0uYnRuLXByaW1hcnl7Y29sb3I6I2ZmZjtiYWNrZ3JvdW5kLWNvbG9yOiM0MjhiY2E7Ym9yZGVyLWNvbG9yOiMzNTdlYmR9LmJ0bi1wcmltYXJ5OmhvdmVyLC5idG4tcHJpbWFyeTpmb2N1cywuYnRuLXByaW1hcnk6YWN0aXZlLC5idG4tcHJpbWFyeS5hY3RpdmUsLm9wZW4gLmRyb3Bkb3duLXRvZ2dsZS5idG4tcHJpbWFyeXtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzMyNzZiMTtib3JkZXItY29sb3I6IzI4NWU4ZX08L3N0eWxlPicpOytmdW5jdGlvbihlKXsidXNlIHN0cmljdCI7dmFyIHQ9ZnVuY3Rpb24odCxuKXt0aGlzLm9wdGlvbnM9bjt0aGlzLiRlbGVtZW50PWUodCk7dGhpcy4kYmFja2Ryb3A9dGhpcy5pc1Nob3duPW51bGw7aWYodGhpcy5vcHRpb25zLnJlbW90ZSl0aGlzLiRlbGVtZW50LmxvYWQodGhpcy5vcHRpb25zLnJlbW90ZSl9O3QuREVGQVVMVFM9e2JhY2tkcm9wOnRydWUsa2V5Ym9hcmQ6dHJ1ZSxzaG93OnRydWV9O3QucHJvdG90eXBlLnRvZ2dsZT1mdW5jdGlvbihlKXtyZXR1cm4gdGhpc1shdGhpcy5pc1Nob3duPyJzaG93IjoiaGlkZSJdKGUpfTt0LnByb3RvdHlwZS5zaG93PWZ1bmN0aW9uKHQpe3ZhciBuPXRoaXM7dmFyIHI9ZS5FdmVudCgic2hvdy5icy5tb2RhbCIse3JlbGF0ZWRUYXJnZXQ6dH0pO3RoaXMuJGVsZW1lbnQudHJpZ2dlcihyKTtpZih0aGlzLmlzU2hvd258fHIuaXNEZWZhdWx0UHJldmVudGVkKCkpcmV0dXJuO3RoaXMuaXNTaG93bj10cnVlO3RoaXMuZXNjYXBlKCk7dGhpcy4kZWxlbWVudC5vbigiY2xpY2suZGlzbWlzcy5tb2RhbCIsJ1tkYXRhLWRpc21pc3M9Im1vZGFsIl0nLGUucHJveHkodGhpcy5oaWRlLHRoaXMpKTt0aGlzLmJhY2tkcm9wKGZ1bmN0aW9uKCl7dmFyIHI9ZS5zdXBwb3J0LnRyYW5zaXRpb24mJm4uJGVsZW1lbnQuaGFzQ2xhc3MoImZhZGUiKTtpZighbi4kZWxlbWVudC5wYXJlbnQoKS5sZW5ndGgpe24uJGVsZW1lbnQuYXBwZW5kVG8oZG9jdW1lbnQuYm9keSl9bi4kZWxlbWVudC5zaG93KCk7aWYocil7bi4kZWxlbWVudFswXS5vZmZzZXRXaWR0aH1uLiRlbGVtZW50LmFkZENsYXNzKCJpbiIpLmF0dHIoImFyaWEtaGlkZGVuIixmYWxzZSk7bi5lbmZvcmNlRm9jdXMoKTt2YXIgaT1lLkV2ZW50KCJzaG93bi5icy5tb2RhbCIse3JlbGF0ZWRUYXJnZXQ6dH0pO3I/bi4kZWxlbWVudC5maW5kKCIubW9kYWwtZGlhbG9nIikub25lKGUuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCxmdW5jdGlvbigpe24uJGVsZW1lbnQuZm9jdXMoKS50cmlnZ2VyKGkpfSkuZW11bGF0ZVRyYW5zaXRpb25FbmQoMzAwKTpuLiRlbGVtZW50LmZvY3VzKCkudHJpZ2dlcihpKX0pfTt0LnByb3RvdHlwZS5oaWRlPWZ1bmN0aW9uKHQpe2lmKHQpdC5wcmV2ZW50RGVmYXVsdCgpO3Q9ZS5FdmVudCgiaGlkZS5icy5tb2RhbCIpO3RoaXMuJGVsZW1lbnQudHJpZ2dlcih0KTtpZighdGhpcy5pc1Nob3dufHx0LmlzRGVmYXVsdFByZXZlbnRlZCgpKXJldHVybjt0aGlzLmlzU2hvd249ZmFsc2U7dGhpcy5lc2NhcGUoKTtlKGRvY3VtZW50KS5vZmYoImZvY3VzaW4uYnMubW9kYWwiKTt0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKCJpbiIpLmF0dHIoImFyaWEtaGlkZGVuIix0cnVlKS5vZmYoImNsaWNrLmRpc21pc3MubW9kYWwiKTtlLnN1cHBvcnQudHJhbnNpdGlvbiYmdGhpcy4kZWxlbWVudC5oYXNDbGFzcygiZmFkZSIpP3RoaXMuJGVsZW1lbnQub25lKGUuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCxlLnByb3h5KHRoaXMuaGlkZU1vZGFsLHRoaXMpKS5lbXVsYXRlVHJhbnNpdGlvbkVuZCgzMDApOnRoaXMuaGlkZU1vZGFsKCl9O3QucHJvdG90eXBlLmVuZm9yY2VGb2N1cz1mdW5jdGlvbigpe2UoZG9jdW1lbnQpLm9mZigiZm9jdXNpbi5icy5tb2RhbCIpLm9uKCJmb2N1c2luLmJzLm1vZGFsIixlLnByb3h5KGZ1bmN0aW9uKGUpe2lmKHRoaXMuJGVsZW1lbnRbMF0hPT1lLnRhcmdldCYmIXRoaXMuJGVsZW1lbnQuaGFzKGUudGFyZ2V0KS5sZW5ndGgpe3RoaXMuJGVsZW1lbnQuZm9jdXMoKX19LHRoaXMpKX07dC5wcm90b3R5cGUuZXNjYXBlPWZ1bmN0aW9uKCl7aWYodGhpcy5pc1Nob3duJiZ0aGlzLm9wdGlvbnMua2V5Ym9hcmQpe3RoaXMuJGVsZW1lbnQub24oImtleXVwLmRpc21pc3MuYnMubW9kYWwiLGUucHJveHkoZnVuY3Rpb24oZSl7ZS53aGljaD09MjcmJnRoaXMuaGlkZSgpfSx0aGlzKSl9ZWxzZSBpZighdGhpcy5pc1Nob3duKXt0aGlzLiRlbGVtZW50Lm9mZigia2V5dXAuZGlzbWlzcy5icy5tb2RhbCIpfX07dC5wcm90b3R5cGUuaGlkZU1vZGFsPWZ1bmN0aW9uKCl7dmFyIGU9dGhpczt0aGlzLiRlbGVtZW50LmhpZGUoKTt0aGlzLmJhY2tkcm9wKGZ1bmN0aW9uKCl7ZS5yZW1vdmVCYWNrZHJvcCgpO2UuJGVsZW1lbnQudHJpZ2dlcigiaGlkZGVuLmJzLm1vZGFsIil9KX07dC5wcm90b3R5cGUucmVtb3ZlQmFja2Ryb3A9ZnVuY3Rpb24oKXt0aGlzLiRiYWNrZHJvcCYmdGhpcy4kYmFja2Ryb3AucmVtb3ZlKCk7dGhpcy4kYmFja2Ryb3A9bnVsbH07dC5wcm90b3R5cGUuYmFja2Ryb3A9ZnVuY3Rpb24odCl7dmFyIG49dGhpczt2YXIgcj10aGlzLiRlbGVtZW50Lmhhc0NsYXNzKCJmYWRlIik/ImZhZGUiOiIiO2lmKHRoaXMuaXNTaG93biYmdGhpcy5vcHRpb25zLmJhY2tkcm9wKXt2YXIgaT1lLnN1cHBvcnQudHJhbnNpdGlvbiYmcjt0aGlzLiRiYWNrZHJvcD1lKCc8ZGl2IGNsYXNzPSJtb2RhbC1iYWNrZHJvcCAnK3IrJyIgLz4nKS5hcHBlbmRUbyhkb2N1bWVudC5ib2R5KTt0aGlzLiRlbGVtZW50Lm9uKCJjbGljay5kaXNtaXNzLm1vZGFsIixlLnByb3h5KGZ1bmN0aW9uKGUpe2lmKGUudGFyZ2V0IT09ZS5jdXJyZW50VGFyZ2V0KXJldHVybjt0aGlzLm9wdGlvbnMuYmFja2Ryb3A9PSJzdGF0aWMiP3RoaXMuJGVsZW1lbnRbMF0uZm9jdXMuY2FsbCh0aGlzLiRlbGVtZW50WzBdKTp0aGlzLmhpZGUuY2FsbCh0aGlzKX0sdGhpcykpO2lmKGkpdGhpcy4kYmFja2Ryb3BbMF0ub2Zmc2V0V2lkdGg7dGhpcy4kYmFja2Ryb3AuYWRkQ2xhc3MoImluIik7aWYoIXQpcmV0dXJuO2k/dGhpcy4kYmFja2Ryb3Aub25lKGUuc3VwcG9ydC50cmFuc2l0aW9uLmVuZCx0KS5lbXVsYXRlVHJhbnNpdGlvbkVuZCgxNTApOnQoKX1lbHNlIGlmKCF0aGlzLmlzU2hvd24mJnRoaXMuJGJhY2tkcm9wKXt0aGlzLiRiYWNrZHJvcC5yZW1vdmVDbGFzcygiaW4iKTtlLnN1cHBvcnQudHJhbnNpdGlvbiYmdGhpcy4kZWxlbWVudC5oYXNDbGFzcygiZmFkZSIpP3RoaXMuJGJhY2tkcm9wLm9uZShlLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQsdCkuZW11bGF0ZVRyYW5zaXRpb25FbmQoMTUwKTp0KCl9ZWxzZSBpZih0KXt0KCl9fTt2YXIgbj1lLmZuLm1vZGFsO2UuZm4ubW9kYWw9ZnVuY3Rpb24obixyKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dmFyIGk9ZSh0aGlzKTt2YXIgcz1pLmRhdGEoImJzLm1vZGFsIik7dmFyIG89ZS5leHRlbmQoe30sdC5ERUZBVUxUUyxpLmRhdGEoKSx0eXBlb2Ygbj09Im9iamVjdCImJm4pO2lmKCFzKWkuZGF0YSgiYnMubW9kYWwiLHM9bmV3IHQodGhpcyxvKSk7aWYodHlwZW9mIG49PSJzdHJpbmciKXNbbl0ocik7ZWxzZSBpZihvLnNob3cpcy5zaG93KHIpfSl9O2UuZm4ubW9kYWwuQ29uc3RydWN0b3I9dDtlLmZuLm1vZGFsLm5vQ29uZmxpY3Q9ZnVuY3Rpb24oKXtlLmZuLm1vZGFsPW47cmV0dXJuIHRoaXN9O2UoZG9jdW1lbnQpLm9uKCJjbGljay5icy5tb2RhbC5kYXRhLWFwaSIsJ1tkYXRhLXRvZ2dsZT0ibW9kYWwiXScsZnVuY3Rpb24odCl7dmFyIG49ZSh0aGlzKTt2YXIgcj1uLmF0dHIoImhyZWYiKTt2YXIgaT1lKG4uYXR0cigiZGF0YS10YXJnZXQiKXx8ciYmci5yZXBsYWNlKC8uKig/PSNbXlxzXSskKS8sIiIpKTt2YXIgcz1pLmRhdGEoIm1vZGFsIik/InRvZ2dsZSI6ZS5leHRlbmQoe3JlbW90ZTohLyMvLnRlc3QocikmJnJ9LGkuZGF0YSgpLG4uZGF0YSgpKTt0LnByZXZlbnREZWZhdWx0KCk7aS5tb2RhbChzLHRoaXMpLm9uZSgiaGlkZSIsZnVuY3Rpb24oKXtuLmlzKCI6dmlzaWJsZSIpJiZuLmZvY3VzKCl9KX0pO2UoZG9jdW1lbnQpLm9uKCJzaG93LmJzLm1vZGFsIiwiLm1vZGFsIixmdW5jdGlvbigpe2UoZG9jdW1lbnQuYm9keSkuYWRkQ2xhc3MoIm1vZGFsLW9wZW4iKX0pLm9uKCJoaWRkZW4uYnMubW9kYWwiLCIubW9kYWwiLGZ1bmN0aW9uKCl7ZShkb2N1bWVudC5ib2R5KS5yZW1vdmVDbGFzcygibW9kYWwtb3BlbiIpfSl9KGpRdWVyeSl9KTsKCi8vXV0+Cjwvc2NyaXB0PiAgICA8c2NyaXB0PgovLzwhW0NEQVRBWwoKICAgICAgJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGhhbmRsZXIgPSBHbWFwcy5idWlsZCgnR29vZ2xlJyk7CiAgICAgICAgaGFuZGxlci5idWlsZE1hcCh7IHByb3ZpZGVyOiB7IHNjcm9sbHdoZWVsOiBmYWxzZSB9LCBpbnRlcm5hbDogeyBpZDogJ21hcCcgfSB9LCBmdW5jdGlvbigpIHsKICAgICAgICAgIG1hcmtlcnMgPSBoYW5kbGVyLmFkZE1hcmtlcnMoW3sibGF0IjotMjIuMjMzNzIyMSwibG5nIjotNDkuOTYzOTI5MSwicGljdHVyZSI6eyJ1cmwiOiJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9wcm9ncmFtYXRob3IvaW1hZ2UvdXBsb2FkL2NfZmlsbCxoXzQyLHdfNDIvcGxhY2Vob2xkZXJfZnd1ZW94Iiwid2lkdGgiOjQyLCJoZWlnaHQiOjQyfX1dKTsKICAgICAgICAgIGhhbmRsZXIuYm91bmRzLmV4dGVuZFdpdGgobWFya2Vycyk7CiAgICAgICAgICBoYW5kbGVyLmZpdE1hcFRvQm91bmRzKCk7CiAgICAgICAgICBpZiAobWFya2Vycy5sZW5ndGggPT0gMCkgewogICAgICAgICAgICBoYW5kbGVyLmdldE1hcCgpLnNldFpvb20oMik7CiAgICAgICAgICB9IGVsc2UgaWYgKG1hcmtlcnMubGVuZ3RoID09IDEpIHsKICAgICAgICAgICAgaGFuZGxlci5nZXRNYXAoKS5zZXRab29tKDE0KTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSk7CgovL11dPgo8L3NjcmlwdD4KCiAgICA8IS0tIENoYXRib3ggLSBDcmlzcCAtLT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4kY3Jpc3A9W107Q1JJU1BfV0VCU0lURV9JRD0iNzkwZjVkZmEtM2RhZC00MmJlLWFiOWQtNWNlNTU2MjA2YzlhIjsoZnVuY3Rpb24oKXtkPWRvY3VtZW50O3M9ZC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtzLnNyYz0iaHR0cHM6Ly9jbGllbnQuY3Jpc3AuaW0vbC5qcyI7cy5hc3luYz0xO2QuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImhlYWQiKVswXS5hcHBlbmRDaGlsZChzKTt9KSgpOzwvc2NyaXB0PgoKICA8L2JvZHk+Cgo8L2h0bWw+Cg==
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:25 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2762-programador-a-javascript
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:25 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"2f12771863e526d5939efdffb2aef3dd"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=SFJJSlN1WEh4RTdOTE1RaHpBR0xOeFpSNzlnbG9tNUNicUVDYmhiTHZWWlc5cEdXOFVFMVdjY2FzL2xmc29DbVcrNnl3L1A0UWlPbnpoUmVWOCt3OHJ0OUcyMDhrN1d5cEtFQnBvZHYycFVCU3FONEtubmFnZktXSFByL2toejc5TTRXY2ZOTFptT0FibTRRdWNjYy9nPT0tLU9NMC8zMkNwajlkWS80d1JicnN4TlE9PQ%3D%3D--881b006b34bc9395e96f15003a33b31ca445c37e;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - ee5f494c-0fc3-498d-a093-e2998de3bf16
      X-Runtime:
      - '0.533388'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:26 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2747-programador-laravel-remoto
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:27 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"07bba3f07e02801c4e7444b045812737"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=amFWcWJUdTVzcU1mcnV0VTd5dWZlSU5uQUZVN0lYNC9JWHYydVlzNyt5TGZUZjZFWDhsd0d2bTllVFpIR3YxczBKdXlSRkJVQ2ZQalI5S1lHdmdZMkxvWEZUbnhwazI4SkNuL21mbjNMVDNNS2VpUVZqWGNpd1lYejU1SFNENlJMbGN5QXkwWUVINTVCVDFQQktsQlVBPT0tLS9hSUZHOVNZazlYM1hGbUR1TURhY0E9PQ%3D%3D--f6cea2135e63d63bcee2b42cc5b9044462117266;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - f2481ec5-e4b7-48ac-8b0f-1769b2b25127
      X-Runtime:
      - '0.533356'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:27 GMT
- request:
    method: get
    uri: https://programathor.com.br/jobs/2739-desenvolvedor-ruby-senior-e-especialista-5-vagas
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - Cowboy
      Date:
      - Wed, 01 Aug 2018 01:45:29 GMT
      Connection:
      - keep-alive
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      Content-Type:
      - text/html; charset=utf-8
      Vary:
      - Accept-Encoding
      Etag:
      - W/"33ef68875ab2c0d67f07444664b48e87"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Set-Cookie:
      - _ProgramaThor_session=NWFjd3dqNUpVZERJRUNZM0o1ZnlBQS82NjRqV1IzemhPZ1lTRHNJTTlrOWF0dXFCVDQzUWVGR3J3ZFNRM2FwdGxkMzVNa0NiSFV5T25WRHRlZWZlTnhWVWpyMThzTVJiSnpGa2ZKSlJ0dElCb3FYS1dpbWI0bGc0T1hybk1DUDdhOHFYaFVvZkZVZms0SmxSMWJoUjRBPT0tLTYwQW1YcnpqL0JxOVlPT0IySDdZcHc9PQ%3D%3D--8246e1f44c6b255fc6465e94e3dc4d72dd1723fb;
        path=/; secure; HttpOnly
      - utm=%7B%22utm_source%22%3Anull%2C%22utm_campaign%22%3Anull%7D; path=/; max-age=2592000;
        secure
      X-Request-Id:
      - 479d2575-43dc-49de-a8a2-578bb0abdaa5
      X-Runtime:
      - '1.832210'
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      Transfer-Encoding:
      - chunked
      Via:
      - 1.1 vegur
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 01 Aug 2018 01:45:30 GMT
recorded_with: VCR 4.0.0
