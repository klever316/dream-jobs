---
http_interactions:
- request:
    method: get
    uri: https://www.vagas.com.br/vagas-de-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:06 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - IntegracaoParamPesq=q%3Dc; domain=vagas.com.br; path=/
      - IntegracaoUrlPesq=%2Fvagas-de-c; domain=vagas.com.br; path=/
      - __cfduid=d3c8e57ee5e06a489ceaa1e142c8d23ef1533172805; expires=Fri, 02-Aug-19
        01:20:05 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - uuid=681e9f3227bb7e52782eff3245c7e15dc28fb46c18f8f11144; path=/
      - vagas.com.br=BAh7CEkiD3Nlc3Npb25faWQGOgZFVEkiJTFiN2U1NTg3MzAzZTBkODBjZWYyYjc4ZmJmOTBkOTYzBjsAVEkiCnNwbGl0BjsARnsGSSIVbGF5b3V0X2NhcmRfdmFnYQY7AEZJIht2YWdhcy9wZXNxdWlzYXMvdmFnYV9iBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMXZ4WkxSOWM0NEljd1BBZjd3THdHd2VPQUNxa1Y2cTh2ZU5GVUNteUN5c1k9BjsARg%3D%3D--624fc2822d1c93174ef98d7f443eb5f9fcc315e6;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"8910fcdab6aa4842d53d73769f2f21f7"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 67f5ee723071f8a6bd9b1ab4f48cb047
      X-Runtime:
      - '0.263634'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb854a8934bb1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuIj4KPGhlYWQ+CiAgPHRpdGxlPlZhZ2FzIGRlIGVtcHJlZ28gcGFyYSBjIHwgVkFHQVMuY29tLmJyPC90aXRsZT4KICA8bGluayBocmVmPSdodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9TGF0bzo0MDAsNzAwLDQwMGl0YWxpY3xUaXRpbGxpdW0rV2ViOjQwMCw2MDAsNDAwaXRhbGljLDMwMCw3MDB8T3BlbitTYW5zJyByZWw9J3N0eWxlc2hlZXQnIHR5cGU9J3RleHQvY3NzJz4KICA8bGluayBocmVmPSIvYXNzZXRzL3Blc3NvYXMtNDBlMGJmOGM5YjEyN2MxY2MyODg4YTRiOThlODIzZDUuY3NzIiBtZWRpYT0ic2NyZWVuIiByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiAvPgoKICA8bWV0YSBodHRwLWVxdWl2PSJDb250ZW50LVR5cGUiIGNvbnRlbnQ9InRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIvPgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+d2luZG93Lk5SRVVNfHwoTlJFVU09e30pO05SRVVNLmluZm89eyJiZWFjb24iOiJiYW0ubnItZGF0YS5uZXQiLCJlcnJvckJlYWNvbiI6ImJhbS5uci1kYXRhLm5ldCIsImxpY2Vuc2VLZXkiOiJiOTIxMjE2NWQ4IiwiYXBwbGljYXRpb25JRCI6IjY4OTE2NTcwIiwidHJhbnNhY3Rpb25OYW1lIjoiSUYxWkVVZGVDZ29IUUJsRFdBUlRSRXBGVkJVWEYxdEZWRXBNVzFrQlVFaz0iLCJxdWV1ZVRpbWUiOjEsImFwcGxpY2F0aW9uVGltZSI6MjY0LCJhZ2VudCI6IiJ9PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij53aW5kb3cuTlJFVU18fChOUkVVTT17fSksX19ucl9yZXF1aXJlPWZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKG4pe2lmKCF0W25dKXt2YXIgbz10W25dPXtleHBvcnRzOnt9fTtlW25dWzBdLmNhbGwoby5leHBvcnRzLGZ1bmN0aW9uKHQpe3ZhciBvPWVbbl1bMV1bdF07cmV0dXJuIHIob3x8dCl9LG8sby5leHBvcnRzKX1yZXR1cm4gdFtuXS5leHBvcnRzfWlmKCJmdW5jdGlvbiI9PXR5cGVvZiBfX25yX3JlcXVpcmUpcmV0dXJuIF9fbnJfcmVxdWlyZTtmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKylyKG5bb10pO3JldHVybiByfSh7MTpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoKXt9ZnVuY3Rpb24gbyhlLHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGkoZSxbZi5ub3coKV0uY29uY2F0KHUoYXJndW1lbnRzKSksdD9udWxsOnRoaXMsbiksdD92b2lkIDA6dGhpc319dmFyIGk9ZSgiaGFuZGxlIiksYT1lKDIpLHU9ZSgzKSxjPWUoImVlIikuZ2V0KCJ0cmFjZXIiKSxmPWUoImxvYWRlciIpLHM9TlJFVU07InVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3cubmV3cmVsaWMmJihuZXdyZWxpYz1zKTt2YXIgcD1bInNldFBhZ2VWaWV3TmFtZSIsInNldEN1c3RvbUF0dHJpYnV0ZSIsInNldEVycm9ySGFuZGxlciIsImZpbmlzaGVkIiwiYWRkVG9UcmFjZSIsImlubGluZUhpdCIsImFkZFJlbGVhc2UiXSxkPSJhcGktIixsPWQrIml4bi0iO2EocCxmdW5jdGlvbihlLHQpe3NbdF09byhkK3QsITAsImFwaSIpfSkscy5hZGRQYWdlQWN0aW9uPW8oZCsiYWRkUGFnZUFjdGlvbiIsITApLHMuc2V0Q3VycmVudFJvdXRlTmFtZT1vKGQrInJvdXRlTmFtZSIsITApLHQuZXhwb3J0cz1uZXdyZWxpYyxzLmludGVyYWN0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyByKS5nZXQoKX07dmFyIG09ci5wcm90b3R5cGU9e2NyZWF0ZVRyYWNlcjpmdW5jdGlvbihlLHQpe3ZhciBuPXt9LHI9dGhpcyxvPSJmdW5jdGlvbiI9PXR5cGVvZiB0O3JldHVybiBpKGwrInRyYWNlciIsW2Yubm93KCksZSxuXSxyKSxmdW5jdGlvbigpe2lmKGMuZW1pdCgobz8iIjoibm8tIikrImZuLXN0YXJ0IixbZi5ub3coKSxyLG9dLG4pLG8pdHJ5e3JldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaChlKXt0aHJvdyBjLmVtaXQoImZuLWVyciIsW2FyZ3VtZW50cyx0aGlzLGVdLG4pLGV9ZmluYWxseXtjLmVtaXQoImZuLWVuZCIsW2Yubm93KCldLG4pfX19fTthKCJzZXROYW1lLHNldEF0dHJpYnV0ZSxzYXZlLGlnbm9yZSxvbkVuZCxnZXRDb250ZXh0LGVuZCxnZXQiLnNwbGl0KCIsIiksZnVuY3Rpb24oZSx0KXttW3RdPW8obCt0KX0pLG5ld3JlbGljLm5vdGljZUVycm9yPWZ1bmN0aW9uKGUpeyJzdHJpbmciPT10eXBlb2YgZSYmKGU9bmV3IEVycm9yKGUpKSxpKCJlcnIiLFtlLGYubm93KCldKX19LHt9XSwyOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQpe3ZhciBuPVtdLHI9IiIsaT0wO2ZvcihyIGluIGUpby5jYWxsKGUscikmJihuW2ldPXQocixlW3JdKSxpKz0xKTtyZXR1cm4gbn12YXIgbz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1yfSx7fV0sMzpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe3R8fCh0PTApLCJ1bmRlZmluZWQiPT10eXBlb2YgbiYmKG49ZT9lLmxlbmd0aDowKTtmb3IodmFyIHI9LTEsbz1uLXR8fDAsaT1BcnJheShvPDA/MDpvKTsrK3I8bzspaVtyXT1lW3Qrcl07cmV0dXJuIGl9dC5leHBvcnRzPXJ9LHt9XSw0OltmdW5jdGlvbihlLHQsbil7dC5leHBvcnRzPXtleGlzdHM6InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UmJndpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcmJiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnR9fSx7fV0sZWU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7fWZ1bmN0aW9uIG8oZSl7ZnVuY3Rpb24gdChlKXtyZXR1cm4gZSYmZSBpbnN0YW5jZW9mIHI/ZTplP2MoZSx1LGkpOmkoKX1mdW5jdGlvbiBuKG4scixvLGkpe2lmKCFkLmFib3J0ZWR8fGkpe2UmJmUobixyLG8pO2Zvcih2YXIgYT10KG8pLHU9bShuKSxjPXUubGVuZ3RoLGY9MDtmPGM7ZisrKXVbZl0uYXBwbHkoYSxyKTt2YXIgcD1zW3lbbl1dO3JldHVybiBwJiZwLnB1c2goW2IsbixyLGFdKSxhfX1mdW5jdGlvbiBsKGUsdCl7dltlXT1tKGUpLmNvbmNhdCh0KX1mdW5jdGlvbiBtKGUpe3JldHVybiB2W2VdfHxbXX1mdW5jdGlvbiB3KGUpe3JldHVybiBwW2VdPXBbZV18fG8obil9ZnVuY3Rpb24gZyhlLHQpe2YoZSxmdW5jdGlvbihlLG4pe3Q9dHx8ImZlYXR1cmUiLHlbbl09dCx0IGluIHN8fChzW3RdPVtdKX0pfXZhciB2PXt9LHk9e30sYj17b246bCxlbWl0Om4sZ2V0OncsbGlzdGVuZXJzOm0sY29udGV4dDp0LGJ1ZmZlcjpnLGFib3J0OmEsYWJvcnRlZDohMX07cmV0dXJuIGJ9ZnVuY3Rpb24gaSgpe3JldHVybiBuZXcgcn1mdW5jdGlvbiBhKCl7KHMuYXBpfHxzLmZlYXR1cmUpJiYoZC5hYm9ydGVkPSEwLHM9ZC5iYWNrbG9nPXt9KX12YXIgdT0ibnJAY29udGV4dCIsYz1lKCJnb3MiKSxmPWUoMikscz17fSxwPXt9LGQ9dC5leHBvcnRzPW8oKTtkLmJhY2tsb2c9c30se31dLGdvczpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe2lmKG8uY2FsbChlLHQpKXJldHVybiBlW3RdO3ZhciByPW4oKTtpZihPYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5rZXlzKXRyeXtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExfSkscn1jYXRjaChpKXt9cmV0dXJuIGVbdF09cixyfXZhciBvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPXJ9LHt9XSxoYW5kbGU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCxuLHIpe28uYnVmZmVyKFtlXSxyKSxvLmVtaXQoZSx0LG4pfXZhciBvPWUoImVlIikuZ2V0KCJoYW5kbGUiKTt0LmV4cG9ydHM9cixyLmVlPW99LHt9XSxpZDpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSl7dmFyIHQ9dHlwZW9mIGU7cmV0dXJuIWV8fCJvYmplY3QiIT09dCYmImZ1bmN0aW9uIiE9PXQ/LTE6ZT09PXdpbmRvdz8wOmEoZSxpLGZ1bmN0aW9uKCl7cmV0dXJuIG8rK30pfXZhciBvPTEsaT0ibnJAaWQiLGE9ZSgiZ29zIik7dC5leHBvcnRzPXJ9LHt9XSxsb2FkZXI6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7aWYoIXgrKyl7dmFyIGU9aC5pbmZvPU5SRVVNLmluZm8sdD1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKVswXTtpZihzZXRUaW1lb3V0KHMuYWJvcnQsM2U0KSwhKGUmJmUubGljZW5zZUtleSYmZS5hcHBsaWNhdGlvbklEJiZ0KSlyZXR1cm4gcy5hYm9ydCgpO2YoeSxmdW5jdGlvbih0LG4pe2VbdF18fChlW3RdPW4pfSksYygibWFyayIsWyJvbmxvYWQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIik7dmFyIG49ZC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtuLnNyYz0iaHR0cHM6Ly8iK2UuYWdlbnQsdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuLHQpfX1mdW5jdGlvbiBvKCl7ImNvbXBsZXRlIj09PWQucmVhZHlTdGF0ZSYmaSgpfWZ1bmN0aW9uIGkoKXtjKCJtYXJrIixbImRvbUNvbnRlbnQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIil9ZnVuY3Rpb24gYSgpe3JldHVybiBFLmV4aXN0cyYmcGVyZm9ybWFuY2Uubm93P01hdGgucm91bmQocGVyZm9ybWFuY2Uubm93KCkpOih1PU1hdGgubWF4KChuZXcgRGF0ZSkuZ2V0VGltZSgpLHUpKS1oLm9mZnNldH12YXIgdT0obmV3IERhdGUpLmdldFRpbWUoKSxjPWUoImhhbmRsZSIpLGY9ZSgyKSxzPWUoImVlIikscD13aW5kb3csZD1wLmRvY3VtZW50LGw9ImFkZEV2ZW50TGlzdGVuZXIiLG09ImF0dGFjaEV2ZW50Iix3PXAuWE1MSHR0cFJlcXVlc3QsZz13JiZ3LnByb3RvdHlwZTtOUkVVTS5vPXtTVDpzZXRUaW1lb3V0LFNJOnAuc2V0SW1tZWRpYXRlLENUOmNsZWFyVGltZW91dCxYSFI6dyxSRVE6cC5SZXF1ZXN0LEVWOnAuRXZlbnQsUFI6cC5Qcm9taXNlLE1POnAuTXV0YXRpb25PYnNlcnZlcn07dmFyIHY9IiIrbG9jYXRpb24seT17YmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGVycm9yQmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGFnZW50OiJqcy1hZ2VudC5uZXdyZWxpYy5jb20vbnItMTA3MS5taW4uanMifSxiPXcmJmcmJmdbbF0mJiEvQ3JpT1MvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksaD10LmV4cG9ydHM9e29mZnNldDp1LG5vdzphLG9yaWdpbjp2LGZlYXR1cmVzOnt9LHhocldyYXBwYWJsZTpifTtlKDEpLGRbbF0/KGRbbF0oIkRPTUNvbnRlbnRMb2FkZWQiLGksITEpLHBbbF0oImxvYWQiLHIsITEpKTooZFttXSgib25yZWFkeXN0YXRlY2hhbmdlIixvKSxwW21dKCJvbmxvYWQiLHIpKSxjKCJtYXJrIixbImZpcnN0Ynl0ZSIsdV0sbnVsbCwiYXBpIik7dmFyIHg9MCxFPWUoNCl9LHt9XX0se30sWyJsb2FkZXIiXSk7PC9zY3JpcHQ+CiAgPG1ldGEgY29udGVudD0iYXV0aGVudGljaXR5X3Rva2VuIiBuYW1lPSJjc3JmLXBhcmFtIiAvPgo8bWV0YSBjb250ZW50PSJ2eFpMUjljNDRJY3dQQWY3d0x3R3dlT0FDcWtWNnE4dmVORlVDbXlDeXNZPSIgbmFtZT0iY3NyZi10b2tlbiIgLz4KICA8bWV0YSBjaGFyc2V0PSJVVEYtOCIvPgogIDxtZXRhIG5hbWU9ImtleXdvcmRzIiBjb250ZW50PSJjLCBFbXByZWdvLCBWYWdhcywgQ3VycmljdWx1bSwgQ2FycmVpcmEsIEN1cnLDrWN1bG8iLz4KICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iVmFnYXMgZGUgZW1wcmVnbyBwYXJhIGMuIENhZGFzdHJlLXNlIGdyYXR1aXRhbWVudGUgbm8gVkFHQVMuY29tLmJyLiIvPgoKICA8bGluayByZWw9Imljb24iIHR5cGU9ImltYWdlL3BuZyIgaHJlZj0iL2Fzc2V0cy9tdW5kb3MvZmF2aWNvbl9wLTNlYTI4NjQ5Mjk3MzQwZDlhMzI2NWZjZjlmMTlkYWU1LmljbyIvPgogIDxsaW5rIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgaHJlZj0iL2Fzc2V0cy9tdW5kb3MvYXBwbGUtdG91Y2gtaWNvbi1iZjQ0Mjg1ZDE2M2EzNDIwZGVmYzA0MzAzMTEwM2E2Ni5wbmciLz4KICAKICAgIDxsaW5rIHJlbD0iY2Fub25pY2FsIiBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvdmFnYXMtZGUtYyIvPgoKICAgIDxtZXRhIGh0dHAtZXF1aXY9IkNhY2hlLUNvbnRyb2wiIGNvbnRlbnQ9Im5vLWNhY2hlLCBuby1zdG9yZSwgbXVzdC1yZXZhbGlkYXRlIi8+CiAgPG1ldGEgaHR0cC1lcXVpdj0iUHJhZ21hIiBjb250ZW50PSJuby1jYWNoZSIvPgogIDxtZXRhIGh0dHAtZXF1aXY9IkV4cGlyZXMiIGNvbnRlbnQ9IjAiLz4KCiAgICAgIDxsaW5rIHJlbD0nbmV4dCcgaHJlZj0nP3BhZ2luYT0yJyAvPgogICAgCgogIDwhLS1baWYgbHQgSUUgOV0+CiAgICA8c2NyaXB0IHNyYz0iL2Fzc2V0cy9odG1sNS0xMzIxNGYwOGZlZTUxYjMzYjkxYjcwNDA5YjA4NDRjZi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KICA8IVtlbmRpZl0tLT4KICAgICAgICA8IS0tIFZhZ2FzLmNvbSBCZWdpbiBUYWlsVGFyZ2V0IFRhZyBNYW5hZ2VyIC0tPgo8c2NyaXB0PgogIChmdW5jdGlvbihpKSB7CiAgICB2YXIgdHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTsKICAgIHRzLnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JzsKICAgIHRzLmFzeW5jID0gdHJ1ZTsKICAgIHRzLnNyYyA9ICgnaHR0cHM6JyA9PSBkb2N1bWVudC5sb2NhdGlvbi5wcm90b2NvbCA/ICdodHRwczovLycgOiAnaHR0cDovLycpICsgJ3RhZ3MudC50YWlsdGFyZ2V0LmNvbS90M20uanM/aT0nICsgaTsKICAgIHZhciBzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdOwogICAgcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0cywgcyk7CiAgfSkoJ1RULTEwMjM1LTAvQ1QtMzAnKTsKPC9zY3JpcHQ+CjwhLS0gVmFnYXMuY29tIEVuZCBUYWlsVGFyZ2V0IFRhZyBNYW5hZ2VyIC0tPgoKPCEtLSBQcmViaWQgQ29uZmlnIFNlY3Rpb24gRU5EIC0tPgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICB2YXIgUFJFQklEX1RJTUVPVVQgPSAyMDAwOwoKICAgIHZhciBhZFVuaXRzID0gW107CiAgICAgICAgICBhZFVuaXRzLnB1c2goCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBjb2RlOiAidmFnYXNfYnVzY2FfbGVhZGVyYm9hcmRfNzI4eDkwXzcwMHg0MF83MDB4MzAwIiwKICAgICAgICAgICAgICBzaXplczogW1s3MjgsIDkwXSwgWzcyOCwgMTIwXSwgWzcwMCwgNDBdLCBbNzAwLCAzMDBdXSwKICAgICAgICAgICAgICBiaWRzOiBbeyJiaWRkZXIiOiJhcHBuZXh1cyIsInBhcmFtcyI6eyJwbGFjZW1lbnRJZCI6IjEzMDIwODkxIn19LHsiYmlkZGVyIjoicnViaWNvbiIsInBhcmFtcyI6eyJhY2NvdW50SWQiOiIxNTQ1MiIsInNpdGVJZCI6Ijk3NzUyIiwiem9uZUlkIjoiNDU4NzQyIiwic2l6ZXMiOlsyXX19LHsiYmlkZGVyIjoiY3JpdGVvIiwicGFyYW1zIjp7InpvbmVJZCI6IjExMTQxNTgifX1dCiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAgICAgICBhZFVuaXRzLnB1c2goCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBjb2RlOiAidmFnYXNfYnVzY2Ffc2t5c2NyYXBwZXJfMTYweDYwMCIsCiAgICAgICAgICAgICAgc2l6ZXM6IFsxNjAsIDYwMF0sCiAgICAgICAgICAgICAgYmlkczogW3siYmlkZGVyIjoiYXBwbmV4dXMiLCJwYXJhbXMiOnsicGxhY2VtZW50SWQiOiIxMzAyMDkxNiJ9fSx7ImJpZGRlciI6InJ1Ymljb24iLCJwYXJhbXMiOnsiYWNjb3VudElkIjoiMTU0NTIiLCJzaXRlSWQiOiI5Nzc1MiIsInpvbmVJZCI6IjQ1ODc0MiIsInNpemVzIjpbOV19fSx7ImJpZGRlciI6ImNyaXRlbyIsInBhcmFtcyI6eyJ6b25lSWQiOiIxMTE0MTU1In19XQogICAgICAgICAgICB9CiAgICAgICAgICApOwogICAgCiAgICB2YXIgcGJqcyA9IHBianMgfHwge307CiAgICBwYmpzLnF1ZSA9IHBianMucXVlIHx8IFtdOwoKICAgIChmdW5jdGlvbigpIHsKICAgICAgICB2YXIgZCA9IGRvY3VtZW50LAogICAgICAgICAgICBlID0gZC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKSwKICAgICAgICAgICAgcCA9IGQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKVswXTsKICAgICAgICBlLnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JzsKICAgICAgICBlLmFzeW5jID0gdHJ1ZTsKICAgICAgICBlLnNyYyA9ICcvc2NyaXB0cy9wdWJsaWNpZGFkZS9wcmViaWRfd2l0aF9jdXJyZW5jeS5qcyc7CiAgICAgICAgcC5pbnNlcnRCZWZvcmUoZSwgcC5maXJzdENoaWxkKTsKICAgIH0pKCk7CgogICAgcGJqcy5xdWUucHVzaChmdW5jdGlvbigpIHsKICAgICAgICBjb25zdCBjdXN0b21HcmFudWxhcml0eSA9IHsKICAgICAgICAgICAgJ2J1Y2tldHMnOiBbeydtaW4nOiAwLCAnbWF4JzogNTAsICdpbmNyZW1lbnQnOiAwLjAxIH1dCiAgICAgICAgfTsKICAgICAgICBwYmpzLnNldENvbmZpZyh7CiAgICAgICAgICAgIHByaWNlR3JhbnVsYXJpdHk6IGN1c3RvbUdyYW51bGFyaXR5LAogICAgICAgICAgICBjdXJyZW5jeTogewogICAgICAgICAgICAgICAgYWRTZXJ2ZXJDdXJyZW5jeTogIkJSTCIsCiAgICAgICAgICAgICAgICBncmFudWxhcml0eU11bHRpcGxpZXI6IDEsCiAgICAgICAgICAgICAgICBjb252ZXJzaW9uUmF0ZUZpbGU6ICJodHRwczovL2N1cnJlbmN5LnByZWJpZC5vcmcvbGF0ZXN0Lmpzb24iCiAgICAgICAgICAgIH0KICAgICAgICB9KQogICAgfSk7Cjwvc2NyaXB0Pgo8IS0tIFByZWJpZCBDb25maWcgU2VjdGlvbiBFTkQgLS0+Cgo8IS0tIFByZWJpZCBCb2lsZXJwbGF0ZSBTZWN0aW9uIFNUQVJULiAtLT4KPHNjcmlwdD4KICB2YXIgZ29vZ2xldGFnID0gZ29vZ2xldGFnIHx8IHt9OwogIGdvb2dsZXRhZy5jbWQgPSBnb29nbGV0YWcuY21kIHx8IFtdOwogIGdvb2dsZXRhZy5jbWQucHVzaChmdW5jdGlvbigpIHsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLmRpc2FibGVJbml0aWFsTG9hZCgpOwogIH0pOwoKICBwYmpzLnF1ZS5wdXNoKGZ1bmN0aW9uKCkgewogICAgICBwYmpzLmFkZEFkVW5pdHMoYWRVbml0cyk7CiAgICAgIHBianMucmVxdWVzdEJpZHMoewogICAgICAgICAgYmlkc0JhY2tIYW5kbGVyOiBzZW5kQWRzZXJ2ZXJSZXF1ZXN0CiAgICAgIH0pOwogIH0pOwoKICBmdW5jdGlvbiBzZW5kQWRzZXJ2ZXJSZXF1ZXN0KCkgewogICAgICBpZiAocGJqcy5hZHNlcnZlclJlcXVlc3RTZW50KSByZXR1cm47CiAgICAgIHBianMuYWRzZXJ2ZXJSZXF1ZXN0U2VudCA9IHRydWU7CiAgICAgIGdvb2dsZXRhZy5jbWQucHVzaChmdW5jdGlvbigpIHsKICAgICAgICAgIHBianMucXVlLnB1c2goZnVuY3Rpb24oKSB7CiAgICAgICAgICAgICAgcGJqcy5zZXRUYXJnZXRpbmdGb3JHUFRBc3luYygpOwogICAgICAgICAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5yZWZyZXNoKCk7CiAgICAgICAgICB9KTsKICAgICAgfSk7CiAgfQoKICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICBzZW5kQWRzZXJ2ZXJSZXF1ZXN0KCk7CiAgfSwgUFJFQklEX1RJTUVPVVQpOwoKPC9zY3JpcHQ+CjwhLS0gUHJlYmlkIEJvaWxlcnBsYXRlIFNlY3Rpb24gRU5EIC0tPgoKPCEtLSBWYWdhcy5jb20gQmVnaW4gR29vZ2xlIFB1Ymxpc2hlciBUYWcgLS0+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICB2YXIgZ2V0VGFpbFRhcmdldFBhcmFtID0gZnVuY3Rpb24oYSkgewogICAgdmFyIHR0Q29va2llTmFtZSA9ICJfdHRkbXAiOwogICAgaWYgKCF3aW5kb3cuX3R0cHJvZmlsZXNjYWNoZSkgewogICAgICB3aW5kb3cuX3R0cHJvZmlsZXNjYWNoZSA9IHt9OwogICAgICB0cnkgewogICAgICAgIHZhciBjID0gZG9jdW1lbnQuY29va2llLm1hdGNoKCcoXnw7KVxccyonICsgdHRDb29raWVOYW1lICsgJ1xccyo9XFxzKihbXjtdKyknKTsKICAgICAgICB2YXIgZCA9IGMgPyBjLnBvcCgpLnNwbGl0KCd8JykgOiBbXTsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGQubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIHZhciBrdiA9IGRbaV0uc3BsaXQoIjoiKTsKICAgICAgICAgIGlmIChrdlsxXSAmJiBrdlsxXS5pbmRleE9mKCIsIikgPiAwKSB7CiAgICAgICAgICAgICAgd2luZG93Ll90dHByb2ZpbGVzY2FjaGVba3ZbMF1dID0ga3ZbMV0uc3BsaXQoIiwiKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgd2luZG93Ll90dHByb2ZpbGVzY2FjaGVba3ZbMF1dID0ga3ZbMV07CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9IGNhdGNoIChlKSB7CiAgICAgIH0KICAgIH0KICAgIHJldHVybiB3aW5kb3cuX3R0cHJvZmlsZXNjYWNoZVthXSA/IHdpbmRvdy5fdHRwcm9maWxlc2NhY2hlW2FdIDogJ25hJzsKICB9OwoKICAoZnVuY3Rpb24gKCkgewogICAgICB2YXIgZ2FkcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgICBnYWRzLmFzeW5jID0gdHJ1ZTsKICAgICAgZ2Fkcy50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7CiAgICAgIHZhciB1c2VTU0wgPSAnaHR0cHM6JyA9PSBkb2N1bWVudC5sb2NhdGlvbi5wcm90b2NvbDsKICAgICAgZ2Fkcy5zcmMgPSAodXNlU1NMID8gJ2h0dHBzOicgOiAnaHR0cDonKSArCiAgICAgICAgICAgICAgJy8vd3d3Lmdvb2dsZXRhZ3NlcnZpY2VzLmNvbS90YWcvanMvZ3B0LmpzJzsKICAgICAgdmFyIG5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07CiAgICAgIG5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZ2Fkcywgbm9kZSk7CiAgfSkoKTsKCiAgZ29vZ2xldGFnLmNtZC5wdXNoKGZ1bmN0aW9uICgpIHsKICAgICAgICBnb29nbGV0YWcuZGVmaW5lU2xvdCgnLzE3MjE4MzYvdmFnYXNfYnVzY2FfbGVhZGVyYm9hcmRfNzI4eDkwXzcwMHg0MF83MDB4MzAwJywgW1s3MjgsIDkwXSwgWzcyOCwgMTIwXSwgWzcwMCwgNDBdLCBbNzAwLCAzMDBdXSwgJ3ZhZ2FzX2J1c2NhX2xlYWRlcmJvYXJkXzcyOHg5MF83MDB4NDBfNzAweDMwMCcpLmFkZFNlcnZpY2UoZ29vZ2xldGFnLnB1YmFkcygpKTsKICAgICAgICBnb29nbGV0YWcuZGVmaW5lU2xvdCgnLzE3MjE4MzYvdmFnYXNfYnVzY2Ffc2t5c2NyYXBwZXJfMTYweDYwMCcsIFsxNjAsIDYwMF0sICd2YWdhc19idXNjYV9za3lzY3JhcHBlcl8xNjB4NjAwJykuYWRkU2VydmljZShnb29nbGV0YWcucHViYWRzKCkpOwoKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRMUycsIGdldFRhaWxUYXJnZXRQYXJhbSgnTFMnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0UycsIGdldFRhaWxUYXJnZXRQYXJhbSgnUycpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRUJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdUJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dEMnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0MnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0VScsIGdldFRhaWxUYXJnZXRQYXJhbSgnVScpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRFJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdFJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dEEnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0EnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0RycsIGdldFRhaWxUYXJnZXRQYXJhbSgnRycpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRDQScsIGdldFRhaWxUYXJnZXRQYXJhbSgnQ0EnKSk7CgogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCdxdWVyeScsIFsiYyJdKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLmVuYWJsZVNpbmdsZVJlcXVlc3QoKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLmNvbGxhcHNlRW1wdHlEaXZzKCk7CiAgICAgIGdvb2dsZXRhZy5lbmFibGVTZXJ2aWNlcygpOwogIH0pOwo8L3NjcmlwdD4KPCEtLSBFTkQgVmFnYXMuY29tIEdvb2dsZSBQdWJsaXNoZXIgVGFnIC0tPgoKCiAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9sZCtqc29uIj4KICB7CiAgICAiQGNvbnRleHQiOiAiaHR0cDovL3NjaGVtYS5vcmciLAogICAgIkB0eXBlIjogIldlYlNpdGUiLAogICAgIm5hbWUiOiAiVkFHQVMuY29tIiwKICAgICJhbHRlcm5hdGVOYW1lIjogIlNpdGUgZGUgRW1wcmVnb3MgVkFHQVMuY29tLmJyIiwKICAgICJ1cmwiOiAiaHR0cDovL3d3dy52YWdhcy5jb20uYnIiCiAgfQo8L3NjcmlwdD4KCjwvaGVhZD4KCjxib2R5IGNsYXNzPSJlbiI+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+Ci8vPCFbQ0RBVEFbCiAgICAgIHZhciBkYXRhTGF5ZXIgPSBbeyJwYWdlIjp7InRlbXBsYXRlIjoiTGlzdGEgdmFnYXMiLCJuYW1lIjoiVmFnYXMgZGUgZW1wcmVnbyBwYXJhIGMgfCBWQUdBUy5jb20uYnIiLCJhcmVhIjoiY2FuZGlkYXRvcyIsInBhZ2VWZXJzaW9uIjpudWxsLCJxdWFudGl0eVJlc3VsdCI6IjM1MiJ9LCJzaXRlIjp7ImRvbWFpbiI6Ind3dy52YWdhcy5jb20uYnIiLCJwcm9kdWN0TmFtZSI6IlZhZ2FzIiwibGFuZ3VhZ2UiOiJFTiIsImFwcGxpY2F0aW9uIjoiZGVza3RvcCJ9LCJzZXNzaW9uIjp7InNlYXJjaFN0cmluZyI6bnVsbCwic3RhcnRUaW1lIjpudWxsLCJ2aXNpdE51bWJlciI6bnVsbCwibG9nZ2VkIjpmYWxzZX19XTsKCiAgICAgIGRhdGFMYXllci5wdXNoKHsnZXZlbnQnOiAnZGF0YUxheWVyX2xvYWQnfSk7CgovL11dPgo8L3NjcmlwdD4KCiAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CjxzY3JpcHQ+KGZ1bmN0aW9uKHcsZCxzLGwsaSl7d1tsXT13W2xdfHxbXTt3W2xdLnB1c2goeydndG0uc3RhcnQnOgpuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCmo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQonaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7Cn0pKHdpbmRvdyxkb2N1bWVudCwnc2NyaXB0JywnZGF0YUxheWVyJywnR1RNLTUySDIzOCcpOzwvc2NyaXB0Pgo8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CjwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tNTJIMjM4IgpoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0Pgo8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KCgoKPGRpdj4KCiAgPGEgaWQ9InNraXBweSIgY2xhc3M9InNyLW9ubHkgc3Itb25seS1mb2N1c2FibGUiIGhyZWY9IiNjdi1jb3JwbyI+PGRpdiBjbGFzcz0iY29udGFpbmVyIj48c3BhbiBjbGFzcz0ic2tpcGxpbmstdGV4dCI+UHVsYXIgcGFyYSBvIGNvbnRlw7pkbzwvc3Bhbj48L2Rpdj48L2E+CjxkaXYgaWQ9ImhlYWRlckhvbGRlciI+CgogICAgPGhlYWRlciBpZD0idG9wby1jYW5kaWRhdG8tbG9nYWRvIiBjbGFzcz0iZGVzbG9nYWRvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8ZGl2IGlkPSdsb2dvVmFnYXMnPjxhIGhyZWY9Ii8iPlZBR0FTLmNvbS5icjwvYT48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50cy1ob2xkZXIiPgogICAgICAgICAgICAJPGRpdiBjbGFzcz0iaGVhZGVyLWNvbXBvbmVudHMiPgoJCQkJCTxkaXYgaWQ9InBlc3F1aXNhLW1lbnUiPgogICAgPGEgaHJlZj0iIyIgaWQ9ImJ0bi1wZXNxdWlzYSI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tc2VhcmNoIj48L3NwYW4+PC9hPgogICAgPGRpdiBpZD0icGVzcXVpc2Etc3VibWVudSI+CiAgICAgICAgPHNwYW4KICAgICAgICAgICAgcm9sZT0iYnV0dG9uIgogICAgICAgICAgICBjbGFzcz0iaWNvbi12b2x0YXItbW9iaWxlLTI0IGJ0bi1mZWNoYXItcGVzcXVpc2EiCiAgICAgICAgICAgIHRhYkluZGV4PXswfQogICAgICAgID48L3NwYW4+CiAgICAgICAgPGZvcm0gYWNjZXB0LWNoYXJzZXQ9IlVURi04IiBhY3Rpb249Ii92YWdhcy9wZXNxdWlzYXMiIGNsYXNzPSJmb3JtdWxhcmlvUGVzcXVpc2FEZVZhZ2FzX2hlYWRlciIgbWV0aG9kPSJnZXQiPjxkaXYgc3R5bGU9Im1hcmdpbjowO3BhZGRpbmc6MDtkaXNwbGF5OmlubGluZSI+PGlucHV0IG5hbWU9InV0ZjgiIHR5cGU9ImhpZGRlbiIgdmFsdWU9IiYjeDI3MTM7IiAvPjwvZGl2PgogICAgICAgIDxpbnB1dCBjbGFzcz0iY2FtcG9QZXNxdWlzYVZhZ2EiIGlkPSJzZWFyY2gtaW5wdXQtaGVhZGVyIiBuYW1lPSJxIiBwbGFjZWhvbGRlcj0iRW50ZXIgYSBwb3NpdGlvbiwgY29tcGFueSBvciBhIGxvY2F0aW9uIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iYyIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iIj4KPC9mb3JtPiAgICA8L2Rpdj4KPC9kaXY+CgkJCQkJCTxkaXYgaWQ9Im1lbnUtY2FuZGlkYXRvcy1ob2xkZXIiPgoJCQkJCQkJPGEgaWQ9Im1lbnUtYnRuIiBjbGFzcz0ibmF2YmFyLXRvZ2dsZSIgdGl0bGU9Ik1lbnUgcHJpbmNpcGFsIj4KCQkJCQkJCQk8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KCQkJCQkJCQk8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KCQkJCQkJCQk8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KCQkJCQkJCQk8c3BhbiBjbGFzcz0ic3Itb25seSI+TWVudTwvc3Bhbj4KCQkJCQkJCTwvYT4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgaWQ9Im1lbnUtY2FuZGlkYXRvcyIgY2xhc3M9Im1lbnUtZHJvcGRvd24iPgoJCQkJCQkJPGRpdiBjbGFzcz0ibmF2ZWdhY2FvLWRlc2xvZ2FkYSI+CgkJCQkJCQkJPGEgaHJlZj0iL2NhZGFzdHJvLWRlLWN1cnJpY3VsbyI+CgkJCQkJCQkJCTxidXR0b24gY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBjYWRhc3RybyI+UmVnaXN0ZXIgeW91ciByZXN1bWU8L2J1dHRvbj4KCQkJCQkJCQk8L2E+CgkJCQkJCQkJPGEgaHJlZj0iL2xvZ2luLWNhbmRpZGF0b3MiPgoJCQkJCQkJCQk8YnV0dG9uIGNsYXNzPSJidG4gYnRuLW91dGxpbmUgYnRuLW91dGxpbmUtZGFyayI+RW50cmFyPC9idXR0b24+CgkJCQkJCQkJPC9hPgoJCQkJCQkJPC9kaXY+CgkJCQkJCTwvZGl2PgoKCQkJCQkJPGRpdiBjbGFzcz0ibmF2ZWdhY2FvLWRlc2xvZ2FkYSI+CgkJCQkJCQk8YSBocmVmPSIvY2FkYXN0cm8tZGUtY3VycmljdWxvIj4KCQkJCQkJCQk8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiPlJlZ2lzdGVyIHlvdXIgcmVzdW1lPC9idXR0b24+CgkJCQkJCQk8L2E+CgkJCQkJCQk8YSBocmVmPSIvbG9naW4tY2FuZGlkYXRvcyI+CgkJCQkJCQkJPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lIj5FbnRyYXI8L2J1dHRvbj4KCQkJCQkJCTwvYT4KCQkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2hlYWRlcj4KCiAgICAKPC9kaXY+CjxkaXYgaWQ9Im5vdGlmaWNhY2FvVG9wb0hvbGRlciI+CiAgCjwvZGl2PgoKPGRpdiBpZD0ibWVudS1vdmVybGF5Ij48L2Rpdj4KCgoKPC9kaXY+Cgo8ZGl2IGlkPSJ3cmFwcGVyIiBjbGFzcz0iY2xlYXJmaXgiPgogIAoKCgo8ZGl2IGlkPSJjb250ZXVkby1wZXNxdWlzYS1kZS12YWdhcyI+CiAgPGRpdiBjbGFzcz0iY2VudGVyIj4KICAgICAgPGRpdiBjbGFzcz0iZmFpeGFXcmFwIGNsZWFyZml4Ij4KICA8ZGl2IGNsYXNzPSJmYWl4YSBjbGVhcmZpeCI+CiAgICA8aDE+MzUyIGFkcyBmb3Igam9iIG9wZW5pbmdzIGZvciBjPC9oMT4KCiAgPGRpdiBpZD0icGVzcXVpc2EtdmFnYXMiIGNsYXNzPSJwZXNxdWlzYS1kZS12YWdhcy1pbnRlcm5hIj4KICAgIDxkaXYgaWQ9ImZpbHRyby1vcmRlbmFjYW8iPgogICAgICA8ZGl2IAogICAgICAgIGNsYXNzPSJmaWx0cm8tYXR1YWwiCiAgICAgICAgdGl0bGU9InJlbGV2YW50cyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/b3JkZW5hcl9wb3I9bWFpc19yZWxldmFudGVzIj5yZWxldmFudHM8L2E+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tc2V0YS1kb3duLTI0Ij48L3NwYW4+CiAgICAgIDwvZGl2PgogICAgICA8dWw+CiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP29yZGVuYXJfcG9yPW1haXNfcmVsZXZhbnRlcyI+cmVsZXZhbnRzPC9hPgogICAgICAgICAgICA8c3ZnIHhtbG5zPSdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycgeG1sbnM6eGxpbms9J2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnIHdpZHRoPScxMicgaGVpZ2h0PSc4JyB2aWV3Qm94PScwIDAgMTIgOCc+PGRlZnM+PHBhdGggaWQ9J3g2ZzdhJyBkPSdNMjg4LjgyIDIzMS4zNmwtMy41My0zLjUzYTEgMSAwIDEgMSAxLjQyLTEuNDJsMi44MiAyLjgzIDQuOTUtNC45NWExIDEgMCAwIDEgMS40MSAxLjQybC01LjY1IDUuNjVhMSAxIDAgMCAxLTEuNDIgMHonLz48L2RlZnM+PGc+PGcgdHJhbnNmb3JtPSd0cmFuc2xhdGUoLTI4NSAtMjI0KSc+PHVzZSBmaWxsPScjMmVhYzNiJyB4bGluazpocmVmPScjeDZnN2EnLz48L2c+PC9nPjwvc3ZnPgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/b3JkZW5hcl9wb3I9bWFpc19yZWNlbnRlcyI+cmVjZW50czwvYT4KICAgICAgICAgICAgCiAgICAgICAgICA8L2xpPgogICAgICA8L3VsPgogICAgPC9kaXY+CiAgPC9kaXY+CjwvZGl2PgoKPHNlY3Rpb24gaWQ9InBlc3F1aXNhUmVzdWx0YWRvIj4KICAKCiAgPHNlY3Rpb24gY2xhc3M9ImdydXBvRGVWYWdhcyI+CiAgPGRpdiBpZD0idG9kYXNWYWdhcyI+CiAgICA8dWw+CiAgICAgIAogIDxsaSBjbGFzcz0idmFnYSBvZGQgIj4KICA8aGVhZGVyIGNsYXNzPSJjbGVhcmZpeCI+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1hZGljaW9uYWlzLWhlYWRlciBjbGVhcmZpeCI+CiAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgIDxpbWcgYWx0PSJMb2dvIGRhIGVtcHJlc2EgT0dBU0VDIiBzcmM9Imh0dHBzOi8vc2l0ZS52YWdhcy5jb20uYnIvaW1nL2xvZ29zTWt0L2xnYzEzMjAxMzE3MzIxMy5naWYiIC8+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3Mjg3ODkvZGVzZW52b2x2ZWRvci1jLWMtcGxlbm8iIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTcyODc4OSIgaWQ9InYxNzI4Nzg5IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iRGVzZW52b2x2ZWRvciBDL0MrKyBQbGVubyI+CiAgICAgICAgICAgIERlc2Vudm9sdmVkb3IgPG1hcms+QzwvbWFyaz4vPG1hcms+QzwvbWFyaz4rKyBQbGVubyAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgT0dBU0VDCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgUGxlbm8KICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+RXhwZXJpw6puY2lhIHPDs2xpZGEgbmFzIHNlZ3VpbnRlcyDDoXJlYXM6IERlc2Vudm9sdmltZW50byBlbSA8bWFyaz5DPC9tYXJrPi88bWFyaz5DPC9tYXJrPisrLCBjb20gYW1iaWVudGUgTGludXgvVW5peCBlIGRlc2Vqw6F2ZWwgZXhwZXJpw6puY2lhPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgQnJhc8OtbGlhCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj4xMC8wNy8yMDE4PC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBldmVuICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3NDEwMTIvZGVzZW52b2x2ZWRvci1jLWMtY2FtcGluYXMiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTc0MTAxMiIgaWQ9InYxNzQxMDEyIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iRGVzZW52b2x2ZWRvciBDOyBDKysgIC0gQ0FNUElOQVMiPgogICAgICAgICAgICBEZXNlbnZvbHZlZG9yIDxtYXJrPkM8L21hcms+OyA8bWFyaz5DPC9tYXJrPisrICAtIENBTVBJTkFTICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICBUYWxlbnQgR3JvdXAgKFQuSS4pCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgSsO6bmlvci9UcmFpbmVlCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPmVtYmFyY2Fkb8KgDQpDb25oZWNpbWVudG8gZW0gcHJvZ3JhbWHDp8OjbyBkZSBlcXVpcGFtZW50b3MgKCA8bWFyaz5DPC9tYXJrPi88bWFyaz5DPC9tYXJrPisrICk7Q29uaGVjaW1lbnRvIGVtIHByb2dyYW1hw6fDo28gcGFyYSBwbGFjYXMgZWxldDwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIENhbXBpbmFzCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj5Ub2RheTwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICAgIDwhLS0gUHVibGljaWRhZGUgLS0+CiAgICAgIDxkaXYgaWQ9J3ZhZ2FzX2J1c2NhX2xlYWRlcmJvYXJkXzcyOHg5MF83MDB4NDBfNzAweDMwMCcgc3R5bGU9Im1hcmdpbi1ib3R0b206IDIuNWVtOyI+CiAgICAgICAgPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgogICAgICAgICAgICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKSB7IGdvb2dsZXRhZy5kaXNwbGF5KCd2YWdhc19idXNjYV9sZWFkZXJib2FyZF83Mjh4OTBfNzAweDQwXzcwMHgzMDAnKTsgfSk7CiAgICAgICAgPC9zY3JpcHQ+CiAgICAgIDwvZGl2PgogICAgICA8IS0tIEZpbSBQdWJsaWNpZGFkZSAtLT4KICA8bGkgY2xhc3M9InZhZ2Egb2RkICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3MTg5NzgvZGVzZW52b2x2ZWRvci1jIiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3MTg5NzgiIGlkPSJ2MTcxODk3OCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9IkRlc2Vudm9sdmVkb3IgQyMiPgogICAgICAgICAgICBEZXNlbnZvbHZlZG9yIDxtYXJrPkM8L21hcms+IyAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgSUJPUEUgSW50ZWxpZ8OqbmNpYQogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIFBsZW5vCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPkVuZ2VuaGFyaWEgZGEgQ29tcHV0YcOnw6NvLg0KRXhwZXJpw6puY2lhIGUgY29uaGVjaW1lbnRvcyBlbTogPG1hcms+QzwvbWFyaz4jL0FTUC5ORVQsIEphdmFTY3JpcHQsIGNvbmNlaXRvcyBkZSBvcmllbnRhw6fDo28gYSBvYmpldG9zPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgU8OjbyBQYXVsbwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MjMvMDcvMjAxODwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2EgZXZlbiAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPGltZyBhbHQ9IkxvZ28gZGEgZW1wcmVzYSBJbmRyYSIgc3JjPSJodHRwczovL3NpdGUudmFnYXMuY29tLmJyL2ltZy9sb2dvc01rdC9sZ2MyMjEwMjAxNDE2NTIyLmdpZiIgLz4KICAgICAgPC9maWd1cmU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWhlYWRlciI+CiAgICAgIDxoMiBjbGFzcz0iY2FyZ28iPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy92MTcwODU1OS9kZXNlbnZvbHZlZG9yLW5ldC1lLWMiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTcwODU1OSIgaWQ9InYxNzA4NTU5IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iRGVzZW52b2x2ZWRvciAuTkVUIGUgQyMiPgogICAgICAgICAgICBEZXNlbnZvbHZlZG9yIC5ORVQgZSA8bWFyaz5DPC9tYXJrPiMgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIEluZHJhCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgUGxlbm8KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJxdGRQb3NpY29lcyI+CiAgICAgICAgICAgICAtIAogICAgICAgICAgICA0IGpvYiBvcGVuaW5ncwogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5jb3JyZWxhdGFzIChjb25jbHXDrWRvKS5WaXbDqm5jaWEgY29tbyBwcm9ncmFtYWRvcyA8bWFyaz5DPC9tYXJrPiMgZSAuTkVULg0KQmVuZWbDrWNpb3M6wqBBc3Npc3TDqm5jaWEgTcOpZGljYSwgQXNzaXN0w6puY2lhPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgRmxvcmlhbsOzcG9saXMKICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjAxLzA2LzIwMTg8L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIG9kZCAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzI4MTA4L2Rlc2Vudm9sdmVkb3ItbmV0LWMiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTcyODEwOCIgaWQ9InYxNzI4MTA4IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iRGVzZW52b2x2ZWRvciAuTkVUIC0gQyMiPgogICAgICAgICAgICBEZXNlbnZvbHZlZG9yIC5ORVQgLSA8bWFyaz5DPC9tYXJrPiMgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIEdydXBvU0lUSQogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIFBsZW5vCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8c3BhbiBjbGFzcz0icXRkUG9zaWNvZXMiPgogICAgICAgICAgICAgLSAKICAgICAgICAgICAgOCBqb2Igb3BlbmluZ3MKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+cHJvYmxlbWFzIHJlbGF0YWRvcyBwZWxvIGNsaWVudGUuDQoNCsKgDQrCoENPTkhFQ0lNRU5UT1MNCg0KPG1hcms+QzwvbWFyaz4jLCBWQjYsIEphdmEsIFZCLk5FVA0KRW50aXR5IEZyYW1ld29yaywgTGlucSBlIFdDRjwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIFPDo28gUGF1bG8KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjA5LzA3LzIwMTg8L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIGV2ZW4gIj4KICA8aGVhZGVyIGNsYXNzPSJjbGVhcmZpeCI+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1hZGljaW9uYWlzLWhlYWRlciBjbGVhcmZpeCI+CiAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVtcHJlc2EtMjQiPjwvc3Bhbj4KICAgICAgPC9maWd1cmU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWhlYWRlciI+CiAgICAgIDxoMiBjbGFzcz0iY2FyZ28iPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy92MTcwNDQ4OC9hbmFsaXN0YS1kZXNlbnZvbHZlZG9yLWMiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTcwNDQ4OCIgaWQ9InYxNzA0NDg4IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iQW5hbGlzdGEgRGVzZW52b2x2ZWRvciBDIyI+CiAgICAgICAgICAgIEFuYWxpc3RhIERlc2Vudm9sdmVkb3IgPG1hcms+QzwvbWFyaz4jICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICBTSUFHUkkgU0lTVEVNQVMgREUgR0VTVMODTwogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIFBsZW5vCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8c3BhbiBjbGFzcz0icXRkUG9zaWNvZXMiPgogICAgICAgICAgICAgLSAKICAgICAgICAgICAgMiBqb2Igb3BlbmluZ3MKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+bWVsaG9yaWFzIGUgY29ycmXDp8O1ZXMgbm8gc2lzdGVtYSwgdXRpbGl6YW5kbyBsaW5ndWFnZW0gPG1hcms+QzwvbWFyaz4jLiBCdXNjYW1vcyBhbGd1w6ltIGNvbSBwZXJmaWwgaW5vdmFkb3IsIGNyaWF0aXZvwqBlIHRlbmhhIHPDs2xpZGEgZXhwZXJpw6puY2lhIGNvbSBsw7NnaWNhIGRlIHByb2dyYW1hw6fDo28sIDxtYXJrPkM8L21hcms+IyBlIFNRTC4gTyBjYW5kaWRhdG8gaWRlYWwgcGFyYSBlc3NlIGNhcmdvIGRldmVyw6Egc2VyPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgR29pw6JuaWEKICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjI1LzA2LzIwMTg8L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIG9kZCAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzM0ODI5L2VzdGFnaW8tZW0tdmVuZGFzLXAtYyIgY2xhc3M9ImxpbmstZGV0YWxoZXMtdmFnYSIgZGF0YS1pZC12YWdhPSIxNzM0ODI5IiBpZD0idjE3MzQ4MjkiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ1ZhZ2FfVmlzdWFsaXphZGEnKTsiIHRpdGxlPSJFc3TDoWdpbyBlbSBWZW5kYXMgUCZhbXA7QyI+CiAgICAgICAgICAgIEVzdMOhZ2lvIGVtIFZlbmRhcyBQJjxtYXJrPkM8L21hcms+ICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICBIaXJpbmcKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBFc3TDoWdpbwogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5PIGVzdGFnacOhcmlvIGF0dWFyw6EgbmEgw6FyZWEgVmVuZGFzIE9pbCAmYW1wOyBHYXMgZSBQYWludCAmYW1wOyBDb2F0aW5ncywgYXBvaWFuZG8gbmFzIHNlZ3VpbnRlcyBhdGl2aWRhZGVzOg0KwqANCsK3wqDCoMKgwqDCoMKgwqDCoCBFbGFib3Jhw6fDo28gZGUgcmVsYXTDs3Jpb3MgZGUgdmVuZGFzLCBleHRyYWluZG8gZSBjb21waWxhbmRvIGRhZG9zIGRlIHNpc3RlbWE7DQrCt8KgwqDCoMKgwqDCoMKgwqAgU3Vwb3J0ZSBlbSBlc3R1ZG9zIGRlIG1lcmNhZG8gZGUgYWNvcmRvIGNvbSBhcyBmb250ZXMgZGlzcG9uw612ZWlzLCBwYXJhIGEgcmVhbGl6YcOnw6NvIGRlIHJlbGF0w7NyaW9zIGUgYXByZXNlbnRhw6fDtWVzIGdlcmVuY2lhaXM7DQrCt8KgwqDCoMKgwqDCoMKgwqAgU3Vwb3J0ZSBuYSByZWFsaXphw6fDo28gZGFzIGFuw6FsaXNlcyBkYSDDoXJlYSBkZSB2ZW5kYXMuDQrCoA0uLi48L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBTw6NvIFBhdWxvCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj4xOS8wNy8yMDE4PC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBldmVuICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8aW1nIGFsdD0iTG9nbyBkYSBlbXByZXNhIFN0ZWZhbmluaSIgc3JjPSJodHRwczovL3NpdGUudmFnYXMuY29tLmJyL2ltZy9sb2dvc01rdC9sZ2MxNzIwMTMxNDIzMTQuZ2lmIiAvPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzI0NTYwL2Rlc2Vudm9sdmVkb3ItYy1zciIgY2xhc3M9ImxpbmstZGV0YWxoZXMtdmFnYSIgZGF0YS1pZC12YWdhPSIxNzI0NTYwIiBpZD0idjE3MjQ1NjAiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ1ZhZ2FfVmlzdWFsaXphZGEnKTsiIHRpdGxlPSJEZXNlbnZvbHZlZG9yIEMrKyAtIFNyLiAiPgogICAgICAgICAgICBEZXNlbnZvbHZlZG9yIDxtYXJrPkM8L21hcms+KysgLSBTci4gICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICBTdGVmYW5pbmkKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBTw6puaW9yCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8c3BhbiBjbGFzcz0icXRkUG9zaWNvZXMiPgogICAgICAgICAgICAgLSAKICAgICAgICAgICAgMiBqb2Igb3BlbmluZ3MKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+ZXhwZXJpw6puY2lhOsKgDQoNCnByaW5jaXBhbCBlbSBkZXNlbnZvbHZpbWVudG8gZGUgYXBsaWNhdGl2b3MgPG1hcms+QzwvbWFyaz4vPG1hcms+QzwvbWFyaz4rKw0KZW0gZGVzZW52b2x2aW1lbnRvIGRlIGFwbGljYXRpdm9zIEphdmENCmNvbSBvczwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIFPDo28gUGF1bG8KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjAyLzA3LzIwMTg8L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIG9kZCAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPGltZyBhbHQ9IkxvZ28gZGEgZW1wcmVzYSBDU04iIHNyYz0iaHR0cHM6Ly9zaXRlLnZhZ2FzLmNvbS5ici9pbWcvbG9nb3NNa3QvY3NuLmdpZiIgLz4KICAgICAgPC9maWd1cmU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWhlYWRlciI+CiAgICAgIDxoMiBjbGFzcz0iY2FyZ28iPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy92MTcxNjg3MS9tb3RvcmlzdGEtY25oLWMtZC1lLWUiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTcxNjg3MSIgaWQ9InYxNzE2ODcxIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iTW90b3Jpc3RhIENOSCBDLCBEIGUgRSI+CiAgICAgICAgICAgIE1vdG9yaXN0YSBDTkggPG1hcms+QzwvbWFyaz4sIEQgZSBFICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICBDU04KICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBBdXhpbGlhci9PcGVyYWNpb25hbAogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD4tIENOSCA8bWFyaz5DPC9tYXJrPiBlIEQ6IENvbmR1emlyIGUgbWFub2JyYXIgY2FtaW5ow7VlcyBlIHZhbnMsIHBhcmEgbyB0cmFuc3BvcnRlIGRlIHBhc3NhZ2Vpcm9zIGUvb3UgY2FyZ2FzIGRpdmVyc2FzPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgVm9sdGEgUmVkb25kYQogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MTgvMDYvMjAxODwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2EgZXZlbiAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzE1NjcxL2Rlc2Vudm9sdmVkb3ItYy1wYXJhLXVyYSIgY2xhc3M9ImxpbmstZGV0YWxoZXMtdmFnYSIgZGF0YS1pZC12YWdhPSIxNzE1NjcxIiBpZD0idjE3MTU2NzEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ1ZhZ2FfVmlzdWFsaXphZGEnKTsiIHRpdGxlPSJERVNFTlZPTFZFRE9SIEMrKyBwYXJhIFVSQSI+CiAgICAgICAgICAgIERFU0VOVk9MVkVET1IgPG1hcms+QzwvbWFyaz4rKyBwYXJhIFVSQSAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgR3J1cG9TSVRJCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgU8OqbmlvcgogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5zdXBvcnRlIGUgZGVzZW52b2x2aW1lbnRvIGRlIHNpc3RlbWFzIG5hc2xpbmd1YWdlbnMgPG1hcms+QzwvbWFyaz4sIDxtYXJrPkM8L21hcms+KysgZSBKYXZhLsKgDQpQb3NzdWlyIGV4cGVyacOqbmNpYSBlbSBwcm90b2NvbG9zIGRlPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgU8OjbyBQYXVsbwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MTQvMDYvMjAxODwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2Egb2RkICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3MzM0OTIvZGVzZW52b2x2ZWRvci1uZXQtYyIgY2xhc3M9ImxpbmstZGV0YWxoZXMtdmFnYSIgZGF0YS1pZC12YWdhPSIxNzMzNDkyIiBpZD0idjE3MzM0OTIiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ1ZhZ2FfVmlzdWFsaXphZGEnKTsiIHRpdGxlPSJEZXNlbnZvbHZlZG9yIC5ORVQgLSBDIyI+CiAgICAgICAgICAgIERlc2Vudm9sdmVkb3IgLk5FVCAtIDxtYXJrPkM8L21hcms+IyAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgR3J1cG9TSVRJCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgUGxlbm8KICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJxdGRQb3NpY29lcyI+CiAgICAgICAgICAgICAtIAogICAgICAgICAgICAyNSBqb2Igb3BlbmluZ3MKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+cmFpeiBkb3MgcHJvYmxlbWFzIHJlcG9ydGFkb3MuIFRlY25vbG9naWFzOiAuTkVULCA8bWFyaz5DPC9tYXJrPihTaGFycCkgZSBCYW5jbyBkZSBkYWRvcyBTUUwgc2VydmVyLg0KLSBFbnNpbm8gc3VwZXJpb3I8L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBTw6NvIFBhdWxvCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj4xOC8wNy8yMDE4PC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBldmVuICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3MTE3NDYvcHJvbW90b3ItZGUtdmVuZGFzLWMtY25oLWEiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTcxMTc0NiIgaWQ9InYxNzExNzQ2IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iUHJvbW90b3IgZGUgVmVuZGFzIC0gQy8gQ05IICYjeDI3O0EmI3gyNzsiPgogICAgICAgICAgICBQcm9tb3RvciBkZSBWZW5kYXMgLSA8bWFyaz5DPC9tYXJrPi8gQ05IICdBJyAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgQ29jYS1Db2xhIEZFTVNBCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgQXV4aWxpYXIvT3BlcmFjaW9uYWwKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+UHLDqS1yZXF1aXNpdG9zOiAtIEVuc2lubyBGdW5kYW1lbnRhbCBjb21wbGV0bzsgLSBQcmVmZXLDrXZlbCBleHBlcmnDqm5jaWEgY29tIGF0ZW5kaW1lbnRvIGEgc3VwZXJtZXJjYWRvcyAvIHJlZGVzOw0KUHJpbmNpcGFpcyBhdGl2aWRhZGVzOiAtIFJlYWxpemFyIG8gYWJhc3RlY2ltZW50byBkZSBnb25kb2xhcywgcHJhdGVsZWlyYXMgZSBnZWxhZGVpcmFzOyAtIFJlYWxpemFyIGEgZXhlY3XDp8OjbyBkZSBtZXJjaGFuZGlzaW5nIGRlbnRybyBkYSBsb2phIGRlIGFjb3JkbyBjb20gYXMgcG9sw610aWNhcyBkYSBlbXByZXNhLg0KwqA8L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBQb3J0byBBbGVncmUKICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjA4LzA2LzIwMTg8L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIG9kZCAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzM5OTU3L3Byb2dyYW1hZG9yLWMtbmV0IiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3Mzk5NTciIGlkPSJ2MTczOTk1NyIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9IlByb2dyYW1hZG9yIChDIy5ORVQpIj4KICAgICAgICAgICAgUHJvZ3JhbWFkb3IgKDxtYXJrPkM8L21hcms+Iy5ORVQpICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICBSYWRpeCBFbmdlbmhhcmlhIGUgU29mdHdhcmUKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBQbGVubwogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5Db21wZXTDqm5jaWFzIFTDqWNuaWNhczoNCi0gRGVzZWrDoXZlbCBleHBlcmnDqm5jaWEgZW0gPG1hcms+QzwvbWFyaz4jLCBVTUw7DQotwqBEZXNlasOhdmVsIGNvbmhlY2ltZW50byBlbSAuTmV0IGNvcmUgMi4wKzwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIEJlbG8gSG9yaXpvbnRlCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj4yIGRheXMgYWdvPC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBldmVuICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3Mzk5NjAvcHJvZ3JhbWFkb3ItYy1uZXQiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczOTk2MCIgaWQ9InYxNzM5OTYwIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iUHJvZ3JhbWFkb3IgKEMjLk5FVCkiPgogICAgICAgICAgICBQcm9ncmFtYWRvciAoPG1hcms+QzwvbWFyaz4jLk5FVCkgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIFJhZGl4IEVuZ2VuaGFyaWEgZSBTb2Z0d2FyZQogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIFBsZW5vCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPkNvbXBldMOqbmNpYXMgVMOpY25pY2FzOg0KLSBEZXNlasOhdmVsIGV4cGVyacOqbmNpYSBlbSA8bWFyaz5DPC9tYXJrPiMsIFVNTDsNCi3CoERlc2Vqw6F2ZWwgY29uaGVjaW1lbnRvIGVtIC5OZXQgY29yZSAyLjArPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgU8OjbyBQYXVsbwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MiBkYXlzIGFnbzwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2Egb2RkICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3Mzk5NjQvcHJvZ3JhbWFkb3ItYy1uZXQiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczOTk2NCIgaWQ9InYxNzM5OTY0IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iUHJvZ3JhbWFkb3IgKEMjLk5FVCkiPgogICAgICAgICAgICBQcm9ncmFtYWRvciAoPG1hcms+QzwvbWFyaz4jLk5FVCkgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIFJhZGl4IEVuZ2VuaGFyaWEgZSBTb2Z0d2FyZQogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIFBsZW5vCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPkNvbXBldMOqbmNpYXMgVMOpY25pY2FzOg0KLSBEZXNlasOhdmVsIGV4cGVyacOqbmNpYSBlbSA8bWFyaz5DPC9tYXJrPiMsIFVNTDsNCi3CoERlc2Vqw6F2ZWwgY29uaGVjaW1lbnRvIGVtIC5OZXQgY29yZSAyLjArPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgUmlvIGRlIEphbmVpcm8KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjIgZGF5cyBhZ288L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIGV2ZW4gIj4KICA8aGVhZGVyIGNsYXNzPSJjbGVhcmZpeCI+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1hZGljaW9uYWlzLWhlYWRlciBjbGVhcmZpeCI+CiAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVtcHJlc2EtMjQiPjwvc3Bhbj4KICAgICAgPC9maWd1cmU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWhlYWRlciI+CiAgICAgIDxoMiBjbGFzcz0iY2FyZ28iPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy92MTczOTg5MC9hbmFsaXN0YS1kZS1zb2Z0d2FyZS1jLW5ldCIgY2xhc3M9ImxpbmstZGV0YWxoZXMtdmFnYSIgZGF0YS1pZC12YWdhPSIxNzM5ODkwIiBpZD0idjE3Mzk4OTAiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ1ZhZ2FfVmlzdWFsaXphZGEnKTsiIHRpdGxlPSJBbmFsaXN0YSBkZSBTb2Z0d2FyZSAoQyMuTkVUKSI+CiAgICAgICAgICAgIEFuYWxpc3RhIGRlIFNvZnR3YXJlICg8bWFyaz5DPC9tYXJrPiMuTkVUKSAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgUmFkaXggRW5nZW5oYXJpYSBlIFNvZnR3YXJlCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgUGxlbm8KICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+Q29tcGV0w6puY2lhcyBUw6ljbmljYXM6DQotIERlc2Vqw6F2ZWwgZXhwZXJpw6puY2lhIGVtIDxtYXJrPkM8L21hcms+IywgRGVzaWduIFBhdHRlcm5zLCBBbmd1bGFyIDUrLCB0ZXN0ZXMgdW5pdMOhcmlvcywgVU1MOw08L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBSaW8gZGUgSmFuZWlybwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MiBkYXlzIGFnbzwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2Egb2RkICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3Mzk4OTEvYW5hbGlzdGEtZGUtc29mdHdhcmUtYy1uZXQiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczOTg5MSIgaWQ9InYxNzM5ODkxIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iQW5hbGlzdGEgZGUgU29mdHdhcmUgKEMjLk5FVCkiPgogICAgICAgICAgICBBbmFsaXN0YSBkZSBTb2Z0d2FyZSAoPG1hcms+QzwvbWFyaz4jLk5FVCkgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIFJhZGl4IEVuZ2VuaGFyaWEgZSBTb2Z0d2FyZQogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIFBsZW5vCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPkNvbXBldMOqbmNpYXMgVMOpY25pY2FzOg0KLSBEZXNlasOhdmVsIGV4cGVyacOqbmNpYSBlbSA8bWFyaz5DPC9tYXJrPiMsIERlc2lnbiBQYXR0ZXJucywgQW5ndWxhciA1KywgdGVzdGVzIHVuaXTDoXJpb3MsIFVNTDsNPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgU8OjbyBQYXVsbwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MiBkYXlzIGFnbzwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2EgZXZlbiAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzM5ODkyL2FuYWxpc3RhLWRlLXNvZnR3YXJlLWMtbmV0IiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3Mzk4OTIiIGlkPSJ2MTczOTg5MiIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9IkFuYWxpc3RhIGRlIFNvZnR3YXJlIChDIy5ORVQpIj4KICAgICAgICAgICAgQW5hbGlzdGEgZGUgU29mdHdhcmUgKDxtYXJrPkM8L21hcms+Iy5ORVQpICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICBSYWRpeCBFbmdlbmhhcmlhIGUgU29mdHdhcmUKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBQbGVubwogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5Db21wZXTDqm5jaWFzIFTDqWNuaWNhczoNCi0gRGVzZWrDoXZlbCBleHBlcmnDqm5jaWEgZW0gPG1hcms+QzwvbWFyaz4jLCBEZXNpZ24gUGF0dGVybnMsIEFuZ3VsYXIgNSssIHRlc3RlcyB1bml0w6FyaW9zLCBVTUw7DTwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIEJlbG8gSG9yaXpvbnRlCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj4yIGRheXMgYWdvPC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBvZGQgIj4KICA8aGVhZGVyIGNsYXNzPSJjbGVhcmZpeCI+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1hZGljaW9uYWlzLWhlYWRlciBjbGVhcmZpeCI+CiAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVtcHJlc2EtMjQiPjwvc3Bhbj4KICAgICAgPC9maWd1cmU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWhlYWRlciI+CiAgICAgIDxoMiBjbGFzcz0iY2FyZ28iPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy92MTczMzQ1MS9hbmFsaXN0YS1lbmdlbmhlaXJvLWRlLXNvZnR3YXJlLWMtYy1sYnMtd2lmaS1hbmRyb2lkIiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3MzM0NTEiIGlkPSJ2MTczMzQ1MSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9IkFuYWxpc3RhL0VuZ2VuaGVpcm8gZGUgU29mdHdhcmUgQy9DKysgKExCUy9XaUZpL0FuZHJvaWQpIj4KICAgICAgICAgICAgQW5hbGlzdGEvRW5nZW5oZWlybyBkZSBTb2Z0d2FyZSA8bWFyaz5DPC9tYXJrPi88bWFyaz5DPC9tYXJrPisrIChMQlMvV2lGaS9BbmRyb2lkKSAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgSW5zdGl0dXRvIGRlIFBlc3F1aXNhcyBFbGRvcmFkbwogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIFPDqm5pb3IKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+cHJvZmlzc2lvbmFsIGNvbSBleHBlcmnDqm5jaWEgbm8gZGVzZW52b2x2aW1lbnRvIGVtIDxtYXJrPkM8L21hcms+LzxtYXJrPkM8L21hcms+KysgY29tIGZvY28gZW0gc2lzdGVtYXMgZW1iYXJjYWRvcyAocHJvZ3JhbWHDp8OjbyBwPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgQ2FtcGluYXMKICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjE4LzA3LzIwMTg8L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIGV2ZW4gIj4KICA8aGVhZGVyIGNsYXNzPSJjbGVhcmZpeCI+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1hZGljaW9uYWlzLWhlYWRlciBjbGVhcmZpeCI+CiAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgIDxpbWcgYWx0PSJMb2dvIGRhIGVtcHJlc2EgSVRHIiBzcmM9Imh0dHBzOi8vc2l0ZS52YWdhcy5jb20uYnIvaW1nL2xvZ29zTWt0L2l0Zy5naWYiIC8+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3MDkxNjkvZGVzZW52b2x2ZWRvci1tcy1zcWwtdmItbmV0LW91LWMiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTcwOTE2OSIgaWQ9InYxNzA5MTY5IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iRGVzZW52b2x2ZWRvciAgTVMtU1FMLCBWQi5OZXQgb3UgQyMgICAiPgogICAgICAgICAgICBEZXNlbnZvbHZlZG9yICBNUy1TUUwsIFZCLk5ldCBvdSA8bWFyaz5DPC9tYXJrPiMgICAgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIElURwogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIErDum5pb3IvVHJhaW5lZQogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5hbWJpZW50ZSBNaWNyb3NvZnQNCkV4cGVyacOqbmNpYSBlbSBNUy1TUUwsIFZCLk5FVCBvdSA8bWFyaz5DPC9tYXJrPiMNCkV4cGVyacOqbmNpYSBlbSBkZXNlbnZvbHZpbWVudG8gZGUgc3RvcmVkLXByb2NlZHVyZXMNPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgU8OjbyBQYXVsbwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MDQvMDYvMjAxODwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2Egb2RkICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE2ODE5MzAvZGVzZW52b2x2ZWRvci1tcy1zcWwtdmItbmV0LW91LWMiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTY4MTkzMCIgaWQ9InYxNjgxOTMwIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iRGVzZW52b2x2ZWRvciAgTVMtU1FMLCBWQi5OZXQgb3UgQyMgICAiPgogICAgICAgICAgICBEZXNlbnZvbHZlZG9yICBNUy1TUUwsIFZCLk5ldCBvdSA8bWFyaz5DPC9tYXJrPiMgICAgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIElURwogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIErDum5pb3IvVHJhaW5lZQogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5hbWJpZW50ZSBNaWNyb3NvZnQg4oCiIEV4cGVyacOqbmNpYSBlbSBNUy1TUUwsIFZCLk5FVCBvdSA8bWFyaz5DPC9tYXJrPiPigKIgRXhwZXJpw6puY2lhIGVtIGRlc2Vudm9sdmltZW50byBkZSBzdG9yZWQtcHJvY2VkdXJlcw08L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBTw6NvIFBhdWxvCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj4xMS8wNy8yMDE4PC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBldmVuICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3NDA1MDEvYW5hbGlzdGEtZGUtdGVjbm9sb2dpYS1kYS1pbmZvcm1hY2FvLW4tYyIgY2xhc3M9ImxpbmstZGV0YWxoZXMtdmFnYSIgZGF0YS1pZC12YWdhPSIxNzQwNTAxIiBpZD0idjE3NDA1MDEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ1ZhZ2FfVmlzdWFsaXphZGEnKTsiIHRpdGxlPSJBbmFsaXN0YSBkZSBUZWNub2xvZ2lhIGRhIEluZm9ybWHDp8OjbyAgLSBOJmFtcDtDIj4KICAgICAgICAgICAgQW5hbGlzdGEgZGUgVGVjbm9sb2dpYSBkYSBJbmZvcm1hw6fDo28gIC0gTiY8bWFyaz5DPC9tYXJrPiAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgQWRlY2NvCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgR2Vyw6puY2lhCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPlJlcXVpc2l0b3Mgb2JyaWdhdMOzcmlvczoNCuKAoiBHcmFuZGUgZXhwZXJpw6puY2lhIGNvbSBjb25maWd1cmHDp8OjbyBkZSBWb0lQIGRhIGNlbnRyYWwgdGVsZWbDtG5pY2EuDQrigKIgQ29uaGVjaW1lbnRvIGRlIHByb3RvY29sb3MgVENQIC8gSVAsIHByb3RvY29sb3MgVm9JUCwgcHJvdG9jb2xvcyBJU0ROLVFTSUcsIHByb3RvY29sb3MgV2lGaS4NCuKAoiBDb25oZWNpbWVudG8gYsOhc2ljbyBkZSBzZXJ2acOnb3MgZGUgcmVkZSwgY29tbyBhcnF1aXRldHVyYXMgREhDUCwgRE5TIGUgRmlyZXdhbGwuDQrigKIgRXhwZXJpw6puY2lhIGVtIGxpZGVyYW7Dp2EgZGUgZXF1aXBlcy4NCuKAoiBDZXJ0aWZpY2HDp8OjbyBDQ05BLg0K4oCiIENvbmhlY2ltZW50byBkZSBwbGF0YWZvcm1hcyBkZSB0ZWxlZm9uaWEgVm9JUCAoc2lzdGVtYXMgVS4uLjwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIEJldGltCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj5ZZXN0ZXJkYXk8L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIG9kZCAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzM5OTgwL2VzdGFnaW8tZW0tZGVzZW52b2x2aW1lbnRvLWRlLXNvZnR3YXJlLWMtbmV0IiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3Mzk5ODAiIGlkPSJ2MTczOTk4MCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9IkVzdMOhZ2lvIGVtIERlc2Vudm9sdmltZW50byBkZSBTb2Z0d2FyZSAoQyMuTmV0KSI+CiAgICAgICAgICAgIEVzdMOhZ2lvIGVtIERlc2Vudm9sdmltZW50byBkZSBTb2Z0d2FyZSAoPG1hcms+QzwvbWFyaz4jLk5ldCkgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIFJhZGl4IEVuZ2VuaGFyaWEgZSBTb2Z0d2FyZQogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIEVzdMOhZ2lvCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPkRlc2NyacOnw6NvIGRhcyBBdGl2aWRhZGVzOg0KUHJvZ3JhbWFyIHJlc3BlaXRhbmRvIHBhZHLDtWVzIGRlIERlc2Vudm9sdmltZW50by7CoMKgwqANCkZvcm1hw6fDo28gQWNhZMOqbWljYToNCkN1cnNhbmRvIEVuZ2VuaGFyaWEgZGEgQ29tcHV0YcOnw6NvLCBDacOqbmNpYSBkYSBDb21wdXRhw6fDo28gb3UgZGVtYWlzIGN1cnNvcyBkYSDDoXJlYSBkZSBUZWNub2xvZ2lhLg0KQ29tcGV0w6puY2lhcyBUw6ljbmljYXM6DQpEZXNlasOhdmVsIGNvbmhlY2ltZW50byBlbSAuTmV0IGNvcmUgMi4wKywgQW5zaWJsZSwgWWVvbWFuLCBGbHVlbnRWYWxpZGF0aW9uLCBPRGF0YSwgRG9ja2VyLCBFbnRpdHkgRnJhbWV3b3JrLCBPQXV0aCwgR3Jvb3Z5LCBKV1QsIFN3YWdnZXIuPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgUmlvIGRlIEphbmVpcm8KICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjIgZGF5cyBhZ288L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIGV2ZW4gIj4KICA8aGVhZGVyIGNsYXNzPSJjbGVhcmZpeCI+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1hZGljaW9uYWlzLWhlYWRlciBjbGVhcmZpeCI+CiAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVtcHJlc2EtMjQiPjwvc3Bhbj4KICAgICAgPC9maWd1cmU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWhlYWRlciI+CiAgICAgIDxoMiBjbGFzcz0iY2FyZ28iPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy92MTczNjg5Ni9hbmFsaXN0YS1kZS1zaXN0ZW1hcy1kZXNlbnZvbHZlZG9yLW5ldC1jLXNxbC1zZXJ2ZXIiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczNjg5NiIgaWQ9InYxNzM2ODk2IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iQW5hbGlzdGEgZGUgU2lzdGVtYXMgRGVzZW52b2x2ZWRvciAuIE5ldCAoQyMpL1NRTCBTZXJ2ZXIiPgogICAgICAgICAgICBBbmFsaXN0YSBkZSBTaXN0ZW1hcyBEZXNlbnZvbHZlZG9yIC4gTmV0ICg8bWFyaz5DPC9tYXJrPiMpL1NRTCBTZXJ2ZXIgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIFJlYWxUYXNrIFRlY25vbG9naWEKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBQbGVubwogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5leHBlcmnDqm5jaWEgY29tIERlc2Vudm9sdmltZW50byBlbTrCoCDCoCDCoA0KDQpTUUwgU2VydmVyDQo8bWFyaz5DPC9tYXJrPiMgZcKgVkIuTmV0DQpXQ0YNCldpbmRvd3MgRm9ybXPCoA0KDQpEZXNlasOhdmVsOg0KDQpFbGFib3Jhw6fDo288L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBSaW8gZGUgSmFuZWlybwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MjQvMDcvMjAxODwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2Egb2RkICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3MzcxMzkvYW5hbGlzdGEtZGVzZW52b2x2ZWRvci1waHAtYy1tb29kbGUtc2VuaW9yIiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3MzcxMzkiIGlkPSJ2MTczNzEzOSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9IkFuYWxpc3RhIERlc2Vudm9sdmVkb3IgUEhQIGMvIE1vb2RsZSAoU8OqbmlvcikiPgogICAgICAgICAgICBBbmFsaXN0YSBEZXNlbnZvbHZlZG9yIFBIUCA8bWFyaz5jPC9tYXJrPi8gTW9vZGxlIChTw6puaW9yKSAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgR3J1cG9TSVRJCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgU8OqbmlvcgogICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPHNwYW4gY2xhc3M9InF0ZFBvc2ljb2VzIj4KICAgICAgICAgICAgIC0gCiAgICAgICAgICAgIDIgam9iIG9wZW5pbmdzCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPnNpbWlsYXJlcyk7DQrCt8KgwqDCoMKgwqDCoMKgwqAgQ29uaGVjaW1lbnRvIGF2YW7Dp2FkbyBlbSBwcm9ncmFtYcOnw6NvIDxtYXJrPmM8L21hcms+LyBNeXNxbDsNCsK3wqDCoMKgwqDCoMKgwqDCoCBEZXNlasOhdmVsIC0gcHJvZ3JhbWHDp8OjbyBuYSBwbGF0YWZvcm1hPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgQ2FtcGluYXMKICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjcgZGF5cyBhZ288L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIGV2ZW4gIj4KICA8aGVhZGVyIGNsYXNzPSJjbGVhcmZpeCI+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1hZGljaW9uYWlzLWhlYWRlciBjbGVhcmZpeCI+CiAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVtcHJlc2EtMjQiPjwvc3Bhbj4KICAgICAgPC9maWd1cmU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWhlYWRlciI+CiAgICAgIDxoMiBjbGFzcz0iY2FyZ28iPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy92MTczMzQ1OC9lbmdlbmhlaXJvLWFuYWxpc3RhLWRlLXNvZnR3YXJlLWMtY2FtZXJhLWFuZHJvaWQiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczMzQ1OCIgaWQ9InYxNzMzNDU4IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iRW5nZW5oZWlyby9BbmFsaXN0YSBkZSBTb2Z0d2FyZSBDKysgKEPDom1lcmEvQW5kcm9pZCkiPgogICAgICAgICAgICBFbmdlbmhlaXJvL0FuYWxpc3RhIGRlIFNvZnR3YXJlIDxtYXJrPkM8L21hcms+KysgKEPDom1lcmEvQW5kcm9pZCkgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIEluc3RpdHV0byBkZSBQZXNxdWlzYXMgRWxkb3JhZG8KICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBQbGVubwogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5wcm9maXNzaW9uYWwgY29tIGV4cGVyacOqbmNpYSBubyBkZXNlbnZvbHZpbWVudG8gZW0gPG1hcms+QzwvbWFyaz4vPG1hcms+QzwvbWFyaz4rKyBjb20gZm9jbyBlbSBzaXN0ZW1hcyBlbWJhcmNhZG9zIChwcm9ncmFtYcOnw6NvIHA8L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBDYW1waW5hcwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MTgvMDcvMjAxODwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2Egb2RkICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3MDcwNzcvcHJvZ3JhbWFkb3ItZGVscGhpLWMtZS1qYXZhLXRlcmVzb3BvbGlzLXJqIiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3MDcwNzciIGlkPSJ2MTcwNzA3NyIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9IlBST0dSQU1BRE9SIC0gIERlbHBoaSAsIEMjIGUgSmF2YSAtIFRlcmVzw7Nwb2xpcy9SSiI+CiAgICAgICAgICAgIFBST0dSQU1BRE9SIC0gIERlbHBoaSAsIDxtYXJrPkM8L21hcms+IyBlIEphdmEgLSBUZXJlc8OzcG9saXMvUkogIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIEFsdGVyZGF0YQogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIFBsZW5vCiAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICA8c3BhbiBjbGFzcz0icXRkUG9zaWNvZXMiPgogICAgICAgICAgICAgLSAKICAgICAgICAgICAgOCBqb2Igb3BlbmluZ3MKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+U09BUC0gTcOpdG9kb3Mgw4FnZWlzLSBUREQtIERERFByb2dyYW1hZG9yIDxtYXJrPkM8L21hcms+IyAtIGRvbcOtbmlvIGVtwqAgPG1hcms+QzwvbWFyaz4jIC0gdG90YWwgMiB2YWdhcy0gLk5ldC0gT3JpZW50YcOnw6NvIGEgT2JqZXRvLTwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIFRlcmVzw7Nwb2xpcwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MjkvMDUvMjAxODwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2EgZXZlbiAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzM4ODIzL3RlY25pY28tZGUtbWFudXRlbmNhby1jYW1waW5hLWdyYW5kZS1wYiIgY2xhc3M9ImxpbmstZGV0YWxoZXMtdmFnYSIgZGF0YS1pZC12YWdhPSIxNzM4ODIzIiBpZD0idjE3Mzg4MjMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ1ZhZ2FfVmlzdWFsaXphZGEnKTsiIHRpdGxlPSJUw6ljbmljbyBkZSBNYW51dGVuw6fDo28gIC0gQ2FtcGluYSBHcmFuZGUgUEIiPgogICAgICAgICAgICBUw6ljbmljbyBkZSBNYW51dGVuw6fDo28gIC0gQ2FtcGluYSBHcmFuZGUgUEIgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIDxtYXJrPkM8L21hcms+JkEgTW9kYXMKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBUw6ljbmljbwogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5FeHBlcmnDqm5jaWHCoGVtIG1hbnV0ZW7Dp8OjbyBwcmVkaWFsIGUgbWFudXRlbsOnw6NvIGVsw6l0cmljYS4NCsKgDQpDb25oZWNpbWVudG9zIGRlIEluc3RhbGHDp8O1ZXMgSGlkcsOhdWxpY2FzLMKgcmVmcmlnZXJhw6fDo28vYXIgY29uZGljaW9uYWRvLg0KQ29uaGVjaW1lbnRvcyBiw6FzaWNvcyBkZSB0ZWxlY29tdW5pY2HDp8O1ZXMgZcKgZGUgaW5mb3Jtw6F0aWNhLg0KQ3Vyc28gZGUgTlIxMCAodmlnZW50ZSBlIGF0dWFsaXphZG8pLg0KU2Vyw6EgcmVzcG9uc8OhdmVsIHBvcsKgcmVhbGl6YXIgYSBtYW51dGVuw6fDo28gZG9zIGVxdWlwYW1lbnRvcyBkZSBzdXBvcnRlLCBsaW1wZXphIGUgb3JnYW5pemHDp8OjbyBkZSDDoXJlYXMgdMOpY25pY2FzLCBtYW51dGVuw6fDo28gZG9zIHNpc3RlbWFzIGRlIHNlZ3VyYW7Dp2EgZSBlbWVyZ8OqbmNpYSAuLi48L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBDYW1waW5hIEdyYW5kZQogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+NSBkYXlzIGFnbzwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2Egb2RkICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3Mzg4MzAvbGlkZXItZGUtdmlzdWFsLW1lcmNoYW5kaXNpbmctdm0tY2FtcGluYS1ncmFuZGUtcGIiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczODgzMCIgaWQ9InYxNzM4ODMwIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iTMOtZGVyIGRlIFZpc3VhbCBNZXJjaGFuZGlzaW5nIChWTSkgICAtIENhbXBpbmEgR3JhbmRlIFBCIj4KICAgICAgICAgICAgTMOtZGVyIGRlIFZpc3VhbCBNZXJjaGFuZGlzaW5nIChWTSkgICAtIENhbXBpbmEgR3JhbmRlIFBCICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICA8bWFyaz5DPC9tYXJrPiZBIE1vZGFzCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgQXV4aWxpYXIvT3BlcmFjaW9uYWwKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+RXhwZXJpw6puY2lhIGNvbSBtb2RhIGUgZXhwb3Npw6fDo28gZGUgcHJvZHV0b3MgbmEgbG9qYS4NClZpdsOqbmNpYSBjb20gR2VzdMOjbyBkZSBFcXVpcGVzLg0KU2Vyw6EgcmVzcG9uc8OhdmVsIHBlbGEgYW7DoWxpc2UgZGUgcmVzdWx0YWRvcyBlIHBsYW5lamFtZW50byBkYXMgcm90aW5hcyBkYSBlcXVpcGUsIGFjb21wYW5oYW1lbnRvIGRhIG1vbnRhZ2VtIGRlIHZpdHJpbmVzLCBwcm9kdcOnw6NvIGRlIG1vZGEgbm9zIG1hbmVxdWlucywgZXhlY3XDp8OjbyBkYXMgZXRhcGFzIGRlIGV4cG9zacOnw6NvIGUgY2ljbG8gZGUgdmlkYSBkbyBwcm9kdXRvIHNlZ3VpbmRvIGEgZXN0cmF0w6lnaWEgY29ycG9yYXRpdmEuDQpEZXNlasOhdmVsIGVuc2lubyBzdXBlcmlvciBjdXJzYW5kbyAobsOjbyBvYnJpZ2F0w7NyaW8pLiBEaXNwby4uLjwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIENhbXBpbmEgR3JhbmRlCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj41IGRheXMgYWdvPC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBldmVuICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3MzY5NzQvYW5hbGlzdGEtdHJpYnV0YXJpby1qdW5pb3IiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczNjk3NCIgaWQ9InYxNzM2OTc0IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iQW5hbGlzdGEgVHJpYnV0w6FyaW8gSsO6bmlvciI+CiAgICAgICAgICAgIEFuYWxpc3RhIFRyaWJ1dMOhcmlvIErDum5pb3IgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIDxtYXJrPkM8L21hcms+JkEgTW9kYXMKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBKw7puaW9yL1RyYWluZWUKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+UmVzcG9uc2FiaWxpZGFkZXMgcHJpbmNpcGFpczrCoEFuYWxpc2FyIGUgcmV2aXNhciBvIGPDoWxjdWxvIGRlIHRyaWJ1dG9zIGZlZGVyYWlzIChJUlBKLENTTEwsUElTLENPRklOUywgSW1wb3N0b3MgcmV0aWRvcyBuYSBmb250ZSk7QW5hbGlzYXIgZSByZXZpc2FyIG8gcHJlZW5jaGltZW50byBkYXMgb2JyaWdhw6fDtWVzIGFjZXNzw7NyaWFzO0Fjb21wYW5oYXIgZSBhbmFsaXNhciBhcyBhbHRlcmHDp8O1ZXMgbmEgbGVnaXNsYcOnw6NvIHRyaWJ1dMOhcmlhO0F0ZW5kZXIgZmlzY2FsaXphw6fDtWVzLCBhdWRpdG9yaWFzIGludGVybmFzIGUgZXh0ZXJuYXMuwqBSZXF1aXNpdG9zOkV4cGVyacOqbmNpYSBuYSDDoXJlYSB0cmlidXTDoXJpYTtFeHBlcmnDqm5jaWEgY29tIElSUEosQ1NMTCBlIEVDRkV4cGVyacOqbmNpYSBjb20gUC4uLjwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIEJhcnVlcmkKICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjI0LzA3LzIwMTg8L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIG9kZCAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzM3NjMyL2xpZGVyLWRlLWZhc2hpb250cm9uaWNzLXRlbGVmb25pYS1wb3J0by1hbGVncmUtcnMiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczNzYzMiIgaWQ9InYxNzM3NjMyIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iTMOtZGVyIGRlIEZhc2hpb250cm9uaWNzIChUZWxlZm9uaWEpICAtIFBvcnRvIEFsZWdyZSAtIFJTIj4KICAgICAgICAgICAgTMOtZGVyIGRlIEZhc2hpb250cm9uaWNzIChUZWxlZm9uaWEpICAtIFBvcnRvIEFsZWdyZSAtIFJTICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICA8bWFyaz5DPC9tYXJrPiZBIE1vZGFzCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgQXV4aWxpYXIvT3BlcmFjaW9uYWwKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+Vml2w6puY2lhIGNvbSBWYXJlam8gZGUgTW9kYSDDqSBjb25zaWRlcmFkbyB1bSBkaWZlcmVuY2lhbC4NCkV4cGVyacOqbmNpYSBlbSB2ZW5kYSBhdGl2YSBkZSBwcm9kdXRvcy9zZXJ2acOnb3MgZGUgdGVsZWZvbmlhLg0KQ29uaGVjaW1lbnRvIGLDoXNpY28gZGUgaW5mb3Jtw6F0aWNhLg0KU2Vyw6EgcmVzcG9uc8OhdmVsIHBlbGEgdmVuZGEgZGUgY2VsdWxhcmVzLCBwbGFub3MsIHJlY2FyZ2EgZSByZWzDs2dpb3MsIMKgZXhlY3XDp8OjbyBkYXMgZXRhcGFzIGRlIGV4cG9zacOnw6NvIGRvcyBwcm9kdXRvcyBzZWd1aW5kbyBhIGVzdHJhdMOpZ2lhIGNvcnBvcmF0aXZhLg0KVml2w6puY2lhIGNvbSBHZXN0w6NvIGRlIEVxdWlwZXMuDQpEZXNlasOhdmVsIGVuc2lubyBzdXBlcmlvciBjdXJzYW5kbyAobsOjbyBvYnJpZ2F0w7NyaW8pLi4uPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgUG9ydG8gQWxlZ3JlCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj43IGRheXMgYWdvPC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBldmVuICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3Mzc2MzcvbGlkZXItZGUtZmFzaGlvbnRyb25pY3MtdGVsZWZvbmlhLWZsb3JpYW5vcG9saXMtc2MiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczNzYzNyIgaWQ9InYxNzM3NjM3IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iTMOtZGVyIGRlIEZhc2hpb250cm9uaWNzIChUZWxlZm9uaWEpICAtIEZsb3JpYW7Ds3BvbGlzIC0gU0MiPgogICAgICAgICAgICBMw61kZXIgZGUgRmFzaGlvbnRyb25pY3MgKFRlbGVmb25pYSkgIC0gRmxvcmlhbsOzcG9saXMgLSBTQyAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgPG1hcms+QzwvbWFyaz4mQSBNb2RhcwogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIEF1eGlsaWFyL09wZXJhY2lvbmFsCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPlZpdsOqbmNpYSBjb20gVmFyZWpvIGRlIE1vZGEgw6kgY29uc2lkZXJhZG8gdW0gZGlmZXJlbmNpYWwuDQpFeHBlcmnDqm5jaWEgZW0gdmVuZGEgYXRpdmEgZGUgcHJvZHV0b3Mvc2VydmnDp29zIGRlIHRlbGVmb25pYS4NCkNvbmhlY2ltZW50byBiw6FzaWNvIGRlIGluZm9ybcOhdGljYS4NClNlcsOhIHJlc3BvbnPDoXZlbCBwZWxhIHZlbmRhIGRlIGNlbHVsYXJlcywgcGxhbm9zLCByZWNhcmdhIGUgcmVsw7NnaW9zLCDCoGV4ZWN1w6fDo28gZGFzIGV0YXBhcyBkZSBleHBvc2nDp8OjbyBkb3MgcHJvZHV0b3Mgc2VndWluZG8gYSBlc3RyYXTDqWdpYSBjb3Jwb3JhdGl2YS4NClZpdsOqbmNpYSBjb20gR2VzdMOjbyBkZSBFcXVpcGVzLg0KRGVzZWrDoXZlbCBlbnNpbm8gc3VwZXJpb3IgY3Vyc2FuZG8gKG7Do28gb2JyaWdhdMOzcmlvKS4uLjwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIEZsb3JpYW7Ds3BvbGlzCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj43IGRheXMgYWdvPC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBvZGQgIj4KICA8aGVhZGVyIGNsYXNzPSJjbGVhcmZpeCI+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1hZGljaW9uYWlzLWhlYWRlciBjbGVhcmZpeCI+CiAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVtcHJlc2EtMjQiPjwvc3Bhbj4KICAgICAgPC9maWd1cmU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWhlYWRlciI+CiAgICAgIDxoMiBjbGFzcz0iY2FyZ28iPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy92MTczNzYzOS9saWRlci1kZS1mYXNoaW9udHJvbmljcy10ZWxlZm9uaWEtY3VyaXRpYmEtcHIiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczNzYzOSIgaWQ9InYxNzM3NjM5IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iTMOtZGVyIGRlIEZhc2hpb250cm9uaWNzIChUZWxlZm9uaWEpICAtIEN1cml0aWJhIC0gUFIiPgogICAgICAgICAgICBMw61kZXIgZGUgRmFzaGlvbnRyb25pY3MgKFRlbGVmb25pYSkgIC0gQ3VyaXRpYmEgLSBQUiAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgPG1hcms+QzwvbWFyaz4mQSBNb2RhcwogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIEF1eGlsaWFyL09wZXJhY2lvbmFsCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPlZpdsOqbmNpYSBjb20gVmFyZWpvIGRlIE1vZGEgw6kgY29uc2lkZXJhZG8gdW0gZGlmZXJlbmNpYWwuDQpFeHBlcmnDqm5jaWEgZW0gdmVuZGEgYXRpdmEgZGUgcHJvZHV0b3Mvc2VydmnDp29zIGRlIHRlbGVmb25pYS4NCkNvbmhlY2ltZW50byBiw6FzaWNvIGRlIGluZm9ybcOhdGljYS4NClNlcsOhIHJlc3BvbnPDoXZlbCBwZWxhIHZlbmRhIGRlIGNlbHVsYXJlcywgcGxhbm9zLCByZWNhcmdhIGUgcmVsw7NnaW9zLCDCoGV4ZWN1w6fDo28gZGFzIGV0YXBhcyBkZSBleHBvc2nDp8OjbyBkb3MgcHJvZHV0b3Mgc2VndWluZG8gYSBlc3RyYXTDqWdpYSBjb3Jwb3JhdGl2YS4NClZpdsOqbmNpYSBjb20gR2VzdMOjbyBkZSBFcXVpcGVzLg0KRGVzZWrDoXZlbCBlbnNpbm8gc3VwZXJpb3IgY3Vyc2FuZG8gKG7Do28gb2JyaWdhdMOzcmlvKS4uLjwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIEN1cml0aWJhCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj43IGRheXMgYWdvPC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBldmVuICI+CiAgPGhlYWRlciBjbGFzcz0iY2xlYXJmaXgiPgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYWRpY2lvbmFpcy1oZWFkZXIgY2xlYXJmaXgiPgogICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgIDwvZmlndXJlPgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1oZWFkZXIiPgogICAgICA8aDIgY2xhc3M9ImNhcmdvIj4KICAgICAgICA8YSBocmVmPSIvdmFnYXMvdjE3Mzc2NDEvbGlkZXItZGUtZmFzaGlvbnRyb25pY3MtdGVsZWZvbmlhLW1hcmluZ2EtcHIiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczNzY0MSIgaWQ9InYxNzM3NjQxIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iTMOtZGVyIGRlIEZhc2hpb250cm9uaWNzIChUZWxlZm9uaWEpICAtIE1hcmluZ8OhIC0gUFIiPgogICAgICAgICAgICBMw61kZXIgZGUgRmFzaGlvbnRyb25pY3MgKFRlbGVmb25pYSkgIC0gTWFyaW5nw6EgLSBQUiAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgPG1hcms+QzwvbWFyaz4mQSBNb2RhcwogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIEF1eGlsaWFyL09wZXJhY2lvbmFsCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPlZpdsOqbmNpYSBjb20gVmFyZWpvIGRlIE1vZGEgw6kgY29uc2lkZXJhZG8gdW0gZGlmZXJlbmNpYWwuDQpFeHBlcmnDqm5jaWEgZW0gdmVuZGEgYXRpdmEgZGUgcHJvZHV0b3Mvc2VydmnDp29zIGRlIHRlbGVmb25pYS4NCkNvbmhlY2ltZW50byBiw6FzaWNvIGRlIGluZm9ybcOhdGljYS4NClNlcsOhIHJlc3BvbnPDoXZlbCBwZWxhIHZlbmRhIGRlIGNlbHVsYXJlcywgcGxhbm9zLCByZWNhcmdhIGUgcmVsw7NnaW9zLCDCoGV4ZWN1w6fDo28gZGFzIGV0YXBhcyBkZSBleHBvc2nDp8OjbyBkb3MgcHJvZHV0b3Mgc2VndWluZG8gYSBlc3RyYXTDqWdpYSBjb3Jwb3JhdGl2YS4NClZpdsOqbmNpYSBjb20gR2VzdMOjbyBkZSBFcXVpcGVzLg0KRGVzZWrDoXZlbCBlbnNpbm8gc3VwZXJpb3IgY3Vyc2FuZG8gKG7Do28gb2JyaWdhdMOzcmlvKS4uLjwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIE1hcmluZ8OhCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj43IGRheXMgYWdvPC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgogIDxsaSBjbGFzcz0idmFnYSBvZGQgIj4KICA8aGVhZGVyIGNsYXNzPSJjbGVhcmZpeCI+CiAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1hZGljaW9uYWlzLWhlYWRlciBjbGVhcmZpeCI+CiAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVtcHJlc2EtMjQiPjwvc3Bhbj4KICAgICAgPC9maWd1cmU+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWhlYWRlciI+CiAgICAgIDxoMiBjbGFzcz0iY2FyZ28iPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy92MTczNzYyNC9saWRlci1kZS12ZW5kYXMtcHJvZHV0b3MtZmluYW5jZWlyb3MtY3VyaXRpYmEtcHIiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczNzYyNCIgaWQ9InYxNzM3NjI0IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iTMOtZGVyIGRlIFZlbmRhcy9Qcm9kdXRvcyBGaW5hbmNlaXJvcyAtIEN1cml0aWJhIC0gUFIiPgogICAgICAgICAgICBMw61kZXIgZGUgVmVuZGFzL1Byb2R1dG9zIEZpbmFuY2Vpcm9zIC0gQ3VyaXRpYmEgLSBQUiAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgPG1hcms+QzwvbWFyaz4mQSBNb2RhcwogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIEF1eGlsaWFyL09wZXJhY2lvbmFsCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPkV4cGVyacOqbmNpYSBjb20gdmVuZGEgZGUgUHJvZHV0b3MgZSBTZXJ2acOnb3MgRmluYW5jZWlyb3MgKGNhcnTDtWVzL3NlZ3Vyb3MpLg0KRXhwZXJpw6puY2lhIGNvbSBvcGVyYcOnw6NvIGRlIGNhaXhhLiBWaXbDqm5jaWEgY29tIEdlc3TDo28gZGUgRXF1aXBlcy4NCkRlc2Vqw6F2ZWwgZW5zaW5vIHN1cGVyaW9yIGN1cnNhbmRvIChuw6NvIG9icmlnYXTDs3JpbykuIERpc3BvbmliaWxpZGFkZSBwYXJhIHRyYWJhbGhhciBhb3MgZmluYWlzIGRlIHNlbWFuYSBlIGZlY2hhbWVudG8gZGUgTG9qYS4gIFNlcsOhIHJlc3BvbnPDoXZlbCBwZWxhIHZlbmRhIGRlIFByb2R1dG9zIEZpbmFuY2Vpcm9zLCBhbsOhbGlzZSBkZSByZXN1bHRhZG9zIGUgcGxhbmVqYW1lbnRvIGRhcyByb3RpbmFzIGRhIGVxdWlwZS48L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBDdXJpdGliYQogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+NyBkYXlzIGFnbzwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2EgZXZlbiAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzM3NjI4L2xpZGVyLWRlLXZlbmRhcy1wcm9kdXRvcy1maW5hbmNlaXJvcy1tYXJpbmdhLXByIiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3Mzc2MjgiIGlkPSJ2MTczNzYyOCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9IkzDrWRlciBkZSBWZW5kYXMvUHJvZHV0b3MgRmluYW5jZWlyb3MgLSBNYXJpbmfDoSAtIFBSIj4KICAgICAgICAgICAgTMOtZGVyIGRlIFZlbmRhcy9Qcm9kdXRvcyBGaW5hbmNlaXJvcyAtIE1hcmluZ8OhIC0gUFIgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIDxtYXJrPkM8L21hcms+JkEgTW9kYXMKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBBdXhpbGlhci9PcGVyYWNpb25hbAogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5FeHBlcmnDqm5jaWEgY29tIHZlbmRhIGRlIFByb2R1dG9zIGUgU2VydmnDp29zIEZpbmFuY2Vpcm9zIChjYXJ0w7Vlcy9zZWd1cm9zKS4NCkV4cGVyacOqbmNpYSBjb20gb3BlcmHDp8OjbyBkZSBjYWl4YS4gVml2w6puY2lhIGNvbSBHZXN0w6NvIGRlIEVxdWlwZXMuDQpEZXNlasOhdmVsIGVuc2lubyBzdXBlcmlvciBjdXJzYW5kbyAobsOjbyBvYnJpZ2F0w7NyaW8pLiBEaXNwb25pYmlsaWRhZGUgcGFyYSB0cmFiYWxoYXIgYW9zIGZpbmFpcyBkZSBzZW1hbmEgZSBmZWNoYW1lbnRvIGRlIExvamEuICBTZXLDoSByZXNwb25zw6F2ZWwgcGVsYSB2ZW5kYSBkZSBQcm9kdXRvcyBGaW5hbmNlaXJvcywgYW7DoWxpc2UgZGUgcmVzdWx0YWRvcyBlIHBsYW5lamFtZW50byBkYXMgcm90aW5hcyBkYSBlcXVpcGUuPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgTWFyaW5nw6EKICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjcgZGF5cyBhZ288L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIG9kZCAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzM3NjE4L2xpZGVyLWRlLXZlbmRhcy1wcm9kdXRvcy1maW5hbmNlaXJvcy1wb3J0by1hbGVncmUtcnMiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczNzYxOCIgaWQ9InYxNzM3NjE4IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iTMOtZGVyIGRlIFZlbmRhcy9Qcm9kdXRvcyBGaW5hbmNlaXJvcyAtIFBvcnRvIEFsZWdyZSAtIFJTIj4KICAgICAgICAgICAgTMOtZGVyIGRlIFZlbmRhcy9Qcm9kdXRvcyBGaW5hbmNlaXJvcyAtIFBvcnRvIEFsZWdyZSAtIFJTICAKPC9hPiAgICAgIDwvaDI+CiAgICAgIDxzcGFuIGNsYXNzPSJlbXByVmFnYSI+CiAgICAgICAgICA8bWFyaz5DPC9tYXJrPiZBIE1vZGFzCiAgICAgIDwvc3Bhbj4KICAgICAgPGRpdiBjbGFzcz0ibml2ZWxRdGRWYWdhcyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0ibml2ZWxWYWdhIj4KICAgICAgICAgICAgQXV4aWxpYXIvT3BlcmFjaW9uYWwKICAgICAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2hlYWRlcj4KCiAgPGRpdiBjbGFzcz0iZGV0YWxoZXMiPgogICAgPHA+RXhwZXJpw6puY2lhIGNvbSB2ZW5kYSBkZSBQcm9kdXRvcyBlIFNlcnZpw6dvcyBGaW5hbmNlaXJvcyAoY2FydMO1ZXMvc2VndXJvcykuDQpFeHBlcmnDqm5jaWEgY29tIG9wZXJhw6fDo28gZGUgY2FpeGEuIFZpdsOqbmNpYSBjb20gR2VzdMOjbyBkZSBFcXVpcGVzLg0KRGVzZWrDoXZlbCBlbnNpbm8gc3VwZXJpb3IgY3Vyc2FuZG8gKG7Do28gb2JyaWdhdMOzcmlvKS4gRGlzcG9uaWJpbGlkYWRlIHBhcmEgdHJhYmFsaGFyIGFvcyBmaW5haXMgZGUgc2VtYW5hIGUgZmVjaGFtZW50byBkZSBMb2phLiAgU2Vyw6EgcmVzcG9uc8OhdmVsIHBlbGEgdmVuZGEgZGUgUHJvZHV0b3MgRmluYW5jZWlyb3MsIGFuw6FsaXNlIGRlIHJlc3VsdGFkb3MgZSBwbGFuZWphbWVudG8gZGFzIHJvdGluYXMgZGEgZXF1aXBlLjwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIFBvcnRvIEFsZWdyZQogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+NyBkYXlzIGFnbzwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2EgZXZlbiAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzM3NjIwL2xpZGVyLWRlLXZlbmRhcy1wcm9kdXRvcy1maW5hbmNlaXJvcy1mbG9yaWFub3BvbGlzLXNjIiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3Mzc2MjAiIGlkPSJ2MTczNzYyMCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9IkzDrWRlciBkZSBWZW5kYXMvUHJvZHV0b3MgRmluYW5jZWlyb3MgLSBGbG9yaWFuw7Nwb2xpcyAtIFNDIj4KICAgICAgICAgICAgTMOtZGVyIGRlIFZlbmRhcy9Qcm9kdXRvcyBGaW5hbmNlaXJvcyAtIEZsb3JpYW7Ds3BvbGlzIC0gU0MgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIDxtYXJrPkM8L21hcms+JkEgTW9kYXMKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBBdXhpbGlhci9PcGVyYWNpb25hbAogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5FeHBlcmnDqm5jaWEgY29tIHZlbmRhIGRlIFByb2R1dG9zIGUgU2VydmnDp29zIEZpbmFuY2Vpcm9zIChjYXJ0w7Vlcy9zZWd1cm9zKS4NCkV4cGVyacOqbmNpYSBjb20gb3BlcmHDp8OjbyBkZSBjYWl4YS4gVml2w6puY2lhIGNvbSBHZXN0w6NvIGRlIEVxdWlwZXMuDQpEZXNlasOhdmVsIGVuc2lubyBzdXBlcmlvciBjdXJzYW5kbyAobsOjbyBvYnJpZ2F0w7NyaW8pLiBEaXNwb25pYmlsaWRhZGUgcGFyYSB0cmFiYWxoYXIgYW9zIGZpbmFpcyBkZSBzZW1hbmEgZSBmZWNoYW1lbnRvIGRlIExvamEuICBTZXLDoSByZXNwb25zw6F2ZWwgcGVsYSB2ZW5kYSBkZSBQcm9kdXRvcyBGaW5hbmNlaXJvcywgYW7DoWxpc2UgZGUgcmVzdWx0YWRvcyBlIHBsYW5lamFtZW50byBkYXMgcm90aW5hcyBkYSBlcXVpcGUuPC9wPgogIDwvZGl2PgogICAgPGZvb3Rlcj4KICAgICAgICA8c3BhbiBjbGFzcz0idmFnYS1sb2NhbCI+CiAgICAgICAgICA8aW1nIGFsdD0iSWNvbmUgZGUgbG9jYWxpemHDp8OjbyIgc3JjPSIvYXNzZXRzL3ZhZ2FzL3Blc3F1aXNhcy9mZWVkcy9pY29uLW1hcGEtNmUyNTUwYzM4OWZmYzA1OTc4MDdhYjdkYjgzOTA3Yzguc3ZnIiAvPgogICAgICAgICAgRmxvcmlhbsOzcG9saXMKICAgICAgICA8L3NwYW4+CiAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tcmVsb2dpby0yNCBkYXRhLXB1YmxpY2FjYW8iPjcgZGF5cyBhZ288L3NwYW4+CiAgICA8L2Zvb3Rlcj4KPC9saT4KCiAgPGxpIGNsYXNzPSJ2YWdhIG9kZCAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzMzNzAzL2xpZGVyLWRlLXZpc3VhbC1tZXJjaGFuZGlzaW5nLXZtLWZsb3JpYW5vcG9saXMtc2MiIGNsYXNzPSJsaW5rLWRldGFsaGVzLXZhZ2EiIGRhdGEtaWQtdmFnYT0iMTczMzcwMyIgaWQ9InYxNzMzNzAzIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdWYWdhX1Zpc3VhbGl6YWRhJyk7IiB0aXRsZT0iTMOtZGVyIGRlIFZpc3VhbCBNZXJjaGFuZGlzaW5nIChWTSkgICAtIEZsb3JpYW7Ds3BvbGlzIC0gU0MiPgogICAgICAgICAgICBMw61kZXIgZGUgVmlzdWFsIE1lcmNoYW5kaXNpbmcgKFZNKSAgIC0gRmxvcmlhbsOzcG9saXMgLSBTQyAgCjwvYT4gICAgICA8L2gyPgogICAgICA8c3BhbiBjbGFzcz0iZW1wclZhZ2EiPgogICAgICAgICAgPG1hcms+QzwvbWFyaz4mQSBNb2RhcwogICAgICA8L3NwYW4+CiAgICAgIDxkaXYgY2xhc3M9Im5pdmVsUXRkVmFnYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Im5pdmVsVmFnYSI+CiAgICAgICAgICAgIEF1eGlsaWFyL09wZXJhY2lvbmFsCiAgICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9oZWFkZXI+CgogIDxkaXYgY2xhc3M9ImRldGFsaGVzIj4KICAgIDxwPkV4cGVyacOqbmNpYSBjb20gbW9kYSBlIGV4cG9zacOnw6NvIGRlIHByb2R1dG9zIG5hIGxvamEuDQpWaXbDqm5jaWEgY29tIEdlc3TDo28gZGUgRXF1aXBlcy4NClNlcsOhIHJlc3BvbnPDoXZlbCBwZWxhIGFuw6FsaXNlIGRlIHJlc3VsdGFkb3MgZSBwbGFuZWphbWVudG8gZGFzIHJvdGluYXMgZGEgZXF1aXBlLCBhY29tcGFuaGFtZW50byBkYSBtb250YWdlbSBkZSB2aXRyaW5lcywgcHJvZHXDp8OjbyBkZSBtb2RhIG5vcyBtYW5lcXVpbnMsIGV4ZWN1w6fDo28gZGFzIGV0YXBhcyBkZSBleHBvc2nDp8OjbyBlIGNpY2xvIGRlIHZpZGEgZG8gcHJvZHV0byBzZWd1aW5kbyBhIGVzdHJhdMOpZ2lhIGNvcnBvcmF0aXZhLg0KRGVzZWrDoXZlbCBlbnNpbm8gc3VwZXJpb3IgY3Vyc2FuZG8gKG7Do28gb2JyaWdhdMOzcmlvKS4gRGlzcG8uLi48L3A+CiAgPC9kaXY+CiAgICA8Zm9vdGVyPgogICAgICAgIDxzcGFuIGNsYXNzPSJ2YWdhLWxvY2FsIj4KICAgICAgICAgIDxpbWcgYWx0PSJJY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbWFwYS02ZTI1NTBjMzg5ZmZjMDU5NzgwN2FiN2RiODM5MDdjOC5zdmciIC8+CiAgICAgICAgICBGbG9yaWFuw7Nwb2xpcwogICAgICAgIDwvc3Bhbj4KICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1yZWxvZ2lvLTI0IGRhdGEtcHVibGljYWNhbyI+MTgvMDcvMjAxODwvc3Bhbj4KICAgIDwvZm9vdGVyPgo8L2xpPgoKICA8bGkgY2xhc3M9InZhZ2EgZXZlbiAiPgogIDxoZWFkZXIgY2xhc3M9ImNsZWFyZml4Ij4KICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWFkaWNpb25haXMtaGVhZGVyIGNsZWFyZml4Ij4KICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICA8L2ZpZ3VyZT4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtaGVhZGVyIj4KICAgICAgPGgyIGNsYXNzPSJjYXJnbyI+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzL3YxNzMzNzI2L29wZXJhZG9yLXZpc3VhbC1tZXJjaGFuZGlzaW5nLXZtLWxvbmRyaW5hLXByIiBjbGFzcz0ibGluay1kZXRhbGhlcy12YWdhIiBkYXRhLWlkLXZhZ2E9IjE3MzM3MjYiIGlkPSJ2MTczMzcyNiIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYV9WaXN1YWxpemFkYScpOyIgdGl0bGU9Ik9wZXJhZG9yICBWaXN1YWwgTWVyY2hhbmRpc2luZyBWTSAtICBMb25kcmluYSAvIFBSIj4KICAgICAgICAgICAgT3BlcmFkb3IgIFZpc3VhbCBNZXJjaGFuZGlzaW5nIFZNIC0gIExvbmRyaW5hIC8gUFIgIAo8L2E+ICAgICAgPC9oMj4KICAgICAgPHNwYW4gY2xhc3M9ImVtcHJWYWdhIj4KICAgICAgICAgIDxtYXJrPkM8L21hcms+JkEgTW9kYXMKICAgICAgPC9zcGFuPgogICAgICA8ZGl2IGNsYXNzPSJuaXZlbFF0ZFZhZ2FzIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJuaXZlbFZhZ2EiPgogICAgICAgICAgICBBdXhpbGlhci9PcGVyYWNpb25hbAogICAgICAgICAgPC9zcGFuPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvaGVhZGVyPgoKICA8ZGl2IGNsYXNzPSJkZXRhbGhlcyI+CiAgICA8cD5NaXNzw6NvOg0KU3VhIG1pc3PDo28gw6kgZGUgZW5jYW50YXIsIGluc3BpcmFyIGUgc2UgY29uZWN0YXIgY29tIG5vc3NhIGNsaWVudGUhIFNlcsOhIHJlc3BvbnPDoXZlbCBwb3IgZXhlY3V0YXIgYXMgdGFyZWZhcywgdGFpcyBjb21vLCB2aXN1YWwgbWVyY2hhbmRpc2luZyBkYSBsb2phLCBhdGVuZGltZW50byBuYSBsb2phLCB0cm9jYXMgZGUgbWVyY2Fkb3JpYXMsIG1hbnV0ZW7Dp8Ojby9vcmdhbml6YcOnw6NvIGRhcyByZXNlcnZhcywgcmVtYXJjYcOnw7VlcywgcmVwb3Npw6fDo28sIGFycnVtYcOnw6NvLCBkaXN0cmlidWnDp8OjbywgY2VsdWxhcmVzLCBlbGV0csO0bmljb3MgZSByZWzDs2dpb3MgZSB2ZW5kYXMsIGUgY3VtcHJpbWVudG8gZG9zIHByb2Nlc3NvcyBvcGVyYWNpb25haXMgZGVzZW52b2x2aWRvcyBwZWxhIGVtcC4uLjwvcD4KICA8L2Rpdj4KICAgIDxmb290ZXI+CiAgICAgICAgPHNwYW4gY2xhc3M9InZhZ2EtbG9jYWwiPgogICAgICAgICAgPGltZyBhbHQ9Ikljb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1tYXBhLTZlMjU1MGMzODlmZmMwNTk3ODA3YWI3ZGI4MzkwN2M4LnN2ZyIgLz4KICAgICAgICAgIExvbmRyaW5hCiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLXJlbG9naW8tMjQgZGF0YS1wdWJsaWNhY2FvIj4xOC8wNy8yMDE4PC9zcGFuPgogICAgPC9mb290ZXI+CjwvbGk+CgoKCiAgICA8L3VsPgogIDwvZGl2PgogIDxhIGhyZWY9IiMiIGNsYXNzPSJidE1haXNWYWdhcyBidG4iIGRhdGEtZmlsdHJvPSJwYWdpbmEiIGRhdGEtZ3J1cG89InRvZGFzVmFnYXMiIGRhdGEtdG90YWw9IjkiIGRhdGEtdXJsPSIvdmFnYXMtZGUtYz9wYWdpbmE9MiZhbXA7cT1jIiBpZD0ibWFpc1ZhZ2FzIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdhbnVuY2lvcycpOyI+bW9yZSBqb2Igb3BlbmluZ3M8L2E+Cjwvc2VjdGlvbj4KCgo8L3NlY3Rpb24+CgoKPGFzaWRlIGlkPSJwZXNxdWlzYUZpbHRyb3MiIHN0eWxlPSIiPgogIDxkaXYgaWQ9ImZpbHRyb3NTZWxlY2lvbmFkb3MiIGNsYXNzPSJjbGVhcmZpeCI+CiAgICAgIDxzcGFuPlJlZmluZSB5b3VyIHNlYXJjaDwvc3Bhbj4KICAgIDxhIGhyZWY9IiMiIGNsYXNzPSJmaWx0cm9zLWJ0biBhdGl2byI+RmlsdHJvczwvYT4KICAgIDxzcGFuIGNsYXNzPSJzZXRpbmhhIj48L3NwYW4+CiAgPC9kaXY+CgogIDxkaXYgY2xhc3M9ImZpbHRyb3MiPgogICAgICAgIDxkaXYgY2xhc3M9ImZpbHRybyIgZGF0YS1mYWNldC1ncm91cD0iQ2l0eSI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iZmFjZXRHcm91cCBidG4iPkNpdHk8L3NwYW4+Cjx1bCBjbGFzcz0iZmFjZXQgZmFjZXRWYWx1ZXMganMtZmFjZXQtdWwiPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLXNhby1wYXVsbyIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgU8OjbyBQYXVsbwogICAgICAgICAgKDEwMykKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tcmlvLWRlLWphbmVpcm8iIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIFJpbyBkZSBKYW5laXJvCiAgICAgICAgICAoMzYpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWJlbG8taG9yaXpvbnRlIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBCZWxvIEhvcml6b250ZQogICAgICAgICAgKDI2KQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpID4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1jdXJpdGliYSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQ3VyaXRpYmEKICAgICAgICAgICgxNykKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tY2FtcGluYXMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENhbXBpbmFzCiAgICAgICAgICAoMTQpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWJhcnVlcmkiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEJhcnVlcmkKICAgICAgICAgICgxMSkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tc2FvLWJlcm5hcmRvLWRvLWNhbXBvIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBTw6NvIEJlcm5hcmRvIGRvIENhbXBvCiAgICAgICAgICAoOSkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tc2FvLWNhZXRhbm8tZG8tc3VsIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBTw6NvIENhZXRhbm8gZG8gU3VsCiAgICAgICAgICAoOCkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tYnJhc2lsaWEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEJyYXPDrWxpYQogICAgICAgICAgKDQpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWZsb3JpYW5vcG9saXMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEZsb3JpYW7Ds3BvbGlzCiAgICAgICAgICAoNCkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWZvcnRhbGV6YSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgRm9ydGFsZXphCiAgICAgICAgICAoNCkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLXBvcnRvLWFsZWdyZSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgUG9ydG8gQWxlZ3JlCiAgICAgICAgICAoNCkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLXJlY2lmZSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgUmVjaWZlCiAgICAgICAgICAoNCkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWJldGltIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBCZXRpbQogICAgICAgICAgKDMpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1ib2EtdmlzdGEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEJvYSBWaXN0YQogICAgICAgICAgKDMpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1jYW1wby1ncmFuZGUiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENhbXBvIEdyYW5kZQogICAgICAgICAgKDMpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1jdWlhYmEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEN1aWFiw6EKICAgICAgICAgICgzKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0taG9ydG9sYW5kaWEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEhvcnRvbMOibmRpYQogICAgICAgICAgKDMpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1sb25kcmluYSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgTG9uZHJpbmEKICAgICAgICAgICgzKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tcm9uZG9ub3BvbGlzIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBSb25kb27Ds3BvbGlzCiAgICAgICAgICAoMykKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWJhdXJ1IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBCYXVydQogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1iZWxlbSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQmVsw6ltCiAgICAgICAgICAoMikKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWNhbXBpbmEtZ3JhbmRlIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBDYW1waW5hIEdyYW5kZQogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1jYW1wb3MtZG9zLWdveXRhY2F6ZXMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENhbXBvcyBkb3MgR295dGFjYXplcwogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1jb2xpbmEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENvbGluYQogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1jb250YWdlbSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQ29udGFnZW0KICAgICAgICAgICgyKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tZ29pYW5pYSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgR29pw6JuaWEKICAgICAgICAgICgyKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0taXR1IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBJdHUKICAgICAgICAgICgyKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tamF0YWkiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEphdGHDrQogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1tYXJpbmdhIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBNYXJpbmfDoQogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1tYXVhIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBNYXXDoQogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1uYXRhbCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgTmF0YWwKICAgICAgICAgICgyKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tcmliZWlyYW8tcHJldG8iIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIFJpYmVpcsOjbyBQcmV0bwogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1zYW50YS1iYXJiYXJhLWQtb2VzdGUiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIFNhbnRhIELDoXJiYXJhIGQmI3gyNztPZXN0ZQogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1zaW5vcCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgU2lub3AKICAgICAgICAgICgyKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tdGVyZXNpbmEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIFRlcmVzaW5hCiAgICAgICAgICAoMikKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLXZhbGluaG9zIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBWYWxpbmhvcwogICAgICAgICAgKDIpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1hbHRvLWFyYWd1YWlhIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBBbHRvIEFyYWd1YWlhCiAgICAgICAgICAoMSkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWFtZXJpY2FuYSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQW1lcmljYW5hCiAgICAgICAgICAoMSkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWFyYWNydXoiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEFyYWNydXoKICAgICAgICAgICgxKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tYXJhcmFxdWFyYSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQXJhcmFxdWFyYQogICAgICAgICAgKDEpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1hcmFjYXR1YmEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEFyYcOnYXR1YmEKICAgICAgICAgICgxKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tYmFycmEtZG9zLWNvcXVlaXJvcyIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQmFycmEgZG9zIENvcXVlaXJvcwogICAgICAgICAgKDEpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1jYXBpdmFyaSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQ2FwaXZhcmkKICAgICAgICAgICgxKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tY2FzY2F2ZWwiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENhc2NhdmVsCiAgICAgICAgICAoMSkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWNheGFtYnUiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENheGFtYnUKICAgICAgICAgICgxKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWMtZW0tZGl2aW5vcG9saXMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIERpdmluw7Nwb2xpcwogICAgICAgICAgKDEpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1kdXF1ZS1kZS1jYXhpYXMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0NpZGFkZScpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIER1cXVlIGRlIENheGlhcwogICAgICAgICAgKDEpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYy1lbS1lc3RyZWxhIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdDaWRhZGUnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBFc3RyZWxhCiAgICAgICAgICAoMSkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jLWVtLWpvaW52aWxsZSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQ2lkYWRlJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgSm9pbnZpbGxlCiAgICAgICAgICAoMSkKPC9hPiAgICAgIDwvbGk+CjwvdWw+CjxkaXYgY2xhc3M9J2xpbmtNYWlzIGJ0biBjbG9zZWQnIGRhdGEtbWFpcz0nKyAobW9yZSknIGRhdGEtbWVub3M9Jy0gKGxlc3MpJz4rIChtb3JlKTwvZGl2PgoKICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJmaWx0cm8iIGRhdGEtZmFjZXQtZ3JvdXA9IkNvdW50cnkiPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImZhY2V0R3JvdXAgYnRuIj5Db3VudHJ5PC9zcGFuPgo8dWwgY2xhc3M9ImZhY2V0IGZhY2V0VmFsdWVzIGpzLWZhY2V0LXVsIj4KICAgICAgPGxpID4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9wJTVCJTVEPUJyYXNpbCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnUGFpcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEJyYXNpbAogICAgICAgICAgKDM1MikKPC9hPiAgICAgIDwvbGk+CjwvdWw+CgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZpbHRybyIgZGF0YS1mYWNldC1ncm91cD0iQXJlYXMiPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImZhY2V0R3JvdXAgYnRuIj5BcmVhczwvc3Bhbj4KPHVsIGNsYXNzPSJmYWNldCBmYWNldFZhbHVlcyBqcy1mYWNldC11bCI+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0yNCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBJbmZvcm1hdGlvbiBUZWNobm9sb2d5L0kuVC4KICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpID4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTE3IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEVuZ2luZWVyaW5nIC0gT3RoZXJzCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD02NyIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBJbnRlcm5ldAogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBCdXNpbmVzcyBBZG1pbmlzdHJhdGlvbgogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MTI0IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENvbW1lcmNpYWwvU2FsZXMgTWFuYWdlbWVudAogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9NDUiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgU2FsZXMKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpID4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTg0IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEF0ZW5kLiBhIGNsaWVudGUgLSBUZWxlbWFya2V0aW5nL0NhbGwgQ2VudGVyCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD04MiIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBTYWxlcyAtIFJldGFpbAogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9NzEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgRWxlY3Ryb3RlY2huaWNhbCBFbmdpbmVlcmluZwogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9OTMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgRWxlY3Ryb25pYyBFbmdpbmVlcmluZwogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTYwIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIFdlYiBEZXNpZ24KICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD02OCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBUZWxlY29tbXVuaWNhdGlvbnMKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD00OCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBGYXNoaW9uIERlc2lnbgogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTk0IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIE1lY2hhbmljYWwgRW5naW5lZXJpbmcKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD00MiIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBUZWNobmljYWwgU2VydmljZXMgLSBPdGhlcnMKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD05NSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBQcm9kdWN0aW9uIEVuZ2luZWVyaW5nCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MTUiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgRWNvbm9taWNzCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MTAyIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIE1hdGhlbWF0aWNzL1N0YXRpc3RpY3MKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0xMTciIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgTGFuZCBUcmFuc3BvcnQKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0xMzEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgVGVjaG5pY2FsIFNlcnZpY2VzIC0gRWxlY3Ryb25pY3MKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0yNiIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBMb2dpc3RpY3MKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD00MCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBHZW5lcmFsIFNlcnZpY2VzCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9OTAiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgSW50ZXJpb3IgRGVzaWduCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9NDYiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgVGVjaG5pY2FsIFNhbGVzCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9NTEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQmFua3MKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0xMTQiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgVGVjaG5pY2FsIFNlcnZpY2VzIC0gTWVjaGFuaWNhbAogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTI3IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIE1hcmtldGluZwogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTEwIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEFjY291bnRpbmcKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0xMTMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgVGVjaG5pY2FsIFNlcnZpY2VzIC0gRWxlY3RyaWNhbAogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTEyIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENvbW11bmljYXRpb25zCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9NSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBBdWRpdG9yCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MTEiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgRmluYW5jaWFsIENvbnRyb2xsZXIKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0yMSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBGaW5hbmNlCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MzIiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQWR2ZXJ0aXNpbmcKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD05MiIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBDaXZpbCBFbmdpbmVlcmluZwogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTk3IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENvbGxlZ2UgVGVhY2hpbmcgYW5kIFJlc2VhcmNoCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MiIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBMYXcvTGVnYWwKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0zNSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBRdWFsaXR5CiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MTI3IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIE1ldGFsbHVyZ3kgYW5kIE1hdGVyaWFscyBFbmdpbmVlcmluZwogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTg4IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIENvbnN0cnVjdGlvbgogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTExMSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBNYW5hZ2VtZW50IFNlcnZpY2VzCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MTM3IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIFBldHJvbGV1bQogICAgICAgICAgCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgY2xhc3M9bGVzcz4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9hJTVCJTVEPTMiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgQWdyb25vbXkKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD05IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdBcmVhcycpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEludGVybmF0aW9uYWwgVHJhZGUKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0xNiIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBOdXJzaW5nCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9MTgiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgVGVhY2hpbmcgLSBPdGhlcnMKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0zMSIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBQcm9kdWN0aW9uL01hbnVmYWN0dXJpbmcKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0zNCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBPcmdhbml6YXRpb24gYW5kIE1ldGhvZHMKICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpIGNsYXNzPWxlc3M+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/YSU1QiU1RD0zOCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnQXJlYXMnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBQdWJsaWMgUmVsYXRpb25zCiAgICAgICAgICAKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSBjbGFzcz1sZXNzPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2ElNUIlNUQ9NTkiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ0FyZWFzJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgR3JhcGhpYyBEZXNpZ24KICAgICAgICAgIAo8L2E+ICAgICAgPC9saT4KPC91bD4KPGRpdiBjbGFzcz0nbGlua01haXMgYnRuIGNsb3NlZCcgZGF0YS1tYWlzPScrIChtb3JlKScgZGF0YS1tZW5vcz0nLSAobGVzcyknPisgKG1vcmUpPC9kaXY+CgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImZpbHRybyIgZGF0YS1mYWNldC1ncm91cD0iTGV2ZWwiPgogICAgICAgICAgPHNwYW4gY2xhc3M9ImZhY2V0R3JvdXAgYnRuIj5MZXZlbDwvc3Bhbj4KPHVsIGNsYXNzPSJmYWNldCBmYWNldFZhbHVlcyBqcy1mYWNldC11bCI+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/aCU1QiU1RD00MCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnTml2ZWwnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBGdWxsCiAgICAgICAgICAoMTE2KQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpID4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9oJTVCJTVEPTUwIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdOaXZlbCcpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIFNlbmlvcgogICAgICAgICAgKDcwKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpID4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9oJTVCJTVEPTIyIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdOaXZlbCcpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEFzc2lzdGFudC9PcGVyYXRpb25hbAogICAgICAgICAgKDYyKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpID4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9oJTVCJTVEPTMwIiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdOaXZlbCcpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIEp1bmlvci9UcmFpbmVlCiAgICAgICAgICAoNjEpCjwvYT4gICAgICA8L2xpPgogICAgICA8bGkgPgogICAgICAgIDxhIGhyZWY9Ii92YWdhcy1kZS1jP2glNUIlNUQ9MjgiIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ1Blc3F1aXNhJywgJ05pdmVsJyk7Ij4gICAgICAgICAgPHNwYW4gY2xhc3M9IiI+PC9zcGFuPgogICAgICAgICAgSW50ZXJuc2hpcAogICAgICAgICAgKDIyKQo8L2E+ICAgICAgPC9saT4KICAgICAgPGxpID4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9oJTVCJTVEPTI2IiBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdQZXNxdWlzYScsICdOaXZlbCcpOyI+ICAgICAgICAgIDxzcGFuIGNsYXNzPSIiPjwvc3Bhbj4KICAgICAgICAgIFRlY2huaWNpYW4KICAgICAgICAgICgxMSkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/aCU1QiU1RD02MCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnTml2ZWwnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBTdXBlcnZpc2lvbi9Dby1vcmRpbmF0aW9uCiAgICAgICAgICAoNSkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/aCU1QiU1RD03MCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnTml2ZWwnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBNYW5hZ2VtZW50CiAgICAgICAgICAoNCkKPC9hPiAgICAgIDwvbGk+CiAgICAgIDxsaSA+CiAgICAgICAgPGEgaHJlZj0iL3ZhZ2FzLWRlLWM/aCU1QiU1RD04MCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnTml2ZWwnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBCb2FyZCBvZiBEaXJlY3RvcnMKICAgICAgICAgICgxKQo8L2E+ICAgICAgPC9saT4KPC91bD4KCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZmlsdHJvIHVsdGltbyIgZGF0YS1mYWNldC1ncm91cD0iRXhjbHVzaXZlIGpvYiBmb3IgSGFuZGljYXBwZWQgUGVvcGxlIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJmYWNldEdyb3VwIGJ0biI+RXhjbHVzaXZlIGpvYiBmb3IgSGFuZGljYXBwZWQgUGVvcGxlPC9zcGFuPgo8dWwgY2xhc3M9ImZhY2V0IGZhY2V0VmFsdWVzIGpzLWZhY2V0LXVsIj4KICAgICAgPGxpID4KICAgICAgICA8YSBocmVmPSIvdmFnYXMtZGUtYz9wY2QlNUIlNUQ9VCIgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnUGVzcXVpc2EnLCAnVmFnYXNQQ0QnKTsiPiAgICAgICAgICA8c3BhbiBjbGFzcz0iIj48L3NwYW4+CiAgICAgICAgICBZZXMKICAgICAgICAgICgxMSkKPC9hPiAgICAgIDwvbGk+CjwvdWw+CgogICAgICAgIDwvZGl2PgogIDwvZGl2PgoKICA8ZGl2IGlkPSJmaWx0cm9zLWJvdG9lcyI+CiAgICA8YnV0dG9uIGlkPSJidG4tY2FuY2VsYXItZmFjZXRzIiBjbGFzcz0iYnRuIGJ0bi1jYW5jZWxhci1mYWN0ZXMiPkNhbmNlbGFyPC9idXR0b24+CiAgICA8YnV0dG9uIGlkPSJidG4tYXBsaWNhci1mYWN0ZXMiIGNsYXNzPSJidG4tb2sgYnRuIGJ0bi1hcGxpY2FyLWZhY3RlcyI+QXBsaWNhciBmaWx0cm9zPC9idXR0b24+CiAgPC9kaXY+CgogIDwhLS0gU2t5IC0tPgo8ZGl2IGlkPSdkaXYtZ3B0LWFkLTEzNTc3NjAyMjM0NzMtMCcgc3R5bGU9J3dpZHRoOjE2MHB4OyBoZWlnaHQ6NjAwcHg7IGNsZWFyOmJvdGg7Jz4KICAgICAgPGRpdiBpZD0idmFnYXNfYnVzY2Ffc2t5c2NyYXBwZXJfMTYweDYwMCI+CiAgICAgICAgPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgogICAgICAgICAgICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKSB7IGdvb2dsZXRhZy5kaXNwbGF5KCd2YWdhc19idXNjYV9za3lzY3JhcHBlcl8xNjB4NjAwJyk7IH0pOwogICAgICAgIDwvc2NyaXB0PgogICAgICA8L2Rpdj4KPC9kaXY+Cgo8L2FzaWRlPgoKCiAgPC9kaXY+CjwvZGl2PgoKPC9kaXY+Cgo8Zm9vdGVyIGlkPSJyb2RhcGUiPgogIDxkaXYgaWQ9InJvZGFwZUZhaXhhIj4KICA8ZGl2IGNsYXNzPSJjZW50ZXIiPgogICAgPGRpdiBjbGFzcz0icHVsbC1yaWdodC1jb250YWluZXIiPgoKICAgICAgPGRpdiBpZD0ibGlzdGFJZGlvbWFzIiBjbGFzcz0ibGlzdGEtaWRpb21hcy1jb250YWluZXIiPgogIDx1bCBjbGFzcz0iaWRpb21hLWxpc3RhIj4KICAgIDxkaXYgY2xhc3M9Im9wY29lcy1jb250YWluZXIiPgogICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXBsaWNhcl9sb2NhbGUoJ2VuJyk7IiBjbGFzcz0iaXRlbSBzZWxlY2lvbmFkbyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbmUgYnRFbiI+PC9zcGFuPgogICAgICAgICAgPGxpPmVuZ2xpc2g8L2xpPgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmFwbGljYXJfbG9jYWxlKCdwdC1CUicpOyIgY2xhc3M9Iml0ZW0gIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uZSBidFB0Ij48L3NwYW4+CiAgICAgICAgICA8bGk+cG9ydHVndcOqczwvbGk+CiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXBsaWNhcl9sb2NhbGUoJ2VzJyk7IiBjbGFzcz0iaXRlbSAiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb25lIGJ0RXMiPjwvc3Bhbj4KICAgICAgICAgIDxsaT5lc3Bhw7FvbDwvbGk+CiAgICAgICAgPC9hPgogICAgPC9kaXY+CiAgPC91bD4KPC9kaXY+CgogICAgICA8dWwgaWQ9Imxpc3RhUmVkZXMiPgogICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vZmFjZWJvb2suY29tL1ZBR0FTY29tLyIgY2xhc3M9ImxpbmtGYWNlIiBvbmNsaWNrPSJnYSgmI3gyNztzZW5kJiN4Mjc7LCAmI3gyNztldmVudCYjeDI3OywgJiN4Mjc7RmFjZWJvb2sgLSBDdXJ0aXImI3gyNzssICYjeDI3O0NsaWNrJiN4Mjc7KTsiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iVHdpdHRlciI+VHdpdHRlcjwvYT48L2xpPgogICAgICAgIDwhLS0gUGFyYSBjYW5kaWRhdG9zIC0tPgogICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vdHdpdHRlci5jb20vdmFnYXMiIGNsYXNzPSJsaW5rVHdpdHRlciIgb25jbGljaz0iZ2EoJiN4Mjc7c2VuZCYjeDI3OywgJiN4Mjc7ZXZlbnQmI3gyNzssICYjeDI3O1R3aXR0ZXIgLSBTZWd1aXImI3gyNzssICYjeDI3O0NsaWNrJiN4Mjc7KTsiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iRmFjZWJvb2siPkZhY2Vib29rPC9hPjwvbGk+CiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tLzEwNTUyMDYyMTgxODY1ODQyNTkxNSIgY2xhc3M9ImxpbmtHb29nbGUiIG9uY2xpY2s9ImdhKCYjeDI3O3NlbmQmI3gyNzssICYjeDI3O2V2ZW50JiN4Mjc7LCAmI3gyNztHb29nbGUrIC0gU2VndWlyJiN4Mjc7LCAmI3gyNztDbGljayYjeDI3Oyk7IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Ikdvb2dsZSArIj5Hb29nbGUgKzwvYT48L2xpPgogICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vbGlua2QuaW4vR3J1cG9WQUdBUyIgY2xhc3M9ImxpbmtMaW5rZWRJbiIgb25jbGljaz0iZ2EoJiN4Mjc7c2VuZCYjeDI3OywgJiN4Mjc7ZXZlbnQmI3gyNzssICYjeDI3O0xpbmtlZEluIC0gQ29uZWN0YXImI3gyNzssICYjeDI3O0NsaWNrJiN4Mjc7KTsiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4iPkxpbmtlZEluPC9hPjwvbGk+CiAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+CgogIAogIDxkaXYgaWQ9InJvZGFwZUxpbmtzIj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgogICAgICA8ZGl2IGNsYXNzPSJyb2RDb2wgcm9kSW5zdGl0dWNpb25hbCI+CiAgICAgICAgPGRpdiBjbGFzcz0icm9kVGl0Ij48YSBocmVmPSIvaW5zdGl0dWNpb25hbC8iPkluc3RpdHV0aW9uYWw8L2E+PC9kaXY+CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9pbnN0aXR1Y2lvbmFsL3F1ZW0tc29tb3MiPldobyB3ZSBhcmU8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvcHJvZHV0b3MiPk91ciBwcm9kdWN0czwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wYXJjZXJpYXMiPlBhcnRuZXJzaGlwczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wcm9qZXRvcy1zb2NpYWlzIj5Tb2NpYWwgUmVzcG9uc2liaWxpdHk8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvaW1wcmVuc2EiPlByZXNzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3RyYWJhbGhlLWNvbm9zY28iPldvcmsgd2l0aCB1czwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0icm9kQ29sIHJvZEVtcHJlc2FzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb2RUaXQiPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvIj5Db21wYW5pZXM8L2E+PC9kaXY+CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvIj5Tb2x1w6fDtWVzIHBhcmEgUiZhbXA7UzwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvL3JlZGVzLWxvamFzIj5SZWRlcyBkZSBsb2phczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvL3Byb2dyYW1hLWVzdGFnaW8tdHJhaW5lZSI+UHJvZ3JhbWFzIGRlIEVzdMOhZ2lvIGUgVHJhaW5lZTwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvL3NvZnR3YXJlLXZhZ2FzLWUtcGFydG5lciI+Q29uaGXDp2EgbyBWQUdBUyBlLXBhcnRuZXI8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvc29sdWNhby1yZWNydXRhbWVudG8tc2VsZWNhby9kdXZpZGFzLWZyZXF1ZW50ZXMiPkZBUTwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jbGllbnRlcy12YWdhcyI+Q2xpZW50czwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvLyNmYWxlLWNvbm9zY28iPjxzcGFuIGNsYXNzPSJ0cmFuc2xhdGlvbl9taXNzaW5nIiB0aXRsZT0idHJhbnNsYXRpb24gbWlzc2luZzogZW4uZ2xvYmFsLm5hdi5lbXByZXNhcy5zb2xpY2l0YXItY29udGF0byI+U29saWNpdGFyIENvbnRhdG88L3NwYW4+PC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL2dlbnRlcmgvIj5HZW50ZVJIPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJyb2RDb2wgcm9kQ2FuZGlkYXRvcyI+CiAgICAgICAgPGRpdiBjbGFzcz0icm9kVGl0Ij48YSBocmVmPSIvIj5BcHBsaWNhbnRzPC9hPjwvZGl2PgogICAgICAgIDx1bD4KICAgICAgICAgIDxsaT48YSBocmVmPSIvIj5Kb2Igc2VhcmNoPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlcnZpY29zLWdyYXR1aXRvcy1jYW5kaWRhdG9zIj5GcmVlIHNlcnZpY2VzIHRvIGNhbmRpZGF0ZXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvZW1wcmVzYXMtY29udHJhdGFuZG8iPkNvbXBhbmllcyBoaXJpbmc8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FuZGlkYXRvcy9yZWRlcy1zb2NpYWlzIj5Tb2NpYWwgbmV0d29ya3M8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FuZGlkYXRvcy9jb21vLWZ1bmNpb25hIj5WQUdBUy5jb20uYnI8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvcHJvZmlzc29lcyI+VkFHQVMgUHJvZmlzc8O1ZXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvbWFwYS1kZS1jYXJyZWlyYXMvc29icmUiPk1hcGEgVkFHQVMgZGUgQ2FycmVpcmFzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL2FqdWRhLWNhbmRpZGF0b3MiIHRhcmdldD0iX2JsYW5rIj5IZWxwPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICAgICAgPGRpdiBjbGFzcz0icm9kQ29sIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm9kVGl0Ij5Ib3RzaXRlczwvZGl2PgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuZm9ydW12YWdhcy5jb20uYnIiIHRhcmdldD0iX2JsYW5rIj5WQUdBUyBGb3J1bTwvYT48L2xpPgogICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvYXJ0ZXZhZ2FzIiB0YXJnZXQ9Il9ibGFuayI+YXJ0ZVZBR0FTPC9hPjwvbGk+CiAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnZhZ2FzLmNvbS5ici9wdWJsaWNpZGFkZSIgdGFyZ2V0PSJfYmxhbmsiPkFkdmVydGlzZW1lbnQ8L2E+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0iY29weXJpZ2h0Ij48c3BhbiBpZD0icm9kUG93ZXJlZCI+UG93ZXJlZCBieSA8c3Ryb25nPlZBR0FTPC9zdHJvbmc+PC9zcGFuPkNvcHlyaWdodCDCqSAyMDE4IFZBR0FTIFRlY25vbG9naWEgLiBBbGwgcmlnaHRzIHJlc2VydmVkLiB8IDxhIGhyZWY9Ii90ZXJtb3MtZGUtdXNvIj5UZXJtcyBvZiB1c2U8L2E+PC9kaXY+CgogICAgPC9kaXY+CiAgPC9kaXY+Cgo8L2Zvb3Rlcj4KCjxkaXYgaWQ9Im92ZXJsYXkiPjwvZGl2Pgo8c2NyaXB0IHNyYz0iL2Fzc2V0cy9hcHBsaWNhdGlvbi01OGM3MjI3ZDJkMDY1NWQzYzlkYjBhMWNiMmU1Yjc5YS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KCjxkaXYgc3R5bGU9ImRpc3BsYXk6IG5vbmUiIGlkPSJmaW0tZGUtcGFnaW5hIj4KICAKPC9kaXY+CgoKPC9ib2R5Pgo8L2h0bWw+Cg==
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:06 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1728789/desenvolvedor-c-c-pleno
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:06 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=dbc7d83d41d40d72d9dc25017b2af2a101533172806; expires=Fri, 02-Aug-19
        01:20:06 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=1fbba54e59088acd99f5d1a0b576eb7e5b2868080318b9d6f5; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTEyNTc0YjliZGQzYTQ0MDAwMmUwMzc5MDY5YmFjOTQ3BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMTJhb0RoYmIxT3VVbjkvV3VuMlRxS0NaK3RacW5kNnZ5YnVLUk5sOFQxaVE9BjsARg%3D%3D--7c3ef69d5153842960a2ab7784bf5ac2132e603f;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"a51354f9e2ee779c5e3f8c9d47dbff2c"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 2a7317ac83b06af1b1a17e08fd8728db
      X-Runtime:
      - '0.050683'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8581c404af1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:06 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1741012/desenvolvedor-c-c-campinas
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:06 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=db141d46fd5640d50a09ce150bfd1023e1533172806; expires=Fri, 02-Aug-19
        01:20:06 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=aa4254db47d1d4e75b7e5ffc1a18eb340976cb5c24b19a4b93; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTQ3NzdmZDE3OGI2NzE5MDEwYTIxZDM1NTg5MTEyODM0BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMUY5Y0xOQ3I2L1QyTTJCUHV1bXpTQzJyUmFMOVYrZVR0M29TOUUvRys1SWs9BjsARg%3D%3D--18b94871050bb2ff6e0adf19b4811359de98c5ac;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"18de8ce751dc8f3f0cc52f13cf8db28b"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - d23f2461260fb057d9617fd46f04bc89
      X-Runtime:
      - '0.071819'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb859fa714bff-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:07 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1718978/desenvolvedor-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:07 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=dd1d858cceb12b0c6bc2d40b062a0c8bd1533172807; expires=Fri, 02-Aug-19
        01:20:07 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=17816af2e44202c8dd410805bc3b4b7eb8b8fbb3f999eadefc; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWQ3OTVhYmY0NDFjZjMzNzEwYTMxZWYzZjBkNjRhZWNkBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMSs2bzVJcUM0TlZQQVJPNi9sRkx5eUwxMGVuSEsxY3IrV1hyQVhaaUViNUU9BjsARg%3D%3D--0c0271d713a552c8a10e23c9f7ade2d0dfdb1a3c;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"b537ad7b3ad170e0df3afee41bd62409"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 1715c1d0550dd060e01b60938cf853cd
      X-Runtime:
      - '0.095301'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb85c4cb64ac1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InB0LWJyIj4KPGhlYWQ+CiAgPHRpdGxlPlZhZ2EgRGVzZW52b2x2ZWRvciBDIyAtIElCT1BFIEludGVsaWfDqm5jaWEgKHYxNzE4OTc4KSB8IFZBR0FTLmNvbS5icjwvdGl0bGU+CiAgPGxpbmsgaHJlZj0naHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG86NDAwLDcwMCw0MDBpdGFsaWN8VGl0aWxsaXVtK1dlYjo0MDAsNjAwLDQwMGl0YWxpYywzMDAsNzAwfE9wZW4rU2FucycgcmVsPSdzdHlsZXNoZWV0JyB0eXBlPSd0ZXh0L2Nzcyc+CiAgPGxpbmsgaHJlZj0iL2Fzc2V0cy9wZXNzb2FzLTQwZTBiZjhjOWIxMjdjMWNjMjg4OGE0Yjk4ZTgyM2Q1LmNzcyIgbWVkaWE9InNjcmVlbiIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgLz4KCiAgPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiLz4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPndpbmRvdy5OUkVVTXx8KE5SRVVNPXt9KTtOUkVVTS5pbmZvPXsiYmVhY29uIjoiYmFtLm5yLWRhdGEubmV0IiwiZXJyb3JCZWFjb24iOiJiYW0ubnItZGF0YS5uZXQiLCJsaWNlbnNlS2V5IjoiYjkyMTIxNjVkOCIsImFwcGxpY2F0aW9uSUQiOiI2ODkxNjU3MCIsInRyYW5zYWN0aW9uTmFtZSI6IklGMVpFVWRlQ2dvSFFCbERXQVJUUkVwRlZCVVhGMXRGVkVwTVFWOEtRZz09IiwicXVldWVUaW1lIjo2NCwiYXBwbGljYXRpb25UaW1lIjo5NywiYWdlbnQiOiIifTwvc2NyaXB0Pgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+d2luZG93Lk5SRVVNfHwoTlJFVU09e30pLF9fbnJfcmVxdWlyZT1mdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihuKXtpZighdFtuXSl7dmFyIG89dFtuXT17ZXhwb3J0czp7fX07ZVtuXVswXS5jYWxsKG8uZXhwb3J0cyxmdW5jdGlvbih0KXt2YXIgbz1lW25dWzFdW3RdO3JldHVybiByKG98fHQpfSxvLG8uZXhwb3J0cyl9cmV0dXJuIHRbbl0uZXhwb3J0c31pZigiZnVuY3Rpb24iPT10eXBlb2YgX19ucl9yZXF1aXJlKXJldHVybiBfX25yX3JlcXVpcmU7Zm9yKHZhciBvPTA7bzxuLmxlbmd0aDtvKyspcihuW29dKTtyZXR1cm4gcn0oezE6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7fWZ1bmN0aW9uIG8oZSx0LG4pe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBpKGUsW2Yubm93KCldLmNvbmNhdCh1KGFyZ3VtZW50cykpLHQ/bnVsbDp0aGlzLG4pLHQ/dm9pZCAwOnRoaXN9fXZhciBpPWUoImhhbmRsZSIpLGE9ZSgyKSx1PWUoMyksYz1lKCJlZSIpLmdldCgidHJhY2VyIiksZj1lKCJsb2FkZXIiKSxzPU5SRVVNOyJ1bmRlZmluZWQiPT10eXBlb2Ygd2luZG93Lm5ld3JlbGljJiYobmV3cmVsaWM9cyk7dmFyIHA9WyJzZXRQYWdlVmlld05hbWUiLCJzZXRDdXN0b21BdHRyaWJ1dGUiLCJzZXRFcnJvckhhbmRsZXIiLCJmaW5pc2hlZCIsImFkZFRvVHJhY2UiLCJpbmxpbmVIaXQiLCJhZGRSZWxlYXNlIl0sZD0iYXBpLSIsbD1kKyJpeG4tIjthKHAsZnVuY3Rpb24oZSx0KXtzW3RdPW8oZCt0LCEwLCJhcGkiKX0pLHMuYWRkUGFnZUFjdGlvbj1vKGQrImFkZFBhZ2VBY3Rpb24iLCEwKSxzLnNldEN1cnJlbnRSb3V0ZU5hbWU9byhkKyJyb3V0ZU5hbWUiLCEwKSx0LmV4cG9ydHM9bmV3cmVsaWMscy5pbnRlcmFjdGlvbj1mdW5jdGlvbigpe3JldHVybihuZXcgcikuZ2V0KCl9O3ZhciBtPXIucHJvdG90eXBlPXtjcmVhdGVUcmFjZXI6ZnVuY3Rpb24oZSx0KXt2YXIgbj17fSxyPXRoaXMsbz0iZnVuY3Rpb24iPT10eXBlb2YgdDtyZXR1cm4gaShsKyJ0cmFjZXIiLFtmLm5vdygpLGUsbl0sciksZnVuY3Rpb24oKXtpZihjLmVtaXQoKG8/IiI6Im5vLSIpKyJmbi1zdGFydCIsW2Yubm93KCkscixvXSxuKSxvKXRyeXtyZXR1cm4gdC5hcHBseSh0aGlzLGFyZ3VtZW50cyl9Y2F0Y2goZSl7dGhyb3cgYy5lbWl0KCJmbi1lcnIiLFthcmd1bWVudHMsdGhpcyxlXSxuKSxlfWZpbmFsbHl7Yy5lbWl0KCJmbi1lbmQiLFtmLm5vdygpXSxuKX19fX07YSgic2V0TmFtZSxzZXRBdHRyaWJ1dGUsc2F2ZSxpZ25vcmUsb25FbmQsZ2V0Q29udGV4dCxlbmQsZ2V0Ii5zcGxpdCgiLCIpLGZ1bmN0aW9uKGUsdCl7bVt0XT1vKGwrdCl9KSxuZXdyZWxpYy5ub3RpY2VFcnJvcj1mdW5jdGlvbihlKXsic3RyaW5nIj09dHlwZW9mIGUmJihlPW5ldyBFcnJvcihlKSksaSgiZXJyIixbZSxmLm5vdygpXSl9fSx7fV0sMjpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0KXt2YXIgbj1bXSxyPSIiLGk9MDtmb3IociBpbiBlKW8uY2FsbChlLHIpJiYobltpXT10KHIsZVtyXSksaSs9MSk7cmV0dXJuIG59dmFyIG89T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTt0LmV4cG9ydHM9cn0se31dLDM6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCxuKXt0fHwodD0wKSwidW5kZWZpbmVkIj09dHlwZW9mIG4mJihuPWU/ZS5sZW5ndGg6MCk7Zm9yKHZhciByPS0xLG89bi10fHwwLGk9QXJyYXkobzwwPzA6byk7KytyPG87KWlbcl09ZVt0K3JdO3JldHVybiBpfXQuZXhwb3J0cz1yfSx7fV0sNDpbZnVuY3Rpb24oZSx0LG4pe3QuZXhwb3J0cz17ZXhpc3RzOiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlJiZ3aW5kb3cucGVyZm9ybWFuY2UudGltaW5nJiYidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcubmF2aWdhdGlvblN0YXJ0fX0se31dLGVlOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcigpe31mdW5jdGlvbiBvKGUpe2Z1bmN0aW9uIHQoZSl7cmV0dXJuIGUmJmUgaW5zdGFuY2VvZiByP2U6ZT9jKGUsdSxpKTppKCl9ZnVuY3Rpb24gbihuLHIsbyxpKXtpZighZC5hYm9ydGVkfHxpKXtlJiZlKG4scixvKTtmb3IodmFyIGE9dChvKSx1PW0obiksYz11Lmxlbmd0aCxmPTA7ZjxjO2YrKyl1W2ZdLmFwcGx5KGEscik7dmFyIHA9c1t5W25dXTtyZXR1cm4gcCYmcC5wdXNoKFtiLG4scixhXSksYX19ZnVuY3Rpb24gbChlLHQpe3ZbZV09bShlKS5jb25jYXQodCl9ZnVuY3Rpb24gbShlKXtyZXR1cm4gdltlXXx8W119ZnVuY3Rpb24gdyhlKXtyZXR1cm4gcFtlXT1wW2VdfHxvKG4pfWZ1bmN0aW9uIGcoZSx0KXtmKGUsZnVuY3Rpb24oZSxuKXt0PXR8fCJmZWF0dXJlIix5W25dPXQsdCBpbiBzfHwoc1t0XT1bXSl9KX12YXIgdj17fSx5PXt9LGI9e29uOmwsZW1pdDpuLGdldDp3LGxpc3RlbmVyczptLGNvbnRleHQ6dCxidWZmZXI6ZyxhYm9ydDphLGFib3J0ZWQ6ITF9O3JldHVybiBifWZ1bmN0aW9uIGkoKXtyZXR1cm4gbmV3IHJ9ZnVuY3Rpb24gYSgpeyhzLmFwaXx8cy5mZWF0dXJlKSYmKGQuYWJvcnRlZD0hMCxzPWQuYmFja2xvZz17fSl9dmFyIHU9Im5yQGNvbnRleHQiLGM9ZSgiZ29zIiksZj1lKDIpLHM9e30scD17fSxkPXQuZXhwb3J0cz1vKCk7ZC5iYWNrbG9nPXN9LHt9XSxnb3M6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCxuKXtpZihvLmNhbGwoZSx0KSlyZXR1cm4gZVt0XTt2YXIgcj1uKCk7aWYoT2JqZWN0LmRlZmluZVByb3BlcnR5JiZPYmplY3Qua2V5cyl0cnl7cmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLHQse3ZhbHVlOnIsd3JpdGFibGU6ITAsZW51bWVyYWJsZTohMX0pLHJ9Y2F0Y2goaSl7fXJldHVybiBlW3RdPXIscn12YXIgbz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1yfSx7fV0saGFuZGxlOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQsbixyKXtvLmJ1ZmZlcihbZV0sciksby5lbWl0KGUsdCxuKX12YXIgbz1lKCJlZSIpLmdldCgiaGFuZGxlIik7dC5leHBvcnRzPXIsci5lZT1vfSx7fV0saWQ6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUpe3ZhciB0PXR5cGVvZiBlO3JldHVybiFlfHwib2JqZWN0IiE9PXQmJiJmdW5jdGlvbiIhPT10Py0xOmU9PT13aW5kb3c/MDphKGUsaSxmdW5jdGlvbigpe3JldHVybiBvKyt9KX12YXIgbz0xLGk9Im5yQGlkIixhPWUoImdvcyIpO3QuZXhwb3J0cz1yfSx7fV0sbG9hZGVyOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcigpe2lmKCF4Kyspe3ZhciBlPWguaW5mbz1OUkVVTS5pbmZvLHQ9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IilbMF07aWYoc2V0VGltZW91dChzLmFib3J0LDNlNCksIShlJiZlLmxpY2Vuc2VLZXkmJmUuYXBwbGljYXRpb25JRCYmdCkpcmV0dXJuIHMuYWJvcnQoKTtmKHksZnVuY3Rpb24odCxuKXtlW3RdfHwoZVt0XT1uKX0pLGMoIm1hcmsiLFsib25sb2FkIixhKCkraC5vZmZzZXRdLG51bGwsImFwaSIpO3ZhciBuPWQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7bi5zcmM9Imh0dHBzOi8vIitlLmFnZW50LHQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUobix0KX19ZnVuY3Rpb24gbygpeyJjb21wbGV0ZSI9PT1kLnJlYWR5U3RhdGUmJmkoKX1mdW5jdGlvbiBpKCl7YygibWFyayIsWyJkb21Db250ZW50IixhKCkraC5vZmZzZXRdLG51bGwsImFwaSIpfWZ1bmN0aW9uIGEoKXtyZXR1cm4gRS5leGlzdHMmJnBlcmZvcm1hbmNlLm5vdz9NYXRoLnJvdW5kKHBlcmZvcm1hbmNlLm5vdygpKToodT1NYXRoLm1heCgobmV3IERhdGUpLmdldFRpbWUoKSx1KSktaC5vZmZzZXR9dmFyIHU9KG5ldyBEYXRlKS5nZXRUaW1lKCksYz1lKCJoYW5kbGUiKSxmPWUoMikscz1lKCJlZSIpLHA9d2luZG93LGQ9cC5kb2N1bWVudCxsPSJhZGRFdmVudExpc3RlbmVyIixtPSJhdHRhY2hFdmVudCIsdz1wLlhNTEh0dHBSZXF1ZXN0LGc9dyYmdy5wcm90b3R5cGU7TlJFVU0ubz17U1Q6c2V0VGltZW91dCxTSTpwLnNldEltbWVkaWF0ZSxDVDpjbGVhclRpbWVvdXQsWEhSOncsUkVROnAuUmVxdWVzdCxFVjpwLkV2ZW50LFBSOnAuUHJvbWlzZSxNTzpwLk11dGF0aW9uT2JzZXJ2ZXJ9O3ZhciB2PSIiK2xvY2F0aW9uLHk9e2JlYWNvbjoiYmFtLm5yLWRhdGEubmV0IixlcnJvckJlYWNvbjoiYmFtLm5yLWRhdGEubmV0IixhZ2VudDoianMtYWdlbnQubmV3cmVsaWMuY29tL25yLTEwNzEubWluLmpzIn0sYj13JiZnJiZnW2xdJiYhL0NyaU9TLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpLGg9dC5leHBvcnRzPXtvZmZzZXQ6dSxub3c6YSxvcmlnaW46dixmZWF0dXJlczp7fSx4aHJXcmFwcGFibGU6Yn07ZSgxKSxkW2xdPyhkW2xdKCJET01Db250ZW50TG9hZGVkIixpLCExKSxwW2xdKCJsb2FkIixyLCExKSk6KGRbbV0oIm9ucmVhZHlzdGF0ZWNoYW5nZSIsbykscFttXSgib25sb2FkIixyKSksYygibWFyayIsWyJmaXJzdGJ5dGUiLHVdLG51bGwsImFwaSIpO3ZhciB4PTAsRT1lKDQpfSx7fV19LHt9LFsibG9hZGVyIl0pOzwvc2NyaXB0PgogIDxtZXRhIGNvbnRlbnQ9ImF1dGhlbnRpY2l0eV90b2tlbiIgbmFtZT0iY3NyZi1wYXJhbSIgLz4KPG1ldGEgY29udGVudD0iKzZvNUlxQzROVlBBUk82L2xGTHl5TDEwZW5ISzFjcitXWHJBWFppRWI1RT0iIG5hbWU9ImNzcmYtdG9rZW4iIC8+CiAgPG1ldGEgY2hhcnNldD0iVVRGLTgiLz4KICA8bWV0YSBuYW1lPSJrZXl3b3JkcyIgY29udGVudD0iRW1wcmVnb3MsIFZhZ2FzLCBDdXJyaWN1bHVtLCBDYXJyZWlyYSwgQ3VycsOtY3VsbywgRGVzZW52b2x2ZWRvciBDIywgSUJPUEUgSW50ZWxpZ8OqbmNpYSwgU8OjbyBQYXVsbyIvPgogIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJWYWdhIGRlIEVtcHJlZ28gcGFyYSBEZXNlbnZvbHZlZG9yIEMjIGVtIFPDo28gUGF1bG8gbmEgSUJPUEUgSW50ZWxpZ8OqbmNpYS4gQ2FuZGlkYXRlLXNlIGdyYXR1aXRhbWVudGUgbm8gVkFHQVMuY29tLmJyIi8+CgogIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvcG5nIiBocmVmPSIvYXNzZXRzL211bmRvcy9mYXZpY29uX3AtM2VhMjg2NDkyOTczNDBkOWEzMjY1ZmNmOWYxOWRhZTUuaWNvIi8+CiAgPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBocmVmPSIvYXNzZXRzL211bmRvcy9hcHBsZS10b3VjaC1pY29uLWJmNDQyODVkMTYzYTM0MjBkZWZjMDQzMDMxMTAzYTY2LnBuZyIvPgogIAogICAgPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHBzOi8vd3d3LnZhZ2FzLmNvbS5ici92YWdhcy92MTcxODk3OC9kZXNlbnZvbHZlZG9yLWMiLz4KCiAgICAgIAogIDxtZXRhIGh0dHAtZXF1aXY9IkNhY2hlLUNvbnRyb2wiIGNvbnRlbnQ9Im5vLWNhY2hlLCBuby1zdG9yZSwgbXVzdC1yZXZhbGlkYXRlIiAvPgogIDxtZXRhIGh0dHAtZXF1aXY9IlByYWdtYSIgY29udGVudD0ibm8tY2FjaGUiIC8+CiAgPG1ldGEgaHR0cC1lcXVpdj0iRXhwaXJlcyIgY29udGVudD0iMCIgLz4KCiAgICAgIDxtZXRhIHByb3BlcnR5PSJvZzp0aXRsZSIgY29udGVudD0iRGVzZW52b2x2ZWRvciBDIyAtIFBsZW5vICh2MTcxODk3OCkiLz4KICA8bWV0YSBwcm9wZXJ0eT0ib2c6dHlwZSIgY29udGVudD0iY29tcGFueSIvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHA6Ly93d3cudmFnYXMuY29tLmJyL3ZhZ2FzL3YxNzE4OTc4L2Rlc2Vudm9sdmVkb3ItYyIvPgogIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cDovL3d3dy52YWdhcy5jb20uYnIvYXNzZXRzL3NvY2lhbC9sb2dvX29wZW5fZ3JhcGhfYmlnLWI2M2JkNjk5ZWRlNDllNDU1NGQ3OTAyYTM3OWU5ZmI2LmpwZyIvPgogIDxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9Ind3dy5WQUdBUy5jb20uYnIiLz4KICA8bWV0YSBwcm9wZXJ0eT0iZmI6YXBwX2lkIiBjb250ZW50PSIzMDk3NjY3NDU3NjM0ODkiLz4KCgogIDwhLS1baWYgbHQgSUUgOV0+CiAgICA8c2NyaXB0IHNyYz0iL2Fzc2V0cy9odG1sNS0xMzIxNGYwOGZlZTUxYjMzYjkxYjcwNDA5YjA4NDRjZi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KICA8IVtlbmRpZl0tLT4KICAgICAgPCEtLSBWYWdhcy5jb20gQmVnaW4gVGFpbFRhcmdldCBUYWcgTWFuYWdlciAtLT4KPHNjcmlwdD4KICAoZnVuY3Rpb24oaSkgewogICAgdmFyIHRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICB0cy50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7CiAgICB0cy5hc3luYyA9IHRydWU7CiAgICB0cy5zcmMgPSAoJ2h0dHBzOicgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wgPyAnaHR0cHM6Ly8nIDogJ2h0dHA6Ly8nKSArICd0YWdzLnQudGFpbHRhcmdldC5jb20vdDNtLmpzP2k9JyArIGk7CiAgICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTsKICAgIHMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodHMsIHMpOwogIH0pKCdUVC0xMDIzNS0wL0NULTMwJyk7Cjwvc2NyaXB0Pgo8IS0tIFZhZ2FzLmNvbSBFbmQgVGFpbFRhcmdldCBUYWcgTWFuYWdlciAtLT4KCjwhLS0gUHJlYmlkIENvbmZpZyBTZWN0aW9uIEVORCAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdmFyIFBSRUJJRF9USU1FT1VUID0gMjAwMDsKCiAgICB2YXIgYWRVbml0cyA9IFtdOwogICAgICAgICAgYWRVbml0cy5wdXNoKAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgY29kZTogInZhZ2FzX2Rlc2NyaWNhb19zcXVhcmVfMzAweDI1MCIsCiAgICAgICAgICAgICAgc2l6ZXM6IFszMDAsIDI1MF0sCiAgICAgICAgICAgICAgYmlkczogW3siYmlkZGVyIjoiYXBwbmV4dXMiLCJwYXJhbXMiOnsicGxhY2VtZW50SWQiOiIxMzAyMDkwOCJ9fSx7ImJpZGRlciI6InJ1Ymljb24iLCJwYXJhbXMiOnsiYWNjb3VudElkIjoiMTU0NTIiLCJzaXRlSWQiOiI5Nzc1MiIsInpvbmVJZCI6IjQ1ODc0MiIsInNpemVzIjpbMTVdfX0seyJiaWRkZXIiOiJjcml0ZW8iLCJwYXJhbXMiOnsiem9uZUlkIjoiMTExNDE1NiJ9fV0KICAgICAgICAgICAgfQogICAgICAgICAgKTsKICAgICAgICAgIGFkVW5pdHMucHVzaCgKICAgICAgICAgICAgewogICAgICAgICAgICAgIGNvZGU6ICJ2YWdhc19kZXNjcmljYW9faGFsZnBhZ2VfMzAweDYwMCIsCiAgICAgICAgICAgICAgc2l6ZXM6IFszMDAsIDYwMF0sCiAgICAgICAgICAgICAgYmlkczogW3siYmlkZGVyIjoiYXBwbmV4dXMiLCJwYXJhbXMiOnsicGxhY2VtZW50SWQiOiIxMzAyMDkxNyJ9fSx7ImJpZGRlciI6InJ1Ymljb24iLCJwYXJhbXMiOnsiYWNjb3VudElkIjoiMTU0NTIiLCJzaXRlSWQiOiI5Nzc1MiIsInpvbmVJZCI6IjQ1ODc0MiIsInNpemVzIjpbMTBdfX0seyJiaWRkZXIiOiJjcml0ZW8iLCJwYXJhbXMiOnsiem9uZUlkIjoiMTExNDE1NyJ9fV0KICAgICAgICAgICAgfQogICAgICAgICAgKTsKICAgIAogICAgdmFyIHBianMgPSBwYmpzIHx8IHt9OwogICAgcGJqcy5xdWUgPSBwYmpzLnF1ZSB8fCBbXTsKCiAgICAoZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGQgPSBkb2N1bWVudCwKICAgICAgICAgICAgZSA9IGQuY3JlYXRlRWxlbWVudCgnc2NyaXB0JyksCiAgICAgICAgICAgIHAgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07CiAgICAgICAgZS50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7CiAgICAgICAgZS5hc3luYyA9IHRydWU7CiAgICAgICAgZS5zcmMgPSAnL3NjcmlwdHMvcHVibGljaWRhZGUvcHJlYmlkX3dpdGhfY3VycmVuY3kuanMnOwogICAgICAgIHAuaW5zZXJ0QmVmb3JlKGUsIHAuZmlyc3RDaGlsZCk7CiAgICB9KSgpOwoKICAgIHBianMucXVlLnB1c2goZnVuY3Rpb24oKSB7CiAgICAgICAgY29uc3QgY3VzdG9tR3JhbnVsYXJpdHkgPSB7CiAgICAgICAgICAgICdidWNrZXRzJzogW3snbWluJzogMCwgJ21heCc6IDUwLCAnaW5jcmVtZW50JzogMC4wMSB9XQogICAgICAgIH07CiAgICAgICAgcGJqcy5zZXRDb25maWcoewogICAgICAgICAgICBwcmljZUdyYW51bGFyaXR5OiBjdXN0b21HcmFudWxhcml0eSwKICAgICAgICAgICAgY3VycmVuY3k6IHsKICAgICAgICAgICAgICAgIGFkU2VydmVyQ3VycmVuY3k6ICJCUkwiLAogICAgICAgICAgICAgICAgZ3JhbnVsYXJpdHlNdWx0aXBsaWVyOiAxLAogICAgICAgICAgICAgICAgY29udmVyc2lvblJhdGVGaWxlOiAiaHR0cHM6Ly9jdXJyZW5jeS5wcmViaWQub3JnL2xhdGVzdC5qc29uIgogICAgICAgICAgICB9CiAgICAgICAgfSkKICAgIH0pOwo8L3NjcmlwdD4KPCEtLSBQcmViaWQgQ29uZmlnIFNlY3Rpb24gRU5EIC0tPgoKPCEtLSBQcmViaWQgQm9pbGVycGxhdGUgU2VjdGlvbiBTVEFSVC4gLS0+CjxzY3JpcHQ+CiAgdmFyIGdvb2dsZXRhZyA9IGdvb2dsZXRhZyB8fCB7fTsKICBnb29nbGV0YWcuY21kID0gZ29vZ2xldGFnLmNtZCB8fCBbXTsKICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKSB7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5kaXNhYmxlSW5pdGlhbExvYWQoKTsKICB9KTsKCiAgcGJqcy5xdWUucHVzaChmdW5jdGlvbigpIHsKICAgICAgcGJqcy5hZGRBZFVuaXRzKGFkVW5pdHMpOwogICAgICBwYmpzLnJlcXVlc3RCaWRzKHsKICAgICAgICAgIGJpZHNCYWNrSGFuZGxlcjogc2VuZEFkc2VydmVyUmVxdWVzdAogICAgICB9KTsKICB9KTsKCiAgZnVuY3Rpb24gc2VuZEFkc2VydmVyUmVxdWVzdCgpIHsKICAgICAgaWYgKHBianMuYWRzZXJ2ZXJSZXF1ZXN0U2VudCkgcmV0dXJuOwogICAgICBwYmpzLmFkc2VydmVyUmVxdWVzdFNlbnQgPSB0cnVlOwogICAgICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKSB7CiAgICAgICAgICBwYmpzLnF1ZS5wdXNoKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgIHBianMuc2V0VGFyZ2V0aW5nRm9yR1BUQXN5bmMoKTsKICAgICAgICAgICAgICBnb29nbGV0YWcucHViYWRzKCkucmVmcmVzaCgpOwogICAgICAgICAgfSk7CiAgICAgIH0pOwogIH0KCiAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgc2VuZEFkc2VydmVyUmVxdWVzdCgpOwogIH0sIFBSRUJJRF9USU1FT1VUKTsKCjwvc2NyaXB0Pgo8IS0tIFByZWJpZCBCb2lsZXJwbGF0ZSBTZWN0aW9uIEVORCAtLT4KCjwhLS0gVmFnYXMuY29tIEJlZ2luIEdvb2dsZSBQdWJsaXNoZXIgVGFnIC0tPgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgdmFyIGdldFRhaWxUYXJnZXRQYXJhbSA9IGZ1bmN0aW9uKGEpIHsKICAgIHZhciB0dENvb2tpZU5hbWUgPSAiX3R0ZG1wIjsKICAgIGlmICghd2luZG93Ll90dHByb2ZpbGVzY2FjaGUpIHsKICAgICAgd2luZG93Ll90dHByb2ZpbGVzY2FjaGUgPSB7fTsKICAgICAgdHJ5IHsKICAgICAgICB2YXIgYyA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaCgnKF58OylcXHMqJyArIHR0Q29va2llTmFtZSArICdcXHMqPVxccyooW147XSspJyk7CiAgICAgICAgdmFyIGQgPSBjID8gYy5wb3AoKS5zcGxpdCgnfCcpIDogW107CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIga3YgPSBkW2ldLnNwbGl0KCI6Iik7CiAgICAgICAgICBpZiAoa3ZbMV0gJiYga3ZbMV0uaW5kZXhPZigiLCIpID4gMCkgewogICAgICAgICAgICAgIHdpbmRvdy5fdHRwcm9maWxlc2NhY2hlW2t2WzBdXSA9IGt2WzFdLnNwbGl0KCIsIik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHdpbmRvdy5fdHRwcm9maWxlc2NhY2hlW2t2WzBdXSA9IGt2WzFdOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZSkgewogICAgICB9CiAgICB9CiAgICByZXR1cm4gd2luZG93Ll90dHByb2ZpbGVzY2FjaGVbYV0gPyB3aW5kb3cuX3R0cHJvZmlsZXNjYWNoZVthXSA6ICduYSc7CiAgfTsKCiAgKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGdhZHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTsKICAgICAgZ2Fkcy5hc3luYyA9IHRydWU7CiAgICAgIGdhZHMudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnOwogICAgICB2YXIgdXNlU1NMID0gJ2h0dHBzOicgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2w7CiAgICAgIGdhZHMuc3JjID0gKHVzZVNTTCA/ICdodHRwczonIDogJ2h0dHA6JykgKwogICAgICAgICAgICAgICcvL3d3dy5nb29nbGV0YWdzZXJ2aWNlcy5jb20vdGFnL2pzL2dwdC5qcyc7CiAgICAgIHZhciBub2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdOwogICAgICBub2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGdhZHMsIG5vZGUpOwogIH0pKCk7CgogIGdvb2dsZXRhZy5jbWQucHVzaChmdW5jdGlvbiAoKSB7CiAgICAgICAgZ29vZ2xldGFnLmRlZmluZVNsb3QoJy8xNzIxODM2L3ZhZ2FzX2Rlc2NyaWNhb19zcXVhcmVfMzAweDI1MCcsIFszMDAsIDI1MF0sICd2YWdhc19kZXNjcmljYW9fc3F1YXJlXzMwMHgyNTAnKS5hZGRTZXJ2aWNlKGdvb2dsZXRhZy5wdWJhZHMoKSk7CiAgICAgICAgZ29vZ2xldGFnLmRlZmluZVNsb3QoJy8xNzIxODM2L3ZhZ2FzX2Rlc2NyaWNhb19oYWxmcGFnZV8zMDB4NjAwJywgWzMwMCwgNjAwXSwgJ3ZhZ2FzX2Rlc2NyaWNhb19oYWxmcGFnZV8zMDB4NjAwJykuYWRkU2VydmljZShnb29nbGV0YWcucHViYWRzKCkpOwoKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRMUycsIGdldFRhaWxUYXJnZXRQYXJhbSgnTFMnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0UycsIGdldFRhaWxUYXJnZXRQYXJhbSgnUycpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRUJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdUJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dEMnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0MnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0VScsIGdldFRhaWxUYXJnZXRQYXJhbSgnVScpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRFJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdFJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dEEnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0EnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0RycsIGdldFRhaWxUYXJnZXRQYXJhbSgnRycpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRDQScsIGdldFRhaWxUYXJnZXRQYXJhbSgnQ0EnKSk7CgogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCdxdWVyeScsIFtdKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLmVuYWJsZVNpbmdsZVJlcXVlc3QoKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLmNvbGxhcHNlRW1wdHlEaXZzKCk7CiAgICAgIGdvb2dsZXRhZy5lbmFibGVTZXJ2aWNlcygpOwogIH0pOwo8L3NjcmlwdD4KPCEtLSBFTkQgVmFnYXMuY29tIEdvb2dsZSBQdWJsaXNoZXIgVGFnIC0tPgoKCiAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9sZCtqc29uIj4KICB7CiAgICAiQGNvbnRleHQiOiAiaHR0cDovL3NjaGVtYS5vcmciLAogICAgIkB0eXBlIjogIldlYlNpdGUiLAogICAgIm5hbWUiOiAiVkFHQVMuY29tIiwKICAgICJhbHRlcm5hdGVOYW1lIjogIlNpdGUgZGUgRW1wcmVnb3MgVkFHQVMuY29tLmJyIiwKICAgICJ1cmwiOiAiaHR0cDovL3d3dy52YWdhcy5jb20uYnIiCiAgfQo8L3NjcmlwdD4KCjwvaGVhZD4KCjxib2R5IGNsYXNzPSJwdC1CUiI+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+Ci8vPCFbQ0RBVEFbCiAgICAgIHZhciBkYXRhTGF5ZXIgPSBbeyJwYWdlIjp7InRlbXBsYXRlIjoiVmFnYSIsIm5hbWUiOiJWYWdhIERlc2Vudm9sdmVkb3IgQyMgLSBJQk9QRSBJbnRlbGlnw6puY2lhICh2MTcxODk3OCkiLCJhcmVhIjoiY2FuZGlkYXRvcyIsInBhZ2VWZXJzaW9uIjpudWxsLCJwYWdlVmFnYSI6eyJuYW1lIjoiRGVzZW52b2x2ZWRvciBDIyIsImVtcHJlc2EiOiJJQk9QRSBJbnRlbGlnw6puY2lhIiwiY29kZSI6InYxNzE4OTc4IiwicXVhbnRpdHkiOiIiLCJFeHBpcmF0aW9uIjoiMjAxOC8wOC8yMyIsIkxvY2FsIjoiU8OjbyBQYXVsbyAvIFNQIn19LCJzaXRlIjp7ImRvbWFpbiI6Ind3dy52YWdhcy5jb20uYnIiLCJwcm9kdWN0TmFtZSI6IlZhZ2FzIiwibGFuZ3VhZ2UiOiJQVC1CUiIsImFwcGxpY2F0aW9uIjoiZGVza3RvcCJ9LCJzZXNzaW9uIjp7InNlYXJjaFN0cmluZyI6bnVsbCwic3RhcnRUaW1lIjpudWxsLCJ2aXNpdE51bWJlciI6bnVsbCwibG9nZ2VkIjpmYWxzZX19XTsKCiAgICAgIGRhdGFMYXllci5wdXNoKHsnZXZlbnQnOiAnZGF0YUxheWVyX2xvYWQnfSk7CgovL11dPgo8L3NjcmlwdD4KCiAgPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CjxzY3JpcHQ+KGZ1bmN0aW9uKHcsZCxzLGwsaSl7d1tsXT13W2xdfHxbXTt3W2xdLnB1c2goeydndG0uc3RhcnQnOgpuZXcgRGF0ZSgpLmdldFRpbWUoKSxldmVudDonZ3RtLmpzJ30pO3ZhciBmPWQuZ2V0RWxlbWVudHNCeVRhZ05hbWUocylbMF0sCmo9ZC5jcmVhdGVFbGVtZW50KHMpLGRsPWwhPSdkYXRhTGF5ZXInPycmbD0nK2w6Jyc7ai5hc3luYz10cnVlO2ouc3JjPQonaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vZ3RtLmpzP2lkPScraStkbDtmLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGosZik7Cn0pKHdpbmRvdyxkb2N1bWVudCwnc2NyaXB0JywnZGF0YUxheWVyJywnR1RNLTUySDIzOCcpOzwvc2NyaXB0Pgo8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgLS0+CjwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+Cjxub3NjcmlwdD48aWZyYW1lIHNyYz0iaHR0cHM6Ly93d3cuZ29vZ2xldGFnbWFuYWdlci5jb20vbnMuaHRtbD9pZD1HVE0tNTJIMjM4IgpoZWlnaHQ9IjAiIHdpZHRoPSIwIiBzdHlsZT0iZGlzcGxheTpub25lO3Zpc2liaWxpdHk6aGlkZGVuIj48L2lmcmFtZT48L25vc2NyaXB0Pgo8IS0tIEVuZCBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KCgoKPGRpdj4KCiAgPGEgaWQ9InNraXBweSIgY2xhc3M9InNyLW9ubHkgc3Itb25seS1mb2N1c2FibGUiIGhyZWY9IiNjdi1jb3JwbyI+PGRpdiBjbGFzcz0iY29udGFpbmVyIj48c3BhbiBjbGFzcz0ic2tpcGxpbmstdGV4dCI+UHVsYXIgcGFyYSBvIGNvbnRlw7pkbzwvc3Bhbj48L2Rpdj48L2E+CjxkaXYgaWQ9ImhlYWRlckhvbGRlciI+CgogICAgPGhlYWRlciBpZD0idG9wby1jYW5kaWRhdG8tbG9nYWRvIiBjbGFzcz0iZGVzbG9nYWRvIj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8ZGl2IGlkPSdsb2dvVmFnYXMnPjxhIGhyZWY9Ii8iPlZBR0FTLmNvbS5icjwvYT48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tcG9uZW50cy1ob2xkZXIiPgogICAgICAgICAgICAJPGRpdiBjbGFzcz0iaGVhZGVyLWNvbXBvbmVudHMiPgoJCQkJCTxkaXYgaWQ9InBlc3F1aXNhLW1lbnUiPgogICAgPGEgaHJlZj0iIyIgaWQ9ImJ0bi1wZXNxdWlzYSI+PHNwYW4gY2xhc3M9ImdseXBoaWNvbiBnbHlwaGljb24tc2VhcmNoIj48L3NwYW4+PC9hPgogICAgPGRpdiBpZD0icGVzcXVpc2Etc3VibWVudSI+CiAgICAgICAgPHNwYW4KICAgICAgICAgICAgcm9sZT0iYnV0dG9uIgogICAgICAgICAgICBjbGFzcz0iaWNvbi12b2x0YXItbW9iaWxlLTI0IGJ0bi1mZWNoYXItcGVzcXVpc2EiCiAgICAgICAgICAgIHRhYkluZGV4PXswfQogICAgICAgID48L3NwYW4+CiAgICAgICAgPGZvcm0gYWNjZXB0LWNoYXJzZXQ9IlVURi04IiBhY3Rpb249Ii92YWdhcy9wZXNxdWlzYXMiIGNsYXNzPSJmb3JtdWxhcmlvUGVzcXVpc2FEZVZhZ2FzX2hlYWRlciIgbWV0aG9kPSJnZXQiPjxkaXYgc3R5bGU9Im1hcmdpbjowO3BhZGRpbmc6MDtkaXNwbGF5OmlubGluZSI+PGlucHV0IG5hbWU9InV0ZjgiIHR5cGU9ImhpZGRlbiIgdmFsdWU9IiYjeDI3MTM7IiAvPjwvZGl2PgogICAgICAgIDxpbnB1dCBjbGFzcz0iY2FtcG9QZXNxdWlzYVZhZ2EiIGlkPSJzZWFyY2gtaW5wdXQtaGVhZGVyIiBuYW1lPSJxIiBwbGFjZWhvbGRlcj0iRGlnaXRlIHVtIGNhcmdvLCBlbXByZXNhIGUvb3UgbG9jYWxpemHDp8OjbyIgdHlwZT0idGV4dCIgdmFsdWU9IiIgLz4KICAgICAgICA8aW5wdXQgdHlwZT0ic3VibWl0IiB2YWx1ZT0iIj4KPC9mb3JtPiAgICA8L2Rpdj4KPC9kaXY+CgkJCQkJCTxkaXYgaWQ9Im1lbnUtY2FuZGlkYXRvcy1ob2xkZXIiPgoJCQkJCQkJPGEgaWQ9Im1lbnUtYnRuIiBjbGFzcz0ibmF2YmFyLXRvZ2dsZSIgdGl0bGU9Ik1lbnUgcHJpbmNpcGFsIj4KCQkJCQkJCQk8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KCQkJCQkJCQk8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KCQkJCQkJCQk8c3BhbiBjbGFzcz0iaWNvbi1iYXIiPjwvc3Bhbj4KCQkJCQkJCQk8c3BhbiBjbGFzcz0ic3Itb25seSI+TWVudTwvc3Bhbj4KCQkJCQkJCTwvYT4KCQkJCQkJPC9kaXY+CgkJCQkJCTxkaXYgaWQ9Im1lbnUtY2FuZGlkYXRvcyIgY2xhc3M9Im1lbnUtZHJvcGRvd24iPgoJCQkJCQkJPGRpdiBjbGFzcz0ibmF2ZWdhY2FvLWRlc2xvZ2FkYSI+CgkJCQkJCQkJPGEgaHJlZj0iL2NhZGFzdHJvLWRlLWN1cnJpY3VsbyI+CgkJCQkJCQkJCTxidXR0b24gY2xhc3M9ImJ0biBidG4tcHJpbWFyeSBjYWRhc3RybyI+Q2FkYXN0cmUgc2V1IGN1cnLDrWN1bG88L2J1dHRvbj4KCQkJCQkJCQk8L2E+CgkJCQkJCQkJPGEgaHJlZj0iL2xvZ2luLWNhbmRpZGF0b3MiPgoJCQkJCQkJCQk8YnV0dG9uIGNsYXNzPSJidG4gYnRuLW91dGxpbmUgYnRuLW91dGxpbmUtZGFyayI+RW50cmFyPC9idXR0b24+CgkJCQkJCQkJPC9hPgoJCQkJCQkJPC9kaXY+CgkJCQkJCTwvZGl2PgoKCQkJCQkJPGRpdiBjbGFzcz0ibmF2ZWdhY2FvLWRlc2xvZ2FkYSI+CgkJCQkJCQk8YSBocmVmPSIvY2FkYXN0cm8tZGUtY3VycmljdWxvIj4KCQkJCQkJCQk8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkiPkNhZGFzdHJlIHNldSBjdXJyw61jdWxvPC9idXR0b24+CgkJCQkJCQk8L2E+CgkJCQkJCQk8YSBocmVmPSIvbG9naW4tY2FuZGlkYXRvcyI+CgkJCQkJCQkJPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lIj5FbnRyYXI8L2J1dHRvbj4KCQkJCQkJCTwvYT4KCQkJCQkJPC9kaXY+CgkJCQk8L2Rpdj4KCQkJPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2hlYWRlcj4KCiAgICAKPC9kaXY+CjxkaXYgaWQ9Im5vdGlmaWNhY2FvVG9wb0hvbGRlciI+CiAgCjwvZGl2PgoKPGRpdiBpZD0ibWVudS1vdmVybGF5Ij48L2Rpdj4KCgoKICA8ZGl2IGlkPSJub3RpZmljYWNhb1RvcG9Ib2xkZXIiPgogICAgCiAgPC9kaXY+Cgo8L2Rpdj4KCjxkaXYgaWQ9IndyYXBwZXIiIGNsYXNzPSJjbGVhcmZpeCI+CiAgCgoKCgo8ZGl2IGNsYXNzPSJjZW50ZXIiPgogIDxkaXYgaWQ9ImNvbnRldWRvVmFnYSI+CgogICAgPGRpdiBpZD0iYmFycmFWYWdhIj4KICAgICAgICAgIDxmb3JtIGFjdGlvbj0iL2NhbmRpZGF0dXJhIiBtZXRob2Q9IlBPU1QiPgogICAgPGlucHV0IGlkPSJ2YWdhX2lkIiBuYW1lPSJ2YWdhW2lkXSIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iMTcxODk3OCIgLz4KICAgIDxpbnB1dCBpZD0iYXV0aGVudGljaXR5X3Rva2VuIiBuYW1lPSJhdXRoZW50aWNpdHlfdG9rZW4iIHR5cGU9ImhpZGRlbiIgdmFsdWU9Iis2bzVJcUM0TlZQQVJPNi9sRkx5eUwxMGVuSEsxY3IrV1hyQVhaaUViNUU9IiAvPgogICAgPGlucHV0IGlkPSJmbnQiIG5hbWU9ImZudCIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iMTQiIC8+CiAgICAKICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBpZD0iYnQtY2FuZGlkYXR1cmEiIGNsYXNzPSJidC1jYW5kaWRhdHVyYSBidG4gYnRuLXN1Y2Nlc3MiPgogICAgICBDYW5kaWRhdGFyLXNlIGEgZXNzYSB2YWdhCiAgICA8L2J1dHRvbj4KICA8L2Zvcm0+CgogICAgPC9kaXY+CiAgICA8c3Bhbj4KCiAgICAgIAoKICAgICAgICA8YXJ0aWNsZSBjbGFzcz0idmFnYSI+CiAgICAgICAgICA8aGVhZGVyPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1iYXNpY2FzIGNsZWFyZml4Ij4KICAgICAgICAgICAgICA8ZmlndXJlIGNsYXNzPSJsb2dvRW1wcmVzYSI+CiAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uLWVtcHJlc2EtMjQiPjwvc3Bhbj4KICAgICAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvcm1hY29lcy1jb21wbGVtZW50YXJlcyI+CiAgICAgICAgICAgICAgICAgIDxoMSBjbGFzcz0idGl0dWxvVmFnYSI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibm9tZS1kby1jYXJnbyI+CiAgICAgICAgICAgICAgICAgICAgICBEZXNlbnZvbHZlZG9yIEMjCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImlkLWRhLXZhZ2EiPnYxNzE4OTc4PC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW1wcmVzYVF0ZFZhZ2FzIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImVtcHJlc2FWYWdhIj4KICAgICAgICAgICAgICAgICAgICBJQk9QRSBJbnRlbGlnw6puY2lhCiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5mb1ZhZ2EiPgogICAgICAgICAgICAgIDx1bCBjbGFzcz0iY2xlYXJmaXgiPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICA8ZmlndXJlIGNsYXNzPSJpY29uZS1zYWxhcmlvIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iw41jb25lIGRlIHNhbMOhcmlvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tc2FsYXJpby03MDc3ZWE5ZTI2OGMzMDJlYzBiMmM2NzM0MTdiMjE2My5zdmciIC8+CiAgICAgICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+TsOjbyBpbmZvcm1hZG88L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgPGZpZ3VyZSBjbGFzcz0iaWNvbmUtbG9jYWxpemFjYW8iIHRpdGxlPSJMb2NhbCI+CiAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9IsONY29uZSBkZSBsb2NhbGl6YcOnw6NvIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbG9jYWxpemFjYW8tOThjOWI3YTdiMWY0MTY5MGY3NTA2ZjllYjRlZjFjZTguc3ZnIiAvPgogICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgU8OjbyBQYXVsbwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICA8ZmlndXJlIGNsYXNzPSJpY29uZS1oaWVyYXJxdWlhIiB0aXRsZT0iTsOtdmVsIGhpZXLDoXJxdWljbyI+CiAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9IsONY29uZSBkZSBoaWVyYXJxdWlhIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbml2ZWwtMzEwZGY5YTRiOGFhYTdmMWRhMjA2ZWI2ZmMzYjY2NzYuc3ZnIiAvPgogICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgICAgICAgICAgICBQbGVubwogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2hlYWRlcj4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0byI+CiAgICAgICAgICAgIDxwPkEgRWZmZWN0aXZlIMOpIGVtcHJlc2EgZG8gSWJvcGUgSW50ZWxpZ8OqbmNpYSwgZXNwZWNpYWxpc3RhIGVtIEJpZyBEYXRhLCBCdXNpbmVzcyBJbnRlbGxpZ2VuY2UsIERhdGFiYXNlIE1hcmtldGluZyBlIENSTS48L3A+DQo8cD5Fc3RhbW9zIGJ1c2NhbmRvIHByb2Zpc3Npb25haXMgcXVlIGF0dWVtIG5vIGRlc2Vudm9sdmltZW50byBlIG1hbnV0ZW7Dp8OjbyBkb3MgcHJvZHV0b3MgZGUgR2VzdMOjbyBkZSBjYW1wYW5oYXMsIGFib3JkYWdlbnMgT21uaSBjaGFubmVsLCBnZW9tYXJrZXRpbmcsIHNpc3RlbWFzIGRlIHJlY29tZW5kYcOnw6NvIGUgRGF0YSBTY2llbmNlLCBxdWUgcmVhbGl6ZSBpbnRlZ3Jhw6fDo28gZW50cmUgcGxhdGFmb3JtYXMgKEFQSS9XZWJzZXJ2aWNlIGUgY29uc3VsdGFzIGVtIGJhbmNvIGRlIGRhZG9zIFNRTCksIGF0dWUgbmEgZGlzcG9uaWJpbGl6YcOnw6NvIGRlIHJlc3VsdGFkb3MgcGFyYSDDoXJlYXMgaW50ZXJuYXMsIGNvbSBhIHF1YWxpZGFkZSBkbyBjw7NkaWdvIGUgcmV1dGlsaXphw6fDo28gZGUgcGFkcsO1ZXMsIGRlc2Vudm9sdmEgYSBjb211bmljYcOnw6NvIGRvIGZyb250LWVuZCBjb20gbyBsYWRvIHNlcnZlciBlIHBhcnRpY2lwZSBkZSBkaXNjdXNzw7VlcyBubyBncm9vbWluZyBwcm9wb25kbyBzb2x1w6fDtWVzIChmb3JtYXRvIGUgYXBsaWNhw6fDo28pLjwvcD4NCjxwPsOJIG5lY2Vzc8OhcmlvIHRlciBzdXBlcmlvciBjb21wbGV0bywgcHJlZmVyZW5jaWFsbWVudGUgZW0gQ2nDqm5jaWFzIGRhIENvbXB1dGHDp8OjbywgU2lzdGVtYSBkYSBJbmZvcm1hw6fDo28gZSBFbmdlbmhhcmlhIGRhIENvbXB1dGHDp8Ojby48L3A+DQo8cD5FeHBlcmnDqm5jaWEgZSBjb25oZWNpbWVudG9zIGVtOiBDIy9BU1AuTkVULCBKYXZhU2NyaXB0LCBjb25jZWl0b3MgZGUgb3JpZW50YcOnw6NvIGEgb2JqZXRvcywgbW9kZWxhZ2VtIGRlIHNpc3RlbWFzLCBCYW5jbyBkZSBEYWRvcyBTUUwgU2VydmVyLCBCYW5jbyBkZSBEYWRvcyBNeVNRTCwgbGluZ3VhZ2VtIFNRTCBlIG1vZGVsYWdlbSBkZSBkYWRvczs8L3A+DQo8cD5FbXByZXNhIGNvbSBhbWJpZW50ZSBpbmZvcm1hbCAocG9kZSB0cmFiYWxoYXIgZGUgYmVybXVkYSEpLCBow6EgcG9zc2liaWxpZGFkZXMgZGUgYXR1YcOnw6NvIGVtIGhvbWUgb2ZmaWNlIGFsZ3VucyBkaWFzIGRhIHNlbWFuYS48L3A+DQo8cD5Mb2NhbCBkZSB0cmFiYWxobzogQmFycmEgRnVuZGEuPC9wPgogICAgICAgICAgPC9kaXY+CgoKICAgICAgICAgIDxocj4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSdhcHJlc2VudGFjYW8tZW1wcmVzYSc+CiAgICAgICAgICAgIAogICAgICAgICAgICAgIDxwPjxwPk8gSUJPUEUgSW50ZWxpZ8OqbmNpYSDDqSB1bWEgZGFzIGVtcHJlc2FzIHF1ZSBtZWxob3IgZW50ZW5kZSBvIGNvbXBvcnRhbWVudG8gZSBhcyBvcGluacO1ZXMgZG9zIGNpZGFkw6NvcyBlIGNvbnN1bWlkb3Jlcy4gw4kgdW1hIGVtcHJlc2EgZXNwZWNpYWxpemFkYSBlbSBlc3R1ZG9zIGN1c3RvbWl6YWRvcywgcXVhbGl0YXRpdm9zIGUgcXVhbnRpdGF0aXZvcywgY29tIG9zIHF1YWlzIG9mZXJlY2UgZGlhZ27Ds3N0aWNvcyBlIHJlY29tZW5kYcOnw7VlcyBlc3RyYXTDqWdpY2FzLjwvcD48YnIgLz48cD5BcyDDoXJlYXMgZGUgYXR1YcOnw6NvIGRvIElCT1BFIEludGVsaWfDqm5jaWEgc8Ojbzogb3BpbmnDo28gcMO6YmxpY2EsIHBvbMOtdGljYSwgcG90ZW5jaWFsIGRlIG1lcmNhZG8sIGdlb3JlZmVyZWNpYW1lbnRvLCBjb25zdW1vLCBzZXJ2acOnb3MsIGZvcm5lY2VuZG8gZXN0dWRvcyBkZSBtYXJjYSwgY29tcG9ydGFtZW50bywgc2F0aXNmYcOnw6NvLCBvcGluacOjbywgY29tdW5pY2HDp8OjbyBlIG11aXRvcyBvdXRyb3MuIFBhcmEgZXNzZSB0cmFiYWxobywgdmFsZS1zZSBkZSBkaWZlcmVudGVzIG1laW9zIGRlIGFib3JkYWdlbSBhbyBlbnRyZXZpc3RhZG86IGZhY2UgYSBmYWNlLCBwb3IgdGVsZWZvbmUgb3UgcGVsYSBpbnRlcm5ldC48L3A+PGJyIC8+PHA+VW1hIGRhcyBtYWlvcmVzIGNhcmFjdGVyw61zdGljYXMgZG8gSUJPUEUgSW50ZWxpZ8OqbmNpYSDDqSBhIGRpdmVyc2lkYWRlLiBBbMOpbSBkYSB2YXJpZWRhZGUgZGUgaW5mb3JtYcOnw7VlcyBxdWUgZGlhcmlhbWVudGUgY2lyY3VsYW0gbmEgZW1wcmVzYSwgYSBpbnRlcmHDp8OjbyBkZSBwcm9maXNzaW9uYWlzIGRlIGRpZmVyZW50ZXMgZm9ybWHDp8O1ZXMgZmF6IGRvIElCT1BFIEludGVsaWfDqm5jaWEgdW0gYW1iaWVudGUgcHJvcMOtY2lvIHBhcmEgbyBlbmNvbnRybyBkYXMgY2nDqm5jaWFzLCBxdWUgZW5yaXF1ZWNlbSBhcyBlc3RhdMOtc3RpY2FzIGNvbSBpbnRlbGlnw6puY2lhIGFuYWzDrXRpY2EuPC9wPjwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvYXJ0aWNsZT4KICAgICAgCiAgICA8Zm9ybSBhY3Rpb249Ii9jYW5kaWRhdHVyYSIgbWV0aG9kPSJQT1NUIj4KICAgIDxpbnB1dCBpZD0idmFnYV9pZCIgbmFtZT0idmFnYVtpZF0iIHR5cGU9ImhpZGRlbiIgdmFsdWU9IjE3MTg5NzgiIC8+CiAgICA8aW5wdXQgaWQ9ImF1dGhlbnRpY2l0eV90b2tlbiIgbmFtZT0iYXV0aGVudGljaXR5X3Rva2VuIiB0eXBlPSJoaWRkZW4iIHZhbHVlPSIrNm81SXFDNE5WUEFSTzYvbEZMeXlMMTBlbkhLMWNyK1dYckFYWmlFYjVFPSIgLz4KICAgIDxpbnB1dCBpZD0iZm50IiBuYW1lPSJmbnQiIHR5cGU9ImhpZGRlbiIgdmFsdWU9IjE0IiAvPgogICAgCiAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgaWQ9ImJ0LWNhbmRpZGF0dXJhIiBjbGFzcz0iYnQtY2FuZGlkYXR1cmEgYnRuIGJ0bi1zdWNjZXNzIj4KICAgICAgQ2FuZGlkYXRhci1zZSBhIGVzc2EgdmFnYQogICAgPC9idXR0b24+CiAgPC9mb3JtPgoKCiAgICA8c2VjdGlvbiBpZD0iY29tcGFydGlsaGFyLXZhZ2EiPgogICAgICA8c3BhbiBjbGFzcz0ic2hhcmVUWFQiPkNvbXBhcnRpbGhhciBlc3RhIHZhZ2E6PC9zcGFuPgogICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+dmFyIHN3aXRjaFRvNXggPSB0cnVlOzwvc2NyaXB0PgogICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL3dzLnNoYXJldGhpcy5jb20vYnV0dG9uL2J1dHRvbnMuanMiPjwvc2NyaXB0PgogICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+c3RMaWdodC5vcHRpb25zKHtwdWJsaXNoZXI6ICJlOTI4OTU5Ni1mMmRjLTQ3N2YtYmE3MC05ZmE3MmNhZDBiNjYiLCBkb05vdEhhc2g6IGZhbHNlLCBkb05vdENvcHk6IGZhbHNlLCBoYXNoQWRkcmVzc0JhcjogZmFsc2V9KTs8L3NjcmlwdD4KICAgICAgPHNwYW4gY2xhc3M9J3N0X2ZhY2Vib29rX2xhcmdlJyBkaXNwbGF5VGV4dD0nRmFjZWJvb2snPjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9J3N0X3R3aXR0ZXJfbGFyZ2UnIGRpc3BsYXlUZXh0PSdUd2VldCc+PC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0nc3RfbGlua2VkaW5fbGFyZ2UnIGRpc3BsYXlUZXh0PSdMaW5rZWRJbic+PC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0nc3RfZ29vZ2xlcGx1c19sYXJnZScgZGlzcGxheVRleHQ9J0dvb2dsZSArJz48L3NwYW4+CiAgICAgIDxhIGhyZWY9Ii9tb3ZlX3RvP3NlcnZpY289aW5kaWNhY2FvX2RlX3ZhZ2EmYW1wO2NvZGlnb19kYV92YWdhPTE3MTg5NzgiIGNsYXNzPSJpY29FbWFpbCIgdGl0bGU9IkVtYWlsIj48L2E+CiAgICA8L3NlY3Rpb24+CgogICAgPC9zcGFuPgoKICA8L2Rpdj4KCiAgPGFzaWRlIGlkPSJsYXRlcmFsVmFnYSI+CgogICAgICAKICAgICAgPGRpdiBjbGFzcz0icHVibGljaWRhZGUiPgogIDxzcGFuIGNsYXNzPSJwdWIiPlB1YmxpY2lkYWRlPC9zcGFuPgogIDxkaXYgaWQ9InZhZ2FzX2Rlc2NyaWNhb19zcXVhcmVfMzAweDI1MCI+CiAgCTxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KICAgICAgZ29vZ2xldGFnLmNtZC5wdXNoKGZ1bmN0aW9uKCkgeyBnb29nbGV0YWcuZGlzcGxheSgndmFnYXNfZGVzY3JpY2FvX3NxdWFyZV8zMDB4MjUwJyk7IH0pOwogICAgPC9zY3JpcHQ+CiAgPC9kaXY+CjwvZGl2PgoKICAgICAgPHNlY3Rpb24gZGF0YS11cmw9Ii92YWdhcy92YWdhc19zaW1pbGFyZXMvdjE3MTg5NzgiIGlkPSJ2YWdhcy1zaW1pbGFyZXMiPjwvc2VjdGlvbj4KICAgICAgPHNjcmlwdCBzcmM9Ii9hc3NldHMvdmFnYXNfc2ltaWxhcmVzL3ZhZ2FzU2ltaWxhcmVzLWExZmY4YjcxMTQ4YmY1ZjFmNWZkMzU5MzY1MjNiMGM0LmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0PgoKICAgICAgPGRpdiBjbGFzcz0icHVibGljaWRhZGUiPgogIDxzcGFuIGNsYXNzPSJwdWIiPlB1YmxpY2lkYWRlPC9zcGFuPgogIDxkaXYgaWQ9InZhZ2FzX2Rlc2NyaWNhb19oYWxmcGFnZV8zMDB4NjAwIj4KICAJPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgogICAgICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKSB7IGdvb2dsZXRhZy5kaXNwbGF5KCd2YWdhc19kZXNjcmljYW9faGFsZnBhZ2VfMzAweDYwMCcpOyB9KTsKICAgIDwvc2NyaXB0PgogIDwvZGl2Pgo8L2Rpdj4KICA8L2FzaWRlPgoKPC9kaXY+CgoKCgoKPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9sZCtqc29uIj4KICB7IkBjb250ZXh0IjoiaHR0cDovL3NjaGVtYS5vcmciLCJAdHlwZSI6IkpvYlBvc3RpbmciLCJ0aXRsZSI6IkRlc2Vudm9sdmVkb3IgQyMiLCJkZXNjcmlwdGlvbiI6IkEgRWZmZWN0aXZlIMOpIGVtcHJlc2EgZG8gSWJvcGUgSW50ZWxpZ8OqbmNpYSwgZXNwZWNpYWxpc3RhIGVtIEJpZyBEYXRhLCBCdXNpbmVzcyBJbnRlbGxpZ2VuY2UsIERhdGFiYXNlIE1hcmtldGluZyBlIENSTS5cclxuRXN0YW1vcyBidXNjYW5kbyBwcm9maXNzaW9uYWlzIHF1ZSBhdHVlbSBubyBkZXNlbnZvbHZpbWVudG8gZSBtYW51dGVuw6fDo28gZG9zIHByb2R1dG9zIGRlIEdlc3TDo28gZGUgY2FtcGFuaGFzLCBhYm9yZGFnZW5zIE9tbmkgY2hhbm5lbCwgZ2VvbWFya2V0aW5nLCBzaXN0ZW1hcyBkZSByZWNvbWVuZGHDp8OjbyBlIERhdGEgU2NpZW5jZSwgcXVlIHJlYWxpemUgaW50ZWdyYcOnw6NvIGVudHJlIHBsYXRhZm9ybWFzIChBUEkvV2Vic2VydmljZSBlIGNvbnN1bHRhcyBlbSBiYW5jbyBkZSBkYWRvcyBTUUwpLCBhdHVlIG5hIGRpc3BvbmliaWxpemHDp8OjbyBkZSByZXN1bHRhZG9zIHBhcmEgw6FyZWFzIGludGVybmFzLCBjb20gYSBxdWFsaWRhZGUgZG8gY8OzZGlnbyBlIHJldXRpbGl6YcOnw6NvIGRlIHBhZHLDtWVzLCBkZXNlbnZvbHZhIGEgY29tdW5pY2HDp8OjbyBkbyBmcm9udC1lbmQgY29tIG8gbGFkbyBzZXJ2ZXIgZSBwYXJ0aWNpcGUgZGUgZGlzY3Vzc8O1ZXMgbm8gZ3Jvb21pbmcgcHJvcG9uZG8gc29sdcOnw7VlcyAoZm9ybWF0byBlIGFwbGljYcOnw6NvKS5cclxuw4kgbmVjZXNzw6FyaW8gdGVyIHN1cGVyaW9yIGNvbXBsZXRvLCBwcmVmZXJlbmNpYWxtZW50ZSBlbSBDacOqbmNpYXMgZGEgQ29tcHV0YcOnw6NvLCBTaXN0ZW1hIGRhIEluZm9ybWHDp8OjbyBlIEVuZ2VuaGFyaWEgZGEgQ29tcHV0YcOnw6NvLlxyXG5FeHBlcmnDqm5jaWEgZSBjb25oZWNpbWVudG9zIGVtOiBDIy9BU1AuTkVULCBKYXZhU2NyaXB0LCBjb25jZWl0b3MgZGUgb3JpZW50YcOnw6NvIGEgb2JqZXRvcywgbW9kZWxhZ2VtIGRlIHNpc3RlbWFzLCBCYW5jbyBkZSBEYWRvcyBTUUwgU2VydmVyLCBCYW5jbyBkZSBEYWRvcyBNeVNRTCwgbGluZ3VhZ2VtIFNRTCBlIG1vZGVsYWdlbSBkZSBkYWRvcztcclxuRW1wcmVzYSBjb20gYW1iaWVudGUgaW5mb3JtYWwgKHBvZGUgdHJhYmFsaGFyIGRlIGJlcm11ZGEhKSwgaMOhIHBvc3NpYmlsaWRhZGVzIGRlIGF0dWHDp8OjbyBlbSBob21lIG9mZmljZSBhbGd1bnMgZGlhcyBkYSBzZW1hbmEuXHJcbkxvY2FsIGRlIHRyYWJhbGhvOiBCYXJyYSBGdW5kYS4iLCJpZGVudGlmaWVyIjp7IkB0eXBlIjoiUHJvcGVydHlWYWx1ZSIsIm5hbWUiOiJJQk9QRSBJbnRlbGlnw6puY2lhIiwidmFsdWUiOjE3MTg5Nzh9LCJkYXRlUG9zdGVkIjoiMjAxOC0wNy0yMyIsInZhbGlkVGhyb3VnaCI6IjIwMTgtMDgtMjMiLCJoaXJpbmdPcmdhbml6YXRpb24iOnsiQHR5cGUiOiJPcmdhbml6YXRpb24iLCJuYW1lIjoiSUJPUEUgSW50ZWxpZ8OqbmNpYSJ9LCJqb2JMb2NhdGlvbiI6eyJAdHlwZSI6IlBsYWNlIiwiYWRkcmVzcyI6eyJAdHlwZSI6IlBvc3RhbEFkZHJlc3MiLCJhZGRyZXNzTG9jYWxpdHkiOiJTw6NvIFBhdWxvIiwiYWRkcmVzc1JlZ2lvbiI6IlNQIiwiYWRkcmVzc0NvdW50cnkiOiJCcmFzaWwifX19Cjwvc2NyaXB0PgoKCgoKPC9kaXY+Cgo8Zm9vdGVyIGlkPSJyb2RhcGUiPgogIDxkaXYgaWQ9InJvZGFwZUZhaXhhIj4KICA8ZGl2IGNsYXNzPSJjZW50ZXIiPgogICAgPGRpdiBjbGFzcz0icHVsbC1yaWdodC1jb250YWluZXIiPgoKICAgICAgPGRpdiBpZD0ibGlzdGFJZGlvbWFzIiBjbGFzcz0ibGlzdGEtaWRpb21hcy1jb250YWluZXIiPgogIDx1bCBjbGFzcz0iaWRpb21hLWxpc3RhIj4KICAgIDxkaXYgY2xhc3M9Im9wY29lcy1jb250YWluZXIiPgogICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXBsaWNhcl9sb2NhbGUoJ3B0LUJSJyk7IiBjbGFzcz0iaXRlbSBzZWxlY2lvbmFkbyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbmUgYnRQdCI+PC9zcGFuPgogICAgICAgICAgPGxpPnBvcnR1Z3XDqnM8L2xpPgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmFwbGljYXJfbG9jYWxlKCdlcycpOyIgY2xhc3M9Iml0ZW0gIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uZSBidEVzIj48L3NwYW4+CiAgICAgICAgICA8bGk+ZXNwYcOxb2w8L2xpPgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmFwbGljYXJfbG9jYWxlKCdlbicpOyIgY2xhc3M9Iml0ZW0gIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uZSBidEVuIj48L3NwYW4+CiAgICAgICAgICA8bGk+ZW5nbGlzaDwvbGk+CiAgICAgICAgPC9hPgogICAgPC9kaXY+CiAgPC91bD4KPC9kaXY+CgogICAgICA8dWwgaWQ9Imxpc3RhUmVkZXMiPgogICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vZmFjZWJvb2suY29tL1ZBR0FTY29tLyIgY2xhc3M9ImxpbmtGYWNlIiBvbmNsaWNrPSJnYSgmI3gyNztzZW5kJiN4Mjc7LCAmI3gyNztldmVudCYjeDI3OywgJiN4Mjc7RmFjZWJvb2sgLSBDdXJ0aXImI3gyNzssICYjeDI3O0NsaWNrJiN4Mjc7KTsiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iRmFjZWJvb2siPkZhY2Vib29rPC9hPjwvbGk+CiAgICAgICAgPCEtLSBQYXJhIGNhbmRpZGF0b3MgLS0+CiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly90d2l0dGVyLmNvbS92YWdhcyIgY2xhc3M9ImxpbmtUd2l0dGVyIiBvbmNsaWNrPSJnYSgmI3gyNztzZW5kJiN4Mjc7LCAmI3gyNztldmVudCYjeDI3OywgJiN4Mjc7VHdpdHRlciAtIFNlZ3VpciYjeDI3OywgJiN4Mjc7Q2xpY2smI3gyNzspOyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJUd2l0dGVyIj5Ud2l0dGVyPC9hPjwvbGk+CiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tLzEwNTUyMDYyMTgxODY1ODQyNTkxNSIgY2xhc3M9ImxpbmtHb29nbGUiIG9uY2xpY2s9ImdhKCYjeDI3O3NlbmQmI3gyNzssICYjeDI3O2V2ZW50JiN4Mjc7LCAmI3gyNztHb29nbGUrIC0gU2VndWlyJiN4Mjc7LCAmI3gyNztDbGljayYjeDI3Oyk7IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Ikdvb2dsZSArIj5Hb29nbGUgKzwvYT48L2xpPgogICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vbGlua2QuaW4vR3J1cG9WQUdBUyIgY2xhc3M9ImxpbmtMaW5rZWRJbiIgb25jbGljaz0iZ2EoJiN4Mjc7c2VuZCYjeDI3OywgJiN4Mjc7ZXZlbnQmI3gyNzssICYjeDI3O0xpbmtlZEluIC0gQ29uZWN0YXImI3gyNzssICYjeDI3O0NsaWNrJiN4Mjc7KTsiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4iPkxpbmtlZEluPC9hPjwvbGk+CiAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+CgogIAogIDxkaXYgaWQ9InJvZGFwZUxpbmtzIj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgogICAgICA8ZGl2IGNsYXNzPSJyb2RDb2wgcm9kSW5zdGl0dWNpb25hbCI+CiAgICAgICAgPGRpdiBjbGFzcz0icm9kVGl0Ij48YSBocmVmPSIvaW5zdGl0dWNpb25hbC8iPkluc3RpdHVjaW9uYWw8L2E+PC9kaXY+CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9pbnN0aXR1Y2lvbmFsL3F1ZW0tc29tb3MiPlF1ZW0gc29tb3M8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvcHJvZHV0b3MiPk5vc3NvcyBwcm9kdXRvczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wYXJjZXJpYXMiPlBhcmNlcmlhczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wcm9qZXRvcy1zb2NpYWlzIj5SZXNwb25zYWJpbGlkYWRlIHNvY2lhbDwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9pbXByZW5zYSI+SW1wcmVuc2E8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvdHJhYmFsaGUtY29ub3NjbyI+VHJhYmFsaGUgY29ub3NjbzwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0icm9kQ29sIHJvZEVtcHJlc2FzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb2RUaXQiPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvIj5FbXByZXNhczwvYT48L2Rpdj4KICAgICAgICA8dWw+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8iPlNvbHXDp8O1ZXMgcGFyYSBSJmFtcDtTPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vcmVkZXMtbG9qYXMiPlJlZGVzIGRlIGxvamFzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vcHJvZ3JhbWEtZXN0YWdpby10cmFpbmVlIj5Qcm9ncmFtYXMgZGUgRXN0w6FnaW8gZSBUcmFpbmVlPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vc29mdHdhcmUtdmFnYXMtZS1wYXJ0bmVyIj5Db25oZcOnYSBvIFZBR0FTIGUtcGFydG5lcjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvL2R1dmlkYXMtZnJlcXVlbnRlcyI+RkFRPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NsaWVudGVzLXZhZ2FzIj5DbGllbnRlczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvLyNmYWxlLWNvbm9zY28iPjxzcGFuIGNsYXNzPSJ0cmFuc2xhdGlvbl9taXNzaW5nIiB0aXRsZT0idHJhbnNsYXRpb24gbWlzc2luZzogcHQtQlIuZ2xvYmFsLm5hdi5lbXByZXNhcy5zb2xpY2l0YXItY29udGF0byI+U29saWNpdGFyIENvbnRhdG88L3NwYW4+PC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL2dlbnRlcmgvIj5HZW50ZVJIPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJyb2RDb2wgcm9kQ2FuZGlkYXRvcyI+CiAgICAgICAgPGRpdiBjbGFzcz0icm9kVGl0Ij48YSBocmVmPSIvIj5DYW5kaWRhdG9zPC9hPjwvZGl2PgogICAgICAgIDx1bD4KICAgICAgICAgIDxsaT48YSBocmVmPSIvIj5QZXNxdWlzYSBkZSB2YWdhczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZXJ2aWNvcy1ncmF0dWl0b3MtY2FuZGlkYXRvcyI+U2VydmnDp29zIGdyYXR1aXRvcyBwYXJhIGNhbmRpZGF0b3M8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvZW1wcmVzYXMtY29udHJhdGFuZG8iPlF1ZW0gY29udHJhdGE8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FuZGlkYXRvcy9yZWRlcy1zb2NpYWlzIj5SZWRlcyBzb2NpYWlzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NhbmRpZGF0b3MvY29tby1mdW5jaW9uYSI+TyBWQUdBUy5jb20uYnI8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvcHJvZmlzc29lcyI+VkFHQVMgUHJvZmlzc8O1ZXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvbWFwYS1kZS1jYXJyZWlyYXMvc29icmUiPk1hcGEgVkFHQVMgZGUgQ2FycmVpcmFzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL2FqdWRhLWNhbmRpZGF0b3MiIHRhcmdldD0iX2JsYW5rIj5BanVkYTwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgoKICAgICAgICAgIDxkaXYgY2xhc3M9InJvZENvbCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvZFRpdCI+SG90c2l0ZXM8L2Rpdj4KICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vd3d3LmZvcnVtdmFnYXMuY29tLmJyIiB0YXJnZXQ9Il9ibGFuayI+RsOzcnVtIFZBR0FTPC9hPjwvbGk+CiAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnZhZ2FzLmNvbS5ici9hcnRldmFnYXMiIHRhcmdldD0iX2JsYW5rIj5hcnRlVkFHQVM8L2E+PC9saT4KICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL3B1YmxpY2lkYWRlIiB0YXJnZXQ9Il9ibGFuayI+UHVibGljaWRhZGU8L2E+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0iY29weXJpZ2h0Ij48c3BhbiBpZD0icm9kUG93ZXJlZCI+UG93ZXJlZCBieSA8c3Ryb25nPlZBR0FTPC9zdHJvbmc+PC9zcGFuPkNvcHlyaWdodCDCqSAyMDE4IFZBR0FTIFRlY25vbG9naWEgLiBUb2RvcyBvcyBkaXJlaXRvcyByZXNlcnZhZG9zLiB8IDxhIGhyZWY9Ii90ZXJtb3MtZGUtdXNvIj5UZXJtb3MgZGUgdXNvPC9hPjwvZGl2PgoKICAgIDwvZGl2PgogIDwvZGl2PgoKPC9mb290ZXI+Cgo8ZGl2IGlkPSJvdmVybGF5Ij48L2Rpdj4KPHNjcmlwdCBzcmM9Ii9hc3NldHMvYXBwbGljYXRpb24tNThjNzIyN2QyZDA2NTVkM2M5ZGIwYTFjYjJlNWI3OWEuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+Cgo8ZGl2IHN0eWxlPSJkaXNwbGF5OiBub25lIiBpZD0iZmltLWRlLXBhZ2luYSI+CiAgCjwvZGl2PgoKCjwvYm9keT4KPC9odG1sPgo=
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:07 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1708559/desenvolvedor-net-e-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:08 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d6e249c8ec57399b2ca2e52f95138f08a1533172807; expires=Fri, 02-Aug-19
        01:20:07 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=891598e510ef2549e4983d313b310d88a4c62b874fdd314d50; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTUzMTlkOGRlZTNjZDc0YjE3ZGFjNDI4YjBlZmJmNzg1BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWg0NXBScEhMWkFsYzdocERIOUkyc2wybCsvTzVrQmNWeFhoVFoxczVHMlE9BjsARg%3D%3D--7f90b26840bd35e34698840d8dee414a75049fa6;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"9cb8e94288522422b5787673bc5a7e32"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - b3e7c5caed56f3602e9b391fe7dc273a
      X-Runtime:
      - '0.067728'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb86179224bff-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:08 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1728108/desenvolvedor-net-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:08 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=daac45de9a66fc07dc37a5baf417500be1533172808; expires=Fri, 02-Aug-19
        01:20:08 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=0e4ff8ec97453485f61161308b920824068a916ff75305e96a; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTkzMTJjNjU4ZWUzYjNmZDEzOWU1MDc5N2QwYzc2OTQxBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMTdZcndQQ3FBS244UzRKSkFBMElEZlNzbTg3WG93akhpSWRXUHB0UkpEM0U9BjsARg%3D%3D--1a0a6115d2f63a40eec9657c678b19a3d282f5ff;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"bf2ee2bb635c2524fc31bceebd51a19c"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - a6853b25f4803bfd7af200f1ea6d04d0
      X-Runtime:
      - '0.063020'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8638b8f4ad3-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:08 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1704488/analista-desenvolvedor-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:09 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d14e9c7b2b95d4a540a17edb4fcf1d9a21533172808; expires=Fri, 02-Aug-19
        01:20:08 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=e72d64f677643befe57436d6e05718de74b695bc9b8cd5a193; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTk0MWM2ZWY0YWFlYzJiZDgxYWRjYWEzOTQ3MTUwY2VhBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWp0UG1OMlVPdUVXYnFWbEJsSHVGQW1pa1R2UXZBSTdXZEJwY1FCdGFWSGc9BjsARg%3D%3D--a6b4999bcdd70d942d00cbbae450bc610b17fbb4;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"ed8879eca8eff9c30093a3c40e8cd007"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 9e05638e5ff2a7cb3f857745c61eb988
      X-Runtime:
      - '0.085403'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb866d8944be1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:09 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1734829/estagio-em-vendas-p-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:09 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=df60bc8d82eab55ff7fd952bad9d877dd1533172809; expires=Fri, 02-Aug-19
        01:20:09 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=908d127dd6ac4de56b263d91f549c18353abaa292829b5b92e; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWI1OTVlNTIxY2NiNzMzYmU0ZGM0ZDc3ZmE1ZGQ3ZDE1BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMVozbDBpVGVPUytadGNSL0hXM1dXNk1tZlJQVng4UUhuNWd3RjNjbU5TcFU9BjsARg%3D%3D--0a6e96e840e4a94412fc732580102e89f64cba4e;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"f69032553836849946968cece52e4fb7"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 6233fee5bed9b1cdd4387ff0100c4092
      X-Runtime:
      - '0.107552'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8693c024acd-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:09 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1724560/desenvolvedor-c-sr
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:09 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d54ae458ff9079894c8037419d88b0b0e1533172809; expires=Fri, 02-Aug-19
        01:20:09 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=cc80e19e6904f50dac08c51bc2fc3b99c93514992c3e55f95c; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWFjNjE5YzM0ZDY0NzJlNWQ2ZGQzMWM1ZjU1OWZiMjEyBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWQ4MW5CZTFGbEdmcEhrQXFRZVhub2ptdC9lNnp5azFycy94MzJaS2E0YW89BjsARg%3D%3D--4f1199036469a5d78120d205c4ff9f66b0c2d4aa;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"b06a3a7efc26cf2fe3fd6ee5b871e78d"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - b2727c9b318280cf8d68dc0315e07e87
      X-Runtime:
      - '0.094213'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb86b9d5f4bbd-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:09 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1716871/motorista-cnh-c-d-e-e
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:10 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d21c07fb39b28bc9d596e3412a38280521533172809; expires=Fri, 02-Aug-19
        01:20:09 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=121052cfd2b3a0146f441fe0da73c2d539b3e42a795c0e3bd9; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWQ3MTcyZjM5ZWU5Zjc1ZThlNTZjZGEzMDIwNGU0OGRmBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMVdiWUk3UUQrVEhCYzBqRjdLQ2ZKYnVsN1B0L1hIa0E1QjZBSHFVTGNvN1U9BjsARg%3D%3D--c208712f0ed0cae7b7bf71c5995b993c188b7582;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"4283d916ddf942725d0a8885d6f3040e"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - d3c11119b9461bcfe134b8d9d7830da0
      X-Runtime:
      - '0.038619'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb86db82c4b87-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:10 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1715671/desenvolvedor-c-para-ura
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:10 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d91b0942b46d46bb4575bf6acfb45d3fc1533172810; expires=Fri, 02-Aug-19
        01:20:10 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=0df9d6f9683cf809e18e879644b0369a154e7ece5e3976e336; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTMxMjZhM2RiMTNiNDQxODJjYzYyZmNjZTRlY2IyYmI1BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMXZIZkZHeVNpUlI2SFk4MWxuTkFYVmhER3d2M2t4Z0ROd3ZodnNjQ0p2bWc9BjsARg%3D%3D--fd2a33665eac63269b80c118766b0cec89ee254b;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"ef4bdb208ae73b95bf4e799b03a112b4"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 68066a1c3a87f1608451777d1a280ddd
      X-Runtime:
      - '0.085993'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb86f9cff4b0f-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:10 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1733492/desenvolvedor-net-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:10 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Set-Cookie:
      - __cfduid=d91b0942b46d46bb4575bf6acfb45d3fc1533172810; expires=Fri, 02-Aug-19
        01:20:10 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=68dd3f476645a406e4c6d681b095e4c5d3abea853fa84af73b; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTU5YjY2NGY4Y2I3MjVlZDUyYWFhYWIyYzg3MjYxMDEwBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMU5neFk2MnQyLzFNNGlXeVNIYUNzTW5lbElCMlMyeDc2cWxLNUJHWnBvL0k9BjsARg%3D%3D--7e53100b632f33ae9a7cf149fb08f06a3353fc3b;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"b649914c786c1b85ca6a5a0895364cc1"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 3cb63d33c2740504df14b9e2f6f816c0
      X-Runtime:
      - '0.064781'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb871df2b4b0f-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:10 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1711746/promotor-de-vendas-c-cnh-a
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:11 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '65'
      Set-Cookie:
      - __cfduid=d5c6e2addc9049e84944d640f68875c3f1533172810; expires=Fri, 02-Aug-19
        01:20:10 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=b91a7487d501ef709e7beadb3bfd601bfab04153b1d0ce442b; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWZiNDY5OWU3NjkwMmM1ZTQ1MjRkNDk4OWI2ODJhNTFhBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWgwdGx5YTZqNEhKKzRSTkJOOTdFUm4vWGprZkR5UzZnTUdick9TenFvd1k9BjsARg%3D%3D--d6be0f4cad6cebf6cbf9567209dd4ac93379a743;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"d852882605a795e13971aa819d3408c7"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 06fef8ad0352ebe6ede0ac225f1fd9fe
      X-Runtime:
      - '0.043915'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb873fd944ad9-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:11 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1739957/programador-c-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:11 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '65'
      Set-Cookie:
      - __cfduid=d18938954aba2bb1c5001b5ce1b1ac0681533172811; expires=Fri, 02-Aug-19
        01:20:11 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=6e467a651f0bc91226d9b39995e26935e6d5e7477560174a8c; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTQ2Nzk3MWNkNzM3MWE3N2I1ZTBjZDViYzRhNzBiNmIyBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMVhEYmdyalJPV0RBUVhVRjEvYlVIam41Nkp6VElxK1JWcm1FUnk1MERrTUE9BjsARg%3D%3D--538d714c325508dad4b292d1d27771cb97246253;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"7192734ee3d47379a448ee14ded41e8e"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 0b9d124b653a9b80242bfa0cd0985ff4
      X-Runtime:
      - '0.076200'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb875da164bab-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:11 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1739960/programador-c-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:11 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '64'
      Set-Cookie:
      - __cfduid=d2c5a8b354c22c62de43d23bbd157607b1533172811; expires=Fri, 02-Aug-19
        01:20:11 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=280c609a3b98bcf1587aba8807c937607c0777ad6f2f3850aa; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTUwOTRkZjVjZWUxNTVlYzEzMGVkZDE3NDQ5ZTYyZTcxBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMVA5bXpWeGpUdW5JWWsrWWs1SlExYjVCZkdDZlJtbDgvRGZQRW9NQkhqbWM9BjsARg%3D%3D--ad087529b4557c305b83235c179e9cf6ec5808f8;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"db9fe5d7b6fa53ac7c40ab50d0384c77"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - f5730cd50b1cab65a79d2cc7f72dcf3c
      X-Runtime:
      - '0.038280'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb877da1c815c-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InB0LWJyIj4KPGhlYWQ+CiAgPHRpdGxlPlZhZ2EgUHJvZ3JhbWFkb3IgKEMjLk5FVCkgLSBSYWRpeCBFbmdlbmhhcmlhIGUgU29mdHdhcmUgKHYxNzM5OTYwKSB8IFZBR0FTLmNvbS5icjwvdGl0bGU+CiAgPGxpbmsgaHJlZj0naHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG86NDAwLDcwMCw0MDBpdGFsaWN8VGl0aWxsaXVtK1dlYjo0MDAsNjAwLDQwMGl0YWxpYywzMDAsNzAwfE9wZW4rU2FucycgcmVsPSdzdHlsZXNoZWV0JyB0eXBlPSd0ZXh0L2Nzcyc+CiAgPGxpbmsgaHJlZj0iL2Fzc2V0cy9wZXNzb2FzLTQwZTBiZjhjOWIxMjdjMWNjMjg4OGE0Yjk4ZTgyM2Q1LmNzcyIgbWVkaWE9InNjcmVlbiIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgLz4KCiAgPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiLz4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPndpbmRvdy5OUkVVTXx8KE5SRVVNPXt9KTtOUkVVTS5pbmZvPXsiYmVhY29uIjoiYmFtLm5yLWRhdGEubmV0IiwiZXJyb3JCZWFjb24iOiJiYW0ubnItZGF0YS5uZXQiLCJsaWNlbnNlS2V5IjoiYjkyMTIxNjVkOCIsImFwcGxpY2F0aW9uSUQiOiI2ODkxNjU3MCIsInRyYW5zYWN0aW9uTmFtZSI6IklGMVpFVWRlQ2dvSFFCbERXQVJUUkVwRlZCVVhGMXRGVkVwTVFWOEtRZz09IiwicXVldWVUaW1lIjoxLCJhcHBsaWNhdGlvblRpbWUiOjQwLCJhZ2VudCI6IiJ9PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij53aW5kb3cuTlJFVU18fChOUkVVTT17fSksX19ucl9yZXF1aXJlPWZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKG4pe2lmKCF0W25dKXt2YXIgbz10W25dPXtleHBvcnRzOnt9fTtlW25dWzBdLmNhbGwoby5leHBvcnRzLGZ1bmN0aW9uKHQpe3ZhciBvPWVbbl1bMV1bdF07cmV0dXJuIHIob3x8dCl9LG8sby5leHBvcnRzKX1yZXR1cm4gdFtuXS5leHBvcnRzfWlmKCJmdW5jdGlvbiI9PXR5cGVvZiBfX25yX3JlcXVpcmUpcmV0dXJuIF9fbnJfcmVxdWlyZTtmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKylyKG5bb10pO3JldHVybiByfSh7MTpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoKXt9ZnVuY3Rpb24gbyhlLHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGkoZSxbZi5ub3coKV0uY29uY2F0KHUoYXJndW1lbnRzKSksdD9udWxsOnRoaXMsbiksdD92b2lkIDA6dGhpc319dmFyIGk9ZSgiaGFuZGxlIiksYT1lKDIpLHU9ZSgzKSxjPWUoImVlIikuZ2V0KCJ0cmFjZXIiKSxmPWUoImxvYWRlciIpLHM9TlJFVU07InVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3cubmV3cmVsaWMmJihuZXdyZWxpYz1zKTt2YXIgcD1bInNldFBhZ2VWaWV3TmFtZSIsInNldEN1c3RvbUF0dHJpYnV0ZSIsInNldEVycm9ySGFuZGxlciIsImZpbmlzaGVkIiwiYWRkVG9UcmFjZSIsImlubGluZUhpdCIsImFkZFJlbGVhc2UiXSxkPSJhcGktIixsPWQrIml4bi0iO2EocCxmdW5jdGlvbihlLHQpe3NbdF09byhkK3QsITAsImFwaSIpfSkscy5hZGRQYWdlQWN0aW9uPW8oZCsiYWRkUGFnZUFjdGlvbiIsITApLHMuc2V0Q3VycmVudFJvdXRlTmFtZT1vKGQrInJvdXRlTmFtZSIsITApLHQuZXhwb3J0cz1uZXdyZWxpYyxzLmludGVyYWN0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyByKS5nZXQoKX07dmFyIG09ci5wcm90b3R5cGU9e2NyZWF0ZVRyYWNlcjpmdW5jdGlvbihlLHQpe3ZhciBuPXt9LHI9dGhpcyxvPSJmdW5jdGlvbiI9PXR5cGVvZiB0O3JldHVybiBpKGwrInRyYWNlciIsW2Yubm93KCksZSxuXSxyKSxmdW5jdGlvbigpe2lmKGMuZW1pdCgobz8iIjoibm8tIikrImZuLXN0YXJ0IixbZi5ub3coKSxyLG9dLG4pLG8pdHJ5e3JldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaChlKXt0aHJvdyBjLmVtaXQoImZuLWVyciIsW2FyZ3VtZW50cyx0aGlzLGVdLG4pLGV9ZmluYWxseXtjLmVtaXQoImZuLWVuZCIsW2Yubm93KCldLG4pfX19fTthKCJzZXROYW1lLHNldEF0dHJpYnV0ZSxzYXZlLGlnbm9yZSxvbkVuZCxnZXRDb250ZXh0LGVuZCxnZXQiLnNwbGl0KCIsIiksZnVuY3Rpb24oZSx0KXttW3RdPW8obCt0KX0pLG5ld3JlbGljLm5vdGljZUVycm9yPWZ1bmN0aW9uKGUpeyJzdHJpbmciPT10eXBlb2YgZSYmKGU9bmV3IEVycm9yKGUpKSxpKCJlcnIiLFtlLGYubm93KCldKX19LHt9XSwyOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQpe3ZhciBuPVtdLHI9IiIsaT0wO2ZvcihyIGluIGUpby5jYWxsKGUscikmJihuW2ldPXQocixlW3JdKSxpKz0xKTtyZXR1cm4gbn12YXIgbz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1yfSx7fV0sMzpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe3R8fCh0PTApLCJ1bmRlZmluZWQiPT10eXBlb2YgbiYmKG49ZT9lLmxlbmd0aDowKTtmb3IodmFyIHI9LTEsbz1uLXR8fDAsaT1BcnJheShvPDA/MDpvKTsrK3I8bzspaVtyXT1lW3Qrcl07cmV0dXJuIGl9dC5leHBvcnRzPXJ9LHt9XSw0OltmdW5jdGlvbihlLHQsbil7dC5leHBvcnRzPXtleGlzdHM6InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UmJndpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcmJiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnR9fSx7fV0sZWU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7fWZ1bmN0aW9uIG8oZSl7ZnVuY3Rpb24gdChlKXtyZXR1cm4gZSYmZSBpbnN0YW5jZW9mIHI/ZTplP2MoZSx1LGkpOmkoKX1mdW5jdGlvbiBuKG4scixvLGkpe2lmKCFkLmFib3J0ZWR8fGkpe2UmJmUobixyLG8pO2Zvcih2YXIgYT10KG8pLHU9bShuKSxjPXUubGVuZ3RoLGY9MDtmPGM7ZisrKXVbZl0uYXBwbHkoYSxyKTt2YXIgcD1zW3lbbl1dO3JldHVybiBwJiZwLnB1c2goW2IsbixyLGFdKSxhfX1mdW5jdGlvbiBsKGUsdCl7dltlXT1tKGUpLmNvbmNhdCh0KX1mdW5jdGlvbiBtKGUpe3JldHVybiB2W2VdfHxbXX1mdW5jdGlvbiB3KGUpe3JldHVybiBwW2VdPXBbZV18fG8obil9ZnVuY3Rpb24gZyhlLHQpe2YoZSxmdW5jdGlvbihlLG4pe3Q9dHx8ImZlYXR1cmUiLHlbbl09dCx0IGluIHN8fChzW3RdPVtdKX0pfXZhciB2PXt9LHk9e30sYj17b246bCxlbWl0Om4sZ2V0OncsbGlzdGVuZXJzOm0sY29udGV4dDp0LGJ1ZmZlcjpnLGFib3J0OmEsYWJvcnRlZDohMX07cmV0dXJuIGJ9ZnVuY3Rpb24gaSgpe3JldHVybiBuZXcgcn1mdW5jdGlvbiBhKCl7KHMuYXBpfHxzLmZlYXR1cmUpJiYoZC5hYm9ydGVkPSEwLHM9ZC5iYWNrbG9nPXt9KX12YXIgdT0ibnJAY29udGV4dCIsYz1lKCJnb3MiKSxmPWUoMikscz17fSxwPXt9LGQ9dC5leHBvcnRzPW8oKTtkLmJhY2tsb2c9c30se31dLGdvczpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe2lmKG8uY2FsbChlLHQpKXJldHVybiBlW3RdO3ZhciByPW4oKTtpZihPYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5rZXlzKXRyeXtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExfSkscn1jYXRjaChpKXt9cmV0dXJuIGVbdF09cixyfXZhciBvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPXJ9LHt9XSxoYW5kbGU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCxuLHIpe28uYnVmZmVyKFtlXSxyKSxvLmVtaXQoZSx0LG4pfXZhciBvPWUoImVlIikuZ2V0KCJoYW5kbGUiKTt0LmV4cG9ydHM9cixyLmVlPW99LHt9XSxpZDpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSl7dmFyIHQ9dHlwZW9mIGU7cmV0dXJuIWV8fCJvYmplY3QiIT09dCYmImZ1bmN0aW9uIiE9PXQ/LTE6ZT09PXdpbmRvdz8wOmEoZSxpLGZ1bmN0aW9uKCl7cmV0dXJuIG8rK30pfXZhciBvPTEsaT0ibnJAaWQiLGE9ZSgiZ29zIik7dC5leHBvcnRzPXJ9LHt9XSxsb2FkZXI6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7aWYoIXgrKyl7dmFyIGU9aC5pbmZvPU5SRVVNLmluZm8sdD1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKVswXTtpZihzZXRUaW1lb3V0KHMuYWJvcnQsM2U0KSwhKGUmJmUubGljZW5zZUtleSYmZS5hcHBsaWNhdGlvbklEJiZ0KSlyZXR1cm4gcy5hYm9ydCgpO2YoeSxmdW5jdGlvbih0LG4pe2VbdF18fChlW3RdPW4pfSksYygibWFyayIsWyJvbmxvYWQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIik7dmFyIG49ZC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtuLnNyYz0iaHR0cHM6Ly8iK2UuYWdlbnQsdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuLHQpfX1mdW5jdGlvbiBvKCl7ImNvbXBsZXRlIj09PWQucmVhZHlTdGF0ZSYmaSgpfWZ1bmN0aW9uIGkoKXtjKCJtYXJrIixbImRvbUNvbnRlbnQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIil9ZnVuY3Rpb24gYSgpe3JldHVybiBFLmV4aXN0cyYmcGVyZm9ybWFuY2Uubm93P01hdGgucm91bmQocGVyZm9ybWFuY2Uubm93KCkpOih1PU1hdGgubWF4KChuZXcgRGF0ZSkuZ2V0VGltZSgpLHUpKS1oLm9mZnNldH12YXIgdT0obmV3IERhdGUpLmdldFRpbWUoKSxjPWUoImhhbmRsZSIpLGY9ZSgyKSxzPWUoImVlIikscD13aW5kb3csZD1wLmRvY3VtZW50LGw9ImFkZEV2ZW50TGlzdGVuZXIiLG09ImF0dGFjaEV2ZW50Iix3PXAuWE1MSHR0cFJlcXVlc3QsZz13JiZ3LnByb3RvdHlwZTtOUkVVTS5vPXtTVDpzZXRUaW1lb3V0LFNJOnAuc2V0SW1tZWRpYXRlLENUOmNsZWFyVGltZW91dCxYSFI6dyxSRVE6cC5SZXF1ZXN0LEVWOnAuRXZlbnQsUFI6cC5Qcm9taXNlLE1POnAuTXV0YXRpb25PYnNlcnZlcn07dmFyIHY9IiIrbG9jYXRpb24seT17YmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGVycm9yQmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGFnZW50OiJqcy1hZ2VudC5uZXdyZWxpYy5jb20vbnItMTA3MS5taW4uanMifSxiPXcmJmcmJmdbbF0mJiEvQ3JpT1MvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksaD10LmV4cG9ydHM9e29mZnNldDp1LG5vdzphLG9yaWdpbjp2LGZlYXR1cmVzOnt9LHhocldyYXBwYWJsZTpifTtlKDEpLGRbbF0/KGRbbF0oIkRPTUNvbnRlbnRMb2FkZWQiLGksITEpLHBbbF0oImxvYWQiLHIsITEpKTooZFttXSgib25yZWFkeXN0YXRlY2hhbmdlIixvKSxwW21dKCJvbmxvYWQiLHIpKSxjKCJtYXJrIixbImZpcnN0Ynl0ZSIsdV0sbnVsbCwiYXBpIik7dmFyIHg9MCxFPWUoNCl9LHt9XX0se30sWyJsb2FkZXIiXSk7PC9zY3JpcHQ+CiAgPG1ldGEgY29udGVudD0iYXV0aGVudGljaXR5X3Rva2VuIiBuYW1lPSJjc3JmLXBhcmFtIiAvPgo8bWV0YSBjb250ZW50PSJQOW16VnhqVHVuSVlrK1lrNUpRMWI1QmZHQ2ZSbWw4L0RmUEVvTUJIam1jPSIgbmFtZT0iY3NyZi10b2tlbiIgLz4KICA8bWV0YSBjaGFyc2V0PSJVVEYtOCIvPgogIDxtZXRhIG5hbWU9ImtleXdvcmRzIiBjb250ZW50PSJFbXByZWdvcywgVmFnYXMsIEN1cnJpY3VsdW0sIENhcnJlaXJhLCBDdXJyw61jdWxvLCBQcm9ncmFtYWRvciAoQyMuTkVUKSwgUmFkaXggRW5nZW5oYXJpYSBlIFNvZnR3YXJlLCBTw6NvIFBhdWxvIi8+CiAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlZhZ2EgZGUgRW1wcmVnbyBwYXJhIFByb2dyYW1hZG9yIChDIy5ORVQpIGVtIFPDo28gUGF1bG8gbmEgUmFkaXggRW5nZW5oYXJpYSBlIFNvZnR3YXJlLiBDYW5kaWRhdGUtc2UgZ3JhdHVpdGFtZW50ZSBubyBWQUdBUy5jb20uYnIiLz4KCiAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9wbmciIGhyZWY9Ii9hc3NldHMvbXVuZG9zL2Zhdmljb25fcC0zZWEyODY0OTI5NzM0MGQ5YTMyNjVmY2Y5ZjE5ZGFlNS5pY28iLz4KICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIGhyZWY9Ii9hc3NldHMvbXVuZG9zL2FwcGxlLXRvdWNoLWljb24tYmY0NDI4NWQxNjNhMzQyMGRlZmMwNDMwMzExMDNhNjYucG5nIi8+CiAgCiAgICA8bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL3ZhZ2FzL3YxNzM5OTYwL3Byb2dyYW1hZG9yLWMtbmV0Ii8+CgogICAgICAKICA8bWV0YSBodHRwLWVxdWl2PSJDYWNoZS1Db250cm9sIiBjb250ZW50PSJuby1jYWNoZSwgbm8tc3RvcmUsIG11c3QtcmV2YWxpZGF0ZSIgLz4KICA8bWV0YSBodHRwLWVxdWl2PSJQcmFnbWEiIGNvbnRlbnQ9Im5vLWNhY2hlIiAvPgogIDxtZXRhIGh0dHAtZXF1aXY9IkV4cGlyZXMiIGNvbnRlbnQ9IjAiIC8+CgogICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IlByb2dyYW1hZG9yIChDIy5ORVQpIC0gUGxlbm8gKHYxNzM5OTYwKSIvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJjb21wYW55Ii8+CiAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cDovL3d3dy52YWdhcy5jb20uYnIvdmFnYXMvdjE3Mzk5NjAvcHJvZ3JhbWFkb3ItYy1uZXQiLz4KICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2UiIGNvbnRlbnQ9Imh0dHA6Ly93d3cudmFnYXMuY29tLmJyL2Fzc2V0cy9zb2NpYWwvbG9nb19vcGVuX2dyYXBoX2JpZy1iNjNiZDY5OWVkZTQ5ZTQ1NTRkNzkwMmEzNzllOWZiNi5qcGciLz4KICA8bWV0YSBwcm9wZXJ0eT0ib2c6c2l0ZV9uYW1lIiBjb250ZW50PSJ3d3cuVkFHQVMuY29tLmJyIi8+CiAgPG1ldGEgcHJvcGVydHk9ImZiOmFwcF9pZCIgY29udGVudD0iMzA5NzY2NzQ1NzYzNDg5Ii8+CgoKICA8IS0tW2lmIGx0IElFIDldPgogICAgPHNjcmlwdCBzcmM9Ii9hc3NldHMvaHRtbDUtMTMyMTRmMDhmZWU1MWIzM2I5MWI3MDQwOWIwODQ0Y2YuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CiAgPCFbZW5kaWZdLS0+CiAgICAgIDwhLS0gVmFnYXMuY29tIEJlZ2luIFRhaWxUYXJnZXQgVGFnIE1hbmFnZXIgLS0+CjxzY3JpcHQ+CiAgKGZ1bmN0aW9uKGkpIHsKICAgIHZhciB0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgdHMudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnOwogICAgdHMuYXN5bmMgPSB0cnVlOwogICAgdHMuc3JjID0gKCdodHRwczonID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sID8gJ2h0dHBzOi8vJyA6ICdodHRwOi8vJykgKyAndGFncy50LnRhaWx0YXJnZXQuY29tL3QzbS5qcz9pPScgKyBpOwogICAgdmFyIHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07CiAgICBzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRzLCBzKTsKICB9KSgnVFQtMTAyMzUtMC9DVC0zMCcpOwo8L3NjcmlwdD4KPCEtLSBWYWdhcy5jb20gRW5kIFRhaWxUYXJnZXQgVGFnIE1hbmFnZXIgLS0+Cgo8IS0tIFByZWJpZCBDb25maWcgU2VjdGlvbiBFTkQgLS0+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgIHZhciBQUkVCSURfVElNRU9VVCA9IDIwMDA7CgogICAgdmFyIGFkVW5pdHMgPSBbXTsKICAgICAgICAgIGFkVW5pdHMucHVzaCgKICAgICAgICAgICAgewogICAgICAgICAgICAgIGNvZGU6ICJ2YWdhc19kZXNjcmljYW9fc3F1YXJlXzMwMHgyNTAiLAogICAgICAgICAgICAgIHNpemVzOiBbMzAwLCAyNTBdLAogICAgICAgICAgICAgIGJpZHM6IFt7ImJpZGRlciI6ImFwcG5leHVzIiwicGFyYW1zIjp7InBsYWNlbWVudElkIjoiMTMwMjA5MDgifX0seyJiaWRkZXIiOiJydWJpY29uIiwicGFyYW1zIjp7ImFjY291bnRJZCI6IjE1NDUyIiwic2l0ZUlkIjoiOTc3NTIiLCJ6b25lSWQiOiI0NTg3NDIiLCJzaXplcyI6WzE1XX19LHsiYmlkZGVyIjoiY3JpdGVvIiwicGFyYW1zIjp7InpvbmVJZCI6IjExMTQxNTYifX1dCiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAgICAgICBhZFVuaXRzLnB1c2goCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBjb2RlOiAidmFnYXNfZGVzY3JpY2FvX2hhbGZwYWdlXzMwMHg2MDAiLAogICAgICAgICAgICAgIHNpemVzOiBbMzAwLCA2MDBdLAogICAgICAgICAgICAgIGJpZHM6IFt7ImJpZGRlciI6ImFwcG5leHVzIiwicGFyYW1zIjp7InBsYWNlbWVudElkIjoiMTMwMjA5MTcifX0seyJiaWRkZXIiOiJydWJpY29uIiwicGFyYW1zIjp7ImFjY291bnRJZCI6IjE1NDUyIiwic2l0ZUlkIjoiOTc3NTIiLCJ6b25lSWQiOiI0NTg3NDIiLCJzaXplcyI6WzEwXX19LHsiYmlkZGVyIjoiY3JpdGVvIiwicGFyYW1zIjp7InpvbmVJZCI6IjExMTQxNTcifX1dCiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAKICAgIHZhciBwYmpzID0gcGJqcyB8fCB7fTsKICAgIHBianMucXVlID0gcGJqcy5xdWUgfHwgW107CgogICAgKGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBkID0gZG9jdW1lbnQsCiAgICAgICAgICAgIGUgPSBkLmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpLAogICAgICAgICAgICBwID0gZC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdOwogICAgICAgIGUudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnOwogICAgICAgIGUuYXN5bmMgPSB0cnVlOwogICAgICAgIGUuc3JjID0gJy9zY3JpcHRzL3B1YmxpY2lkYWRlL3ByZWJpZF93aXRoX2N1cnJlbmN5LmpzJzsKICAgICAgICBwLmluc2VydEJlZm9yZShlLCBwLmZpcnN0Q2hpbGQpOwogICAgfSkoKTsKCiAgICBwYmpzLnF1ZS5wdXNoKGZ1bmN0aW9uKCkgewogICAgICAgIGNvbnN0IGN1c3RvbUdyYW51bGFyaXR5ID0gewogICAgICAgICAgICAnYnVja2V0cyc6IFt7J21pbic6IDAsICdtYXgnOiA1MCwgJ2luY3JlbWVudCc6IDAuMDEgfV0KICAgICAgICB9OwogICAgICAgIHBianMuc2V0Q29uZmlnKHsKICAgICAgICAgICAgcHJpY2VHcmFudWxhcml0eTogY3VzdG9tR3JhbnVsYXJpdHksCiAgICAgICAgICAgIGN1cnJlbmN5OiB7CiAgICAgICAgICAgICAgICBhZFNlcnZlckN1cnJlbmN5OiAiQlJMIiwKICAgICAgICAgICAgICAgIGdyYW51bGFyaXR5TXVsdGlwbGllcjogMSwKICAgICAgICAgICAgICAgIGNvbnZlcnNpb25SYXRlRmlsZTogImh0dHBzOi8vY3VycmVuY3kucHJlYmlkLm9yZy9sYXRlc3QuanNvbiIKICAgICAgICAgICAgfQogICAgICAgIH0pCiAgICB9KTsKPC9zY3JpcHQ+CjwhLS0gUHJlYmlkIENvbmZpZyBTZWN0aW9uIEVORCAtLT4KCjwhLS0gUHJlYmlkIEJvaWxlcnBsYXRlIFNlY3Rpb24gU1RBUlQuIC0tPgo8c2NyaXB0PgogIHZhciBnb29nbGV0YWcgPSBnb29nbGV0YWcgfHwge307CiAgZ29vZ2xldGFnLmNtZCA9IGdvb2dsZXRhZy5jbWQgfHwgW107CiAgZ29vZ2xldGFnLmNtZC5wdXNoKGZ1bmN0aW9uKCkgewogICAgICBnb29nbGV0YWcucHViYWRzKCkuZGlzYWJsZUluaXRpYWxMb2FkKCk7CiAgfSk7CgogIHBianMucXVlLnB1c2goZnVuY3Rpb24oKSB7CiAgICAgIHBianMuYWRkQWRVbml0cyhhZFVuaXRzKTsKICAgICAgcGJqcy5yZXF1ZXN0Qmlkcyh7CiAgICAgICAgICBiaWRzQmFja0hhbmRsZXI6IHNlbmRBZHNlcnZlclJlcXVlc3QKICAgICAgfSk7CiAgfSk7CgogIGZ1bmN0aW9uIHNlbmRBZHNlcnZlclJlcXVlc3QoKSB7CiAgICAgIGlmIChwYmpzLmFkc2VydmVyUmVxdWVzdFNlbnQpIHJldHVybjsKICAgICAgcGJqcy5hZHNlcnZlclJlcXVlc3RTZW50ID0gdHJ1ZTsKICAgICAgZ29vZ2xldGFnLmNtZC5wdXNoKGZ1bmN0aW9uKCkgewogICAgICAgICAgcGJqcy5xdWUucHVzaChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICBwYmpzLnNldFRhcmdldGluZ0ZvckdQVEFzeW5jKCk7CiAgICAgICAgICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnJlZnJlc2goKTsKICAgICAgICAgIH0pOwogICAgICB9KTsKICB9CgogIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIHNlbmRBZHNlcnZlclJlcXVlc3QoKTsKICB9LCBQUkVCSURfVElNRU9VVCk7Cgo8L3NjcmlwdD4KPCEtLSBQcmViaWQgQm9pbGVycGxhdGUgU2VjdGlvbiBFTkQgLS0+Cgo8IS0tIFZhZ2FzLmNvbSBCZWdpbiBHb29nbGUgUHVibGlzaGVyIFRhZyAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogIHZhciBnZXRUYWlsVGFyZ2V0UGFyYW0gPSBmdW5jdGlvbihhKSB7CiAgICB2YXIgdHRDb29raWVOYW1lID0gIl90dGRtcCI7CiAgICBpZiAoIXdpbmRvdy5fdHRwcm9maWxlc2NhY2hlKSB7CiAgICAgIHdpbmRvdy5fdHRwcm9maWxlc2NhY2hlID0ge307CiAgICAgIHRyeSB7CiAgICAgICAgdmFyIGMgPSBkb2N1bWVudC5jb29raWUubWF0Y2goJyhefDspXFxzKicgKyB0dENvb2tpZU5hbWUgKyAnXFxzKj1cXHMqKFteO10rKScpOwogICAgICAgIHZhciBkID0gYyA/IGMucG9wKCkuc3BsaXQoJ3wnKSA6IFtdOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZC5sZW5ndGg7IGkrKykgewogICAgICAgICAgdmFyIGt2ID0gZFtpXS5zcGxpdCgiOiIpOwogICAgICAgICAgaWYgKGt2WzFdICYmIGt2WzFdLmluZGV4T2YoIiwiKSA+IDApIHsKICAgICAgICAgICAgICB3aW5kb3cuX3R0cHJvZmlsZXNjYWNoZVtrdlswXV0gPSBrdlsxXS5zcGxpdCgiLCIpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB3aW5kb3cuX3R0cHJvZmlsZXNjYWNoZVtrdlswXV0gPSBrdlsxXTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgfQogICAgfQogICAgcmV0dXJuIHdpbmRvdy5fdHRwcm9maWxlc2NhY2hlW2FdID8gd2luZG93Ll90dHByb2ZpbGVzY2FjaGVbYV0gOiAnbmEnOwogIH07CgogIChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBnYWRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICAgIGdhZHMuYXN5bmMgPSB0cnVlOwogICAgICBnYWRzLnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JzsKICAgICAgdmFyIHVzZVNTTCA9ICdodHRwczonID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sOwogICAgICBnYWRzLnNyYyA9ICh1c2VTU0wgPyAnaHR0cHM6JyA6ICdodHRwOicpICsKICAgICAgICAgICAgICAnLy93d3cuZ29vZ2xldGFnc2VydmljZXMuY29tL3RhZy9qcy9ncHQuanMnOwogICAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTsKICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnYWRzLCBub2RlKTsKICB9KSgpOwoKICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24gKCkgewogICAgICAgIGdvb2dsZXRhZy5kZWZpbmVTbG90KCcvMTcyMTgzNi92YWdhc19kZXNjcmljYW9fc3F1YXJlXzMwMHgyNTAnLCBbMzAwLCAyNTBdLCAndmFnYXNfZGVzY3JpY2FvX3NxdWFyZV8zMDB4MjUwJykuYWRkU2VydmljZShnb29nbGV0YWcucHViYWRzKCkpOwogICAgICAgIGdvb2dsZXRhZy5kZWZpbmVTbG90KCcvMTcyMTgzNi92YWdhc19kZXNjcmljYW9faGFsZnBhZ2VfMzAweDYwMCcsIFszMDAsIDYwMF0sICd2YWdhc19kZXNjcmljYW9faGFsZnBhZ2VfMzAweDYwMCcpLmFkZFNlcnZpY2UoZ29vZ2xldGFnLnB1YmFkcygpKTsKCiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0TFMnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0xTJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dFMnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ1MnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0VCcsIGdldFRhaWxUYXJnZXRQYXJhbSgnVCcpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRDJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdDJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dFUnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ1UnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0RScsIGdldFRhaWxUYXJnZXRQYXJhbSgnRScpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRBJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdBJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dEcnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0cnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0Q0EnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0NBJykpOwoKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygncXVlcnknLCBbXSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5lbmFibGVTaW5nbGVSZXF1ZXN0KCk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5jb2xsYXBzZUVtcHR5RGl2cygpOwogICAgICBnb29nbGV0YWcuZW5hYmxlU2VydmljZXMoKTsKICB9KTsKPC9zY3JpcHQ+CjwhLS0gRU5EIFZhZ2FzLmNvbSBHb29nbGUgUHVibGlzaGVyIFRhZyAtLT4KCgogIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vbGQranNvbiI+CiAgewogICAgIkBjb250ZXh0IjogImh0dHA6Ly9zY2hlbWEub3JnIiwKICAgICJAdHlwZSI6ICJXZWJTaXRlIiwKICAgICJuYW1lIjogIlZBR0FTLmNvbSIsCiAgICAiYWx0ZXJuYXRlTmFtZSI6ICJTaXRlIGRlIEVtcHJlZ29zIFZBR0FTLmNvbS5iciIsCiAgICAidXJsIjogImh0dHA6Ly93d3cudmFnYXMuY29tLmJyIgogIH0KPC9zY3JpcHQ+Cgo8L2hlYWQ+Cgo8Ym9keSBjbGFzcz0icHQtQlIiPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgovLzwhW0NEQVRBWwogICAgICB2YXIgZGF0YUxheWVyID0gW3sicGFnZSI6eyJ0ZW1wbGF0ZSI6IlZhZ2EiLCJuYW1lIjoiVmFnYSBQcm9ncmFtYWRvciAoQyMuTkVUKSAtIFJhZGl4IEVuZ2VuaGFyaWEgZSBTb2Z0d2FyZSAodjE3Mzk5NjApIiwiYXJlYSI6ImNhbmRpZGF0b3MiLCJwYWdlVmVyc2lvbiI6bnVsbCwicGFnZVZhZ2EiOnsibmFtZSI6IlByb2dyYW1hZG9yIChDIy5ORVQpIiwiZW1wcmVzYSI6IlJhZGl4IEVuZ2VuaGFyaWEgZSBTb2Z0d2FyZSIsImNvZGUiOiJ2MTczOTk2MCIsInF1YW50aXR5IjoiMSIsIkV4cGlyYXRpb24iOiIyMDE4LzA4LzI5IiwiTG9jYWwiOiJTw6NvIFBhdWxvIC8gU1AifX0sInNpdGUiOnsiZG9tYWluIjoid3d3LnZhZ2FzLmNvbS5iciIsInByb2R1Y3ROYW1lIjoiVmFnYXMiLCJsYW5ndWFnZSI6IlBULUJSIiwiYXBwbGljYXRpb24iOiJkZXNrdG9wIn0sInNlc3Npb24iOnsic2VhcmNoU3RyaW5nIjpudWxsLCJzdGFydFRpbWUiOm51bGwsInZpc2l0TnVtYmVyIjpudWxsLCJsb2dnZWQiOmZhbHNlfX1dOwoKICAgICAgZGF0YUxheWVyLnB1c2goeydldmVudCc6ICdkYXRhTGF5ZXJfbG9hZCd9KTsKCi8vXV0+Cjwvc2NyaXB0PgoKICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KPHNjcmlwdD4oZnVuY3Rpb24odyxkLHMsbCxpKXt3W2xdPXdbbF18fFtdO3dbbF0ucHVzaCh7J2d0bS5zdGFydCc6Cm5ldyBEYXRlKCkuZ2V0VGltZSgpLGV2ZW50OidndG0uanMnfSk7dmFyIGY9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZShzKVswXSwKaj1kLmNyZWF0ZUVsZW1lbnQocyksZGw9bCE9J2RhdGFMYXllcic/JyZsPScrbDonJztqLmFzeW5jPXRydWU7ai5zcmM9CidodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndG0uanM/aWQ9JytpK2RsO2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaixmKTsKfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCdkYXRhTGF5ZXInLCdHVE0tNTJIMjM4Jyk7PC9zY3JpcHQ+CjwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KPG5vc2NyaXB0PjxpZnJhbWUgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUdUTS01MkgyMzgiCmhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPjwvbm9zY3JpcHQ+CjwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgoKCgo8ZGl2PgoKICA8YSBpZD0ic2tpcHB5IiBjbGFzcz0ic3Itb25seSBzci1vbmx5LWZvY3VzYWJsZSIgaHJlZj0iI2N2LWNvcnBvIj48ZGl2IGNsYXNzPSJjb250YWluZXIiPjxzcGFuIGNsYXNzPSJza2lwbGluay10ZXh0Ij5QdWxhciBwYXJhIG8gY29udGXDumRvPC9zcGFuPjwvZGl2PjwvYT4KPGRpdiBpZD0iaGVhZGVySG9sZGVyIj4KCiAgICA8aGVhZGVyIGlkPSJ0b3BvLWNhbmRpZGF0by1sb2dhZG8iIGNsYXNzPSJkZXNsb2dhZG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgIDxkaXYgaWQ9J2xvZ29WYWdhcyc+PGEgaHJlZj0iLyI+VkFHQVMuY29tLmJyPC9hPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRzLWhvbGRlciI+CiAgICAgICAgICAgIAk8ZGl2IGNsYXNzPSJoZWFkZXItY29tcG9uZW50cyI+CgkJCQkJPGRpdiBpZD0icGVzcXVpc2EtbWVudSI+CiAgICA8YSBocmVmPSIjIiBpZD0iYnRuLXBlc3F1aXNhIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zZWFyY2giPjwvc3Bhbj48L2E+CiAgICA8ZGl2IGlkPSJwZXNxdWlzYS1zdWJtZW51Ij4KICAgICAgICA8c3BhbgogICAgICAgICAgICByb2xlPSJidXR0b24iCiAgICAgICAgICAgIGNsYXNzPSJpY29uLXZvbHRhci1tb2JpbGUtMjQgYnRuLWZlY2hhci1wZXNxdWlzYSIKICAgICAgICAgICAgdGFiSW5kZXg9ezB9CiAgICAgICAgPjwvc3Bhbj4KICAgICAgICA8Zm9ybSBhY2NlcHQtY2hhcnNldD0iVVRGLTgiIGFjdGlvbj0iL3ZhZ2FzL3Blc3F1aXNhcyIgY2xhc3M9ImZvcm11bGFyaW9QZXNxdWlzYURlVmFnYXNfaGVhZGVyIiBtZXRob2Q9ImdldCI+PGRpdiBzdHlsZT0ibWFyZ2luOjA7cGFkZGluZzowO2Rpc3BsYXk6aW5saW5lIj48aW5wdXQgbmFtZT0idXRmOCIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iJiN4MjcxMzsiIC8+PC9kaXY+CiAgICAgICAgPGlucHV0IGNsYXNzPSJjYW1wb1Blc3F1aXNhVmFnYSIgaWQ9InNlYXJjaC1pbnB1dC1oZWFkZXIiIG5hbWU9InEiIHBsYWNlaG9sZGVyPSJEaWdpdGUgdW0gY2FyZ28sIGVtcHJlc2EgZS9vdSBsb2NhbGl6YcOnw6NvIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iIiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSIiPgo8L2Zvcm0+ICAgIDwvZGl2Pgo8L2Rpdj4KCQkJCQkJPGRpdiBpZD0ibWVudS1jYW5kaWRhdG9zLWhvbGRlciI+CgkJCQkJCQk8YSBpZD0ibWVudS1idG4iIGNsYXNzPSJuYXZiYXItdG9nZ2xlIiB0aXRsZT0iTWVudSBwcmluY2lwYWwiPgoJCQkJCQkJCTxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgoJCQkJCQkJCTxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgoJCQkJCQkJCTxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgoJCQkJCQkJCTxzcGFuIGNsYXNzPSJzci1vbmx5Ij5NZW51PC9zcGFuPgoJCQkJCQkJPC9hPgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBpZD0ibWVudS1jYW5kaWRhdG9zIiBjbGFzcz0ibWVudS1kcm9wZG93biI+CgkJCQkJCQk8ZGl2IGNsYXNzPSJuYXZlZ2FjYW8tZGVzbG9nYWRhIj4KCQkJCQkJCQk8YSBocmVmPSIvY2FkYXN0cm8tZGUtY3VycmljdWxvIj4KCQkJCQkJCQkJPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGNhZGFzdHJvIj5DYWRhc3RyZSBzZXUgY3VycsOtY3VsbzwvYnV0dG9uPgoJCQkJCQkJCTwvYT4KCQkJCQkJCQk8YSBocmVmPSIvbG9naW4tY2FuZGlkYXRvcyI+CgkJCQkJCQkJCTxidXR0b24gY2xhc3M9ImJ0biBidG4tb3V0bGluZSBidG4tb3V0bGluZS1kYXJrIj5FbnRyYXI8L2J1dHRvbj4KCQkJCQkJCQk8L2E+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJPC9kaXY+CgoJCQkJCQk8ZGl2IGNsYXNzPSJuYXZlZ2FjYW8tZGVzbG9nYWRhIj4KCQkJCQkJCTxhIGhyZWY9Ii9jYWRhc3Ryby1kZS1jdXJyaWN1bG8iPgoJCQkJCQkJCTxidXR0b24gY2xhc3M9ImJ0biBidG4tcHJpbWFyeSI+Q2FkYXN0cmUgc2V1IGN1cnLDrWN1bG88L2J1dHRvbj4KCQkJCQkJCTwvYT4KCQkJCQkJCTxhIGhyZWY9Ii9sb2dpbi1jYW5kaWRhdG9zIj4KCQkJCQkJCQk8YnV0dG9uIGNsYXNzPSJidG4gYnRuLW91dGxpbmUiPkVudHJhcjwvYnV0dG9uPgoJCQkJCQkJPC9hPgoJCQkJCQk8L2Rpdj4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvaGVhZGVyPgoKICAgIAo8L2Rpdj4KPGRpdiBpZD0ibm90aWZpY2FjYW9Ub3BvSG9sZGVyIj4KICAKPC9kaXY+Cgo8ZGl2IGlkPSJtZW51LW92ZXJsYXkiPjwvZGl2PgoKCgogIDxkaXYgaWQ9Im5vdGlmaWNhY2FvVG9wb0hvbGRlciI+CiAgICAKICA8L2Rpdj4KCjwvZGl2PgoKPGRpdiBpZD0id3JhcHBlciIgY2xhc3M9ImNsZWFyZml4Ij4KICAKCgoKCjxkaXYgY2xhc3M9ImNlbnRlciI+CiAgPGRpdiBpZD0iY29udGV1ZG9WYWdhIj4KCiAgICA8ZGl2IGlkPSJiYXJyYVZhZ2EiPgogICAgICAgICAgPGZvcm0gYWN0aW9uPSIvY2FuZGlkYXR1cmEiIG1ldGhvZD0iUE9TVCI+CiAgICA8aW5wdXQgaWQ9InZhZ2FfaWQiIG5hbWU9InZhZ2FbaWRdIiB0eXBlPSJoaWRkZW4iIHZhbHVlPSIxNzM5OTYwIiAvPgogICAgPGlucHV0IGlkPSJhdXRoZW50aWNpdHlfdG9rZW4iIG5hbWU9ImF1dGhlbnRpY2l0eV90b2tlbiIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iUDltelZ4alR1bklZaytZazVKUTFiNUJmR0NmUm1sOC9EZlBFb01CSGptYz0iIC8+CiAgICA8aW5wdXQgaWQ9ImZudCIgbmFtZT0iZm50IiB0eXBlPSJoaWRkZW4iIHZhbHVlPSIxNCIgLz4KICAgIAogICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGlkPSJidC1jYW5kaWRhdHVyYSIgY2xhc3M9ImJ0LWNhbmRpZGF0dXJhIGJ0biBidG4tc3VjY2VzcyI+CiAgICAgIENhbmRpZGF0YXItc2UgYSBlc3NhIHZhZ2EKICAgIDwvYnV0dG9uPgogIDwvZm9ybT4KCiAgICA8L2Rpdj4KICAgIDxzcGFuPgoKICAgICAgCgogICAgICAgIDxhcnRpY2xlIGNsYXNzPSJ2YWdhIj4KICAgICAgICAgIDxoZWFkZXI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWJhc2ljYXMgY2xlYXJmaXgiPgogICAgICAgICAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWNvbXBsZW1lbnRhcmVzIj4KICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJ0aXR1bG9WYWdhIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJub21lLWRvLWNhcmdvIj4KICAgICAgICAgICAgICAgICAgICAgIFByb2dyYW1hZG9yIChDIy5ORVQpCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImlkLWRhLXZhZ2EiPnYxNzM5OTYwPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW1wcmVzYVF0ZFZhZ2FzIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImVtcHJlc2FWYWdhIj4KICAgICAgICAgICAgICAgICAgICBSYWRpeCBFbmdlbmhhcmlhIGUgU29mdHdhcmUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvVmFnYSI+CiAgICAgICAgICAgICAgPHVsIGNsYXNzPSJjbGVhcmZpeCI+CiAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgIDxmaWd1cmUgY2xhc3M9Imljb25lLXNhbGFyaW8iPgogICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PSLDjWNvbmUgZGUgc2Fsw6FyaW8iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1zYWxhcmlvLTcwNzdlYTllMjY4YzMwMmVjMGIyYzY3MzQxN2IyMTYzLnN2ZyIgLz4KICAgICAgICAgICAgICAgICAgPC9maWd1cmU+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Ow6NvIGluZm9ybWFkbzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICA8ZmlndXJlIGNsYXNzPSJpY29uZS1sb2NhbGl6YWNhbyIgdGl0bGU9IkxvY2FsIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iw41jb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1sb2NhbGl6YWNhby05OGM5YjdhN2IxZjQxNjkwZjc1MDZmOWViNGVmMWNlOC5zdmciIC8+CiAgICAgICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgICAgICAgICAgICBTw6NvIFBhdWxvCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgIDxmaWd1cmUgY2xhc3M9Imljb25lLWhpZXJhcnF1aWEiIHRpdGxlPSJOw612ZWwgaGllcsOhcnF1aWNvIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iw41jb25lIGRlIGhpZXJhcnF1aWEiIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1uaXZlbC0zMTBkZjlhNGI4YWFhN2YxZGEyMDZlYjZmYzNiNjY3Ni5zdmciIC8+CiAgICAgICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIFBsZW5vCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgPGZpZ3VyZSBjbGFzcz0iaWNvbmUtZGF0YS1leHBpcmFjYW8iIHRpdGxlPSJEYXRhIGRlIGV4cGlyYcOnw6NvIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iw41jb25lIGRlIHJlbMOzZ2lhIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tZGF0YS1leHBpcmFjYW8tMDMxYWM2YWM4NzQyMjdmODg1NDQxNzY1MjY4YTZkOWMuc3ZnIiAvPgogICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj5FeHBpcmEgZW0gMjggZGlhczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9oZWFkZXI+CgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dG8iPgogICAgICAgICAgICA8cD48c3Ryb25nPkRlc2NyacOnw6NvIGRhcyBBdGl2aWRhZGVzOjwvc3Ryb25nPjwvcD4NCjxwPi0gRXNjcmV2ZXIgZG9jdW1lbnRvcyAoRGlhZ3JhbWFzIFVNTCwgbWFudWFpcywgZXhlbXBsb3MgZGUgdXNvKTvCoMKgPC9wPg0KPHA+LSBQcm9ncmFtYXIgcmVzcGVpdGFuZG8gcGFkcsO1ZXMgZGUgRGVzZW52b2x2aW1lbnRvLsKgwqDCoDwvcD4NCjxwPsKgPC9wPg0KPHA+PHN0cm9uZz5Gb3JtYcOnw6NvIEFjYWTDqm1pY2E6PC9zdHJvbmc+PC9wPg0KPHA+Q3Vyc2FuZG8gRW5nZW5oYXJpYSBkYSBDb21wdXRhw6fDo28sIENpw6puY2lhIGRhIENvbXB1dGHDp8OjbyBvdSBkZW1haXMgY3Vyc29zIGRhIMOhcmVhIGRlIFRlY25vbG9naWEuPC9wPg0KPHA+wqA8L3A+DQo8cD48c3Ryb25nPkNvbXBldMOqbmNpYXMgVMOpY25pY2FzOjwvc3Ryb25nPjwvcD4NCjxwPi0gRGVzZWrDoXZlbCBleHBlcmnDqm5jaWEgZW0gQyMsIFVNTDs8L3A+DQo8cD4twqBEZXNlasOhdmVsIGNvbmhlY2ltZW50byBlbSAuTmV0IGNvcmUgMi4wKywgQW5ndWxhciA1KywgRmx1ZW50VmFsaWRhdGlvbiwgRG9ja2VyLCBFbnRpdHkgRnJhbWV3b3JrLCBTd2FnZ2VyLCB0ZXN0ZXMgdW5pdMOhcmlvcy48L3A+CiAgICAgICAgICA8L2Rpdj4KCgogICAgICAgICAgPGhyPgoKICAgICAgICAgIDxkaXYgY2xhc3M9J2FwcmVzZW50YWNhby1lbXByZXNhJz4KICAgICAgICAgICAgPGltZyBhbHQ9Ikw1NjM0NjE2OTExNDMzNCIgaWQ9ImxvZ290aXBvLWRhLXZhZ2EiIHNyYz0iaHR0cHM6Ly9zaXRlLnZhZ2FzLmNvbS5ici9pbWcvbG9nb3MvbDU2MzQ2MTY5MTE0MzM0LmdpZiIgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlciIgLz4KICAgICAgICAgICAgICA8cD48cD5BIFJhZGl4IG9mZXJlY2Ugc2VydmnDp29zIGUgc29sdcOnw7VlcyBkZSB0ZWNub2xvZ2lhLCBhbHRhbWVudGUgcXVhbGlmaWNhZG9zIGUgY29tIGluZGVwZW5kw6puY2lhIHRlY25vbMOzZ2ljYSwgcGFyYSBhdGVuZGVyIGFzIHByaW5jaXBhaXMgaW5kw7pzdHJpYXMgZGUgcHJvY2Vzc28gZG8gQnJhc2lsIGUgZG8gbXVuZG8uIENvbSBzZWRlIG5vIFJpbyBkZSBKYW5laXJvLCBhIFJhZGl4IG9jdXBhIGNvbSBkZXN0YXF1ZSBhIExpc3RhIGRhcyBNZWxob3JlcyBFbXByZXNhcyBwYXJhIHNlIFRyYWJhbGhhci48L3A+PC9wPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9hcnRpY2xlPgogICAgICAKICAgIDxmb3JtIGFjdGlvbj0iL2NhbmRpZGF0dXJhIiBtZXRob2Q9IlBPU1QiPgogICAgPGlucHV0IGlkPSJ2YWdhX2lkIiBuYW1lPSJ2YWdhW2lkXSIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iMTczOTk2MCIgLz4KICAgIDxpbnB1dCBpZD0iYXV0aGVudGljaXR5X3Rva2VuIiBuYW1lPSJhdXRoZW50aWNpdHlfdG9rZW4iIHR5cGU9ImhpZGRlbiIgdmFsdWU9IlA5bXpWeGpUdW5JWWsrWWs1SlExYjVCZkdDZlJtbDgvRGZQRW9NQkhqbWM9IiAvPgogICAgPGlucHV0IGlkPSJmbnQiIG5hbWU9ImZudCIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iMTQiIC8+CiAgICAKICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBpZD0iYnQtY2FuZGlkYXR1cmEiIGNsYXNzPSJidC1jYW5kaWRhdHVyYSBidG4gYnRuLXN1Y2Nlc3MiPgogICAgICBDYW5kaWRhdGFyLXNlIGEgZXNzYSB2YWdhCiAgICA8L2J1dHRvbj4KICA8L2Zvcm0+CgoKICAgIDxzZWN0aW9uIGlkPSJjb21wYXJ0aWxoYXItdmFnYSI+CiAgICAgIDxzcGFuIGNsYXNzPSJzaGFyZVRYVCI+Q29tcGFydGlsaGFyIGVzdGEgdmFnYTo8L3NwYW4+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij52YXIgc3dpdGNoVG81eCA9IHRydWU7PC9zY3JpcHQ+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHBzOi8vd3Muc2hhcmV0aGlzLmNvbS9idXR0b24vYnV0dG9ucy5qcyI+PC9zY3JpcHQ+CiAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5zdExpZ2h0Lm9wdGlvbnMoe3B1Ymxpc2hlcjogImU5Mjg5NTk2LWYyZGMtNDc3Zi1iYTcwLTlmYTcyY2FkMGI2NiIsIGRvTm90SGFzaDogZmFsc2UsIGRvTm90Q29weTogZmFsc2UsIGhhc2hBZGRyZXNzQmFyOiBmYWxzZX0pOzwvc2NyaXB0PgogICAgICA8c3BhbiBjbGFzcz0nc3RfZmFjZWJvb2tfbGFyZ2UnIGRpc3BsYXlUZXh0PSdGYWNlYm9vayc+PC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0nc3RfdHdpdHRlcl9sYXJnZScgZGlzcGxheVRleHQ9J1R3ZWV0Jz48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSdzdF9saW5rZWRpbl9sYXJnZScgZGlzcGxheVRleHQ9J0xpbmtlZEluJz48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSdzdF9nb29nbGVwbHVzX2xhcmdlJyBkaXNwbGF5VGV4dD0nR29vZ2xlICsnPjwvc3Bhbj4KICAgICAgPGEgaHJlZj0iL21vdmVfdG8/c2Vydmljbz1pbmRpY2FjYW9fZGVfdmFnYSZhbXA7Y29kaWdvX2RhX3ZhZ2E9MTczOTk2MCIgY2xhc3M9Imljb0VtYWlsIiB0aXRsZT0iRW1haWwiPjwvYT4KICAgIDwvc2VjdGlvbj4KCiAgICA8L3NwYW4+CgogIDwvZGl2PgoKICA8YXNpZGUgaWQ9ImxhdGVyYWxWYWdhIj4KCiAgICAgIAogICAgICA8ZGl2IGNsYXNzPSJwdWJsaWNpZGFkZSI+CiAgPHNwYW4gY2xhc3M9InB1YiI+UHVibGljaWRhZGU8L3NwYW4+CiAgPGRpdiBpZD0idmFnYXNfZGVzY3JpY2FvX3NxdWFyZV8zMDB4MjUwIj4KICAJPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgogICAgICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKSB7IGdvb2dsZXRhZy5kaXNwbGF5KCd2YWdhc19kZXNjcmljYW9fc3F1YXJlXzMwMHgyNTAnKTsgfSk7CiAgICA8L3NjcmlwdD4KICA8L2Rpdj4KPC9kaXY+CgogICAgICA8c2VjdGlvbiBkYXRhLXVybD0iL3ZhZ2FzL3ZhZ2FzX3NpbWlsYXJlcy92MTczOTk2MCIgaWQ9InZhZ2FzLXNpbWlsYXJlcyI+PC9zZWN0aW9uPgogICAgICA8c2NyaXB0IHNyYz0iL2Fzc2V0cy92YWdhc19zaW1pbGFyZXMvdmFnYXNTaW1pbGFyZXMtYTFmZjhiNzExNDhiZjVmMWY1ZmQzNTkzNjUyM2IwYzQuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CgogICAgICA8ZGl2IGNsYXNzPSJwdWJsaWNpZGFkZSI+CiAgPHNwYW4gY2xhc3M9InB1YiI+UHVibGljaWRhZGU8L3NwYW4+CiAgPGRpdiBpZD0idmFnYXNfZGVzY3JpY2FvX2hhbGZwYWdlXzMwMHg2MDAiPgogIAk8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+CiAgICAgIGdvb2dsZXRhZy5jbWQucHVzaChmdW5jdGlvbigpIHsgZ29vZ2xldGFnLmRpc3BsYXkoJ3ZhZ2FzX2Rlc2NyaWNhb19oYWxmcGFnZV8zMDB4NjAwJyk7IH0pOwogICAgPC9zY3JpcHQ+CiAgPC9kaXY+CjwvZGl2PgogIDwvYXNpZGU+Cgo8L2Rpdj4KCjxkaXYgaWQ9ImJveC1jYW5kaWRhdHVyYSI+CiAgPGRpdiBpZD0iYm94LWNhbmRpZGF0dXJhLWlubmVyIj4KCiAgICA8ZGl2IGNsYXNzPSJjaGFtYWRhIj4KICAgICAgPGgyIGNsYXNzPSJ0aXQiPkVzdGEgdmFnYSByZXF1ZXIgbyBwcmVlbmNoaW1lbnRvIGRlIGZpY2hhcyBlIHRlc3Rlcy48L2gyPgogICAgICA8ZGl2IGNsYXNzPSJpbWctZmljaGEiPjwvZGl2PgogICAgICA8cD5SZWNvbWVuZGFtb3MgYSBjYW5kaWRhdHVyYSB2aWEgUEMgcGFyYSBtYWlvciBmYWNpbGlkYWRlIGRlIHByZWVuY2hpbWVudG8uPC9wPgogICAgPC9kaXY+CgogICAgPGEgb25jbGljaz0iZ2EoJ3NlbmQnLCAnZXZlbnQnLCAnTW9iaWxlIC0gTGluayBFbnZpYXIgdmFnYSBwb3IgZS1tYWlsJywgJ0NsaWNrJyk7IiBpZD0iYnRuLXZhZ2EtZW1haWwiIGhyZWY9Im1haWx0bzo/c3ViamVjdD1Qcm9ncmFtYWRvciAoQyMuTkVUKSAodjE3Mzk5NjApJmJvZHk9aHR0cDovL3d3dy52YWdhcy5jb20uYnIvdmFnYXMvdjE3Mzk5NjAvcHJvZ3JhbWFkb3ItYy1uZXQiPjxzcGFuIGNsYXNzPSJpY28tbWFpbCI+PC9zcGFuPkVudmlhciB2YWdhIHBvciBlLW1haWw8L2E+CiAgICA8YSBocmVmPSIvbW92ZV90bz9zZXJ2aWNvPWNhbmRpZGF0dXJhJmFtcDtjb2RpZ29fZGFfdmFnYT0xNzM5OTYwJmFtcDtmb250ZV9kZV9jYXB0YWNhbz0xNCIgaWQ9InZhZ2EtbGluay1jb250aW51YXIiIG9uY2xpY2s9ImdhKCYjeDI3O3NlbmQmI3gyNzssICYjeDI3O2V2ZW50JiN4Mjc7LCAmI3gyNztNb2JpbGUgLSBMaW5rIENvbnRpbnVhciBjYW5kaWRhdHVyYSYjeDI3OywgJiN4Mjc7Q2xpY2smI3gyNzspOyI+Q29udGludWFyIGNhbmRpZGF0dXJhPC9hPgogIDwvZGl2Pgo8L2Rpdj4KCgoKCjxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vbGQranNvbiI+CiAgeyJAY29udGV4dCI6Imh0dHA6Ly9zY2hlbWEub3JnIiwiQHR5cGUiOiJKb2JQb3N0aW5nIiwidGl0bGUiOiJQcm9ncmFtYWRvciAoQyMuTkVUKSIsImRlc2NyaXB0aW9uIjoiRGVzY3Jpw6fDo28gZGFzIEF0aXZpZGFkZXM6XHJcbi0gRXNjcmV2ZXIgZG9jdW1lbnRvcyAoRGlhZ3JhbWFzIFVNTCwgbWFudWFpcywgZXhlbXBsb3MgZGUgdXNvKTvCoMKgXHJcbi0gUHJvZ3JhbWFyIHJlc3BlaXRhbmRvIHBhZHLDtWVzIGRlIERlc2Vudm9sdmltZW50by7CoMKgwqBcclxuwqBcclxuRm9ybWHDp8OjbyBBY2Fkw6ptaWNhOlxyXG5DdXJzYW5kbyBFbmdlbmhhcmlhIGRhIENvbXB1dGHDp8OjbywgQ2nDqm5jaWEgZGEgQ29tcHV0YcOnw6NvIG91IGRlbWFpcyBjdXJzb3MgZGEgw6FyZWEgZGUgVGVjbm9sb2dpYS5cclxuwqBcclxuQ29tcGV0w6puY2lhcyBUw6ljbmljYXM6XHJcbi0gRGVzZWrDoXZlbCBleHBlcmnDqm5jaWEgZW0gQyMsIFVNTDtcclxuLcKgRGVzZWrDoXZlbCBjb25oZWNpbWVudG8gZW0gLk5ldCBjb3JlIDIuMCssIEFuZ3VsYXIgNSssIEZsdWVudFZhbGlkYXRpb24sIERvY2tlciwgRW50aXR5IEZyYW1ld29yaywgU3dhZ2dlciwgdGVzdGVzIHVuaXTDoXJpb3MuIiwiaWRlbnRpZmllciI6eyJAdHlwZSI6IlByb3BlcnR5VmFsdWUiLCJuYW1lIjoiUmFkaXggRW5nZW5oYXJpYSBlIFNvZnR3YXJlIiwidmFsdWUiOjE3Mzk5NjB9LCJkYXRlUG9zdGVkIjoiMjAxOC0wNy0zMCIsInZhbGlkVGhyb3VnaCI6IjIwMTgtMDgtMjkiLCJoaXJpbmdPcmdhbml6YXRpb24iOnsiQHR5cGUiOiJPcmdhbml6YXRpb24iLCJuYW1lIjoiUmFkaXggRW5nZW5oYXJpYSBlIFNvZnR3YXJlIn0sImpvYkxvY2F0aW9uIjp7IkB0eXBlIjoiUGxhY2UiLCJhZGRyZXNzIjp7IkB0eXBlIjoiUG9zdGFsQWRkcmVzcyIsImFkZHJlc3NMb2NhbGl0eSI6IlPDo28gUGF1bG8iLCJhZGRyZXNzUmVnaW9uIjoiU1AiLCJhZGRyZXNzQ291bnRyeSI6IkJyYXNpbCJ9fX0KPC9zY3JpcHQ+CgoKCgo8L2Rpdj4KCjxmb290ZXIgaWQ9InJvZGFwZSI+CiAgPGRpdiBpZD0icm9kYXBlRmFpeGEiPgogIDxkaXYgY2xhc3M9ImNlbnRlciI+CiAgICA8ZGl2IGNsYXNzPSJwdWxsLXJpZ2h0LWNvbnRhaW5lciI+CgogICAgICA8ZGl2IGlkPSJsaXN0YUlkaW9tYXMiIGNsYXNzPSJsaXN0YS1pZGlvbWFzLWNvbnRhaW5lciI+CiAgPHVsIGNsYXNzPSJpZGlvbWEtbGlzdGEiPgogICAgPGRpdiBjbGFzcz0ib3Bjb2VzLWNvbnRhaW5lciI+CiAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDphcGxpY2FyX2xvY2FsZSgncHQtQlInKTsiIGNsYXNzPSJpdGVtIHNlbGVjaW9uYWRvIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uZSBidFB0Ij48L3NwYW4+CiAgICAgICAgICA8bGk+cG9ydHVndcOqczwvbGk+CiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXBsaWNhcl9sb2NhbGUoJ2VzJyk7IiBjbGFzcz0iaXRlbSAiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb25lIGJ0RXMiPjwvc3Bhbj4KICAgICAgICAgIDxsaT5lc3Bhw7FvbDwvbGk+CiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXBsaWNhcl9sb2NhbGUoJ2VuJyk7IiBjbGFzcz0iaXRlbSAiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb25lIGJ0RW4iPjwvc3Bhbj4KICAgICAgICAgIDxsaT5lbmdsaXNoPC9saT4KICAgICAgICA8L2E+CiAgICA8L2Rpdj4KICA8L3VsPgo8L2Rpdj4KCiAgICAgIDx1bCBpZD0ibGlzdGFSZWRlcyI+CiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly9mYWNlYm9vay5jb20vVkFHQVNjb20vIiBjbGFzcz0ibGlua0ZhY2UiIG9uY2xpY2s9ImdhKCYjeDI3O3NlbmQmI3gyNzssICYjeDI3O2V2ZW50JiN4Mjc7LCAmI3gyNztGYWNlYm9vayAtIEN1cnRpciYjeDI3OywgJiN4Mjc7Q2xpY2smI3gyNzspOyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJGYWNlYm9vayI+RmFjZWJvb2s8L2E+PC9saT4KICAgICAgICA8IS0tIFBhcmEgY2FuZGlkYXRvcyAtLT4KICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3R3aXR0ZXIuY29tL3ZhZ2FzIiBjbGFzcz0ibGlua1R3aXR0ZXIiIG9uY2xpY2s9ImdhKCYjeDI3O3NlbmQmI3gyNzssICYjeDI3O2V2ZW50JiN4Mjc7LCAmI3gyNztUd2l0dGVyIC0gU2VndWlyJiN4Mjc7LCAmI3gyNztDbGljayYjeDI3Oyk7IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlR3aXR0ZXIiPlR3aXR0ZXI8L2E+PC9saT4KICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vMTA1NTIwNjIxODE4NjU4NDI1OTE1IiBjbGFzcz0ibGlua0dvb2dsZSIgb25jbGljaz0iZ2EoJiN4Mjc7c2VuZCYjeDI3OywgJiN4Mjc7ZXZlbnQmI3gyNzssICYjeDI3O0dvb2dsZSsgLSBTZWd1aXImI3gyNzssICYjeDI3O0NsaWNrJiN4Mjc7KTsiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR29vZ2xlICsiPkdvb2dsZSArPC9hPjwvbGk+CiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly9saW5rZC5pbi9HcnVwb1ZBR0FTIiBjbGFzcz0ibGlua0xpbmtlZEluIiBvbmNsaWNrPSJnYSgmI3gyNztzZW5kJiN4Mjc7LCAmI3gyNztldmVudCYjeDI3OywgJiN4Mjc7TGlua2VkSW4gLSBDb25lY3RhciYjeDI3OywgJiN4Mjc7Q2xpY2smI3gyNzspOyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiI+TGlua2VkSW48L2E+PC9saT4KICAgICAgPC91bD4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KCiAgCiAgPGRpdiBpZD0icm9kYXBlTGlua3MiPgogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCiAgICAgIDxkaXYgY2xhc3M9InJvZENvbCByb2RJbnN0aXR1Y2lvbmFsIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb2RUaXQiPjxhIGhyZWY9Ii9pbnN0aXR1Y2lvbmFsLyI+SW5zdGl0dWNpb25hbDwvYT48L2Rpdj4KICAgICAgICA8dWw+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2luc3RpdHVjaW9uYWwvcXVlbS1zb21vcyI+UXVlbSBzb21vczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wcm9kdXRvcyI+Tm9zc29zIHByb2R1dG9zPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3BhcmNlcmlhcyI+UGFyY2VyaWFzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3Byb2pldG9zLXNvY2lhaXMiPlJlc3BvbnNhYmlsaWRhZGUgc29jaWFsPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2ltcHJlbnNhIj5JbXByZW5zYTwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii90cmFiYWxoZS1jb25vc2NvIj5UcmFiYWxoZSBjb25vc2NvPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJyb2RDb2wgcm9kRW1wcmVzYXMiPgogICAgICAgIDxkaXYgY2xhc3M9InJvZFRpdCI+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8iPkVtcHJlc2FzPC9hPjwvZGl2PgogICAgICAgIDx1bD4KICAgICAgICAgIDxsaT48YSBocmVmPSIvc29sdWNhby1yZWNydXRhbWVudG8tc2VsZWNhbyI+U29sdcOnw7VlcyBwYXJhIFImYW1wO1M8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvc29sdWNhby1yZWNydXRhbWVudG8tc2VsZWNhby9yZWRlcy1sb2phcyI+UmVkZXMgZGUgbG9qYXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvc29sdWNhby1yZWNydXRhbWVudG8tc2VsZWNhby9wcm9ncmFtYS1lc3RhZ2lvLXRyYWluZWUiPlByb2dyYW1hcyBkZSBFc3TDoWdpbyBlIFRyYWluZWU8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvc29sdWNhby1yZWNydXRhbWVudG8tc2VsZWNhby9zb2Z0d2FyZS12YWdhcy1lLXBhcnRuZXIiPkNvbmhlw6dhIG8gVkFHQVMgZS1wYXJ0bmVyPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vZHV2aWRhcy1mcmVxdWVudGVzIj5GQVE8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvY2xpZW50ZXMtdmFnYXMiPkNsaWVudGVzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vI2ZhbGUtY29ub3NjbyI+PHNwYW4gY2xhc3M9InRyYW5zbGF0aW9uX21pc3NpbmciIHRpdGxlPSJ0cmFuc2xhdGlvbiBtaXNzaW5nOiBwdC1CUi5nbG9iYWwubmF2LmVtcHJlc2FzLnNvbGljaXRhci1jb250YXRvIj5Tb2xpY2l0YXIgQ29udGF0bzwvc3Bhbj48L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvZ2VudGVyaC8iPkdlbnRlUkg8L2E+PC9saT4KICAgICAgICA8L3VsPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9InJvZENvbCByb2RDYW5kaWRhdG9zIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb2RUaXQiPjxhIGhyZWY9Ii8iPkNhbmRpZGF0b3M8L2E+PC9kaXY+CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii8iPlBlc3F1aXNhIGRlIHZhZ2FzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlcnZpY29zLWdyYXR1aXRvcy1jYW5kaWRhdG9zIj5TZXJ2acOnb3MgZ3JhdHVpdG9zIHBhcmEgY2FuZGlkYXRvczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbXByZXNhcy1jb250cmF0YW5kbyI+UXVlbSBjb250cmF0YTwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jYW5kaWRhdG9zL3JlZGVzLXNvY2lhaXMiPlJlZGVzIHNvY2lhaXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FuZGlkYXRvcy9jb21vLWZ1bmNpb25hIj5PIFZBR0FTLmNvbS5icjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnZhZ2FzLmNvbS5ici9wcm9maXNzb2VzIj5WQUdBUyBQcm9maXNzw7VlczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnZhZ2FzLmNvbS5ici9tYXBhLWRlLWNhcnJlaXJhcy9zb2JyZSI+TWFwYSBWQUdBUyBkZSBDYXJyZWlyYXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvYWp1ZGEtY2FuZGlkYXRvcyIgdGFyZ2V0PSJfYmxhbmsiPkFqdWRhPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICAgICAgPGRpdiBjbGFzcz0icm9kQ29sIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm9kVGl0Ij5Ib3RzaXRlczwvZGl2PgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuZm9ydW12YWdhcy5jb20uYnIiIHRhcmdldD0iX2JsYW5rIj5Gw7NydW0gVkFHQVM8L2E+PC9saT4KICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL2FydGV2YWdhcyIgdGFyZ2V0PSJfYmxhbmsiPmFydGVWQUdBUzwvYT48L2xpPgogICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvcHVibGljaWRhZGUiIHRhcmdldD0iX2JsYW5rIj5QdWJsaWNpZGFkZTwvYT48L2xpPgogICAgICAgICAgICA8L3VsPgogICAgICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJjb3B5cmlnaHQiPjxzcGFuIGlkPSJyb2RQb3dlcmVkIj5Qb3dlcmVkIGJ5IDxzdHJvbmc+VkFHQVM8L3N0cm9uZz48L3NwYW4+Q29weXJpZ2h0IMKpIDIwMTggVkFHQVMgVGVjbm9sb2dpYSAuIFRvZG9zIG9zIGRpcmVpdG9zIHJlc2VydmFkb3MuIHwgPGEgaHJlZj0iL3Rlcm1vcy1kZS11c28iPlRlcm1vcyBkZSB1c288L2E+PC9kaXY+CgogICAgPC9kaXY+CiAgPC9kaXY+Cgo8L2Zvb3Rlcj4KCjxkaXYgaWQ9Im92ZXJsYXkiPjwvZGl2Pgo8c2NyaXB0IHNyYz0iL2Fzc2V0cy9hcHBsaWNhdGlvbi01OGM3MjI3ZDJkMDY1NWQzYzlkYjBhMWNiMmU1Yjc5YS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KCjxkaXYgc3R5bGU9ImRpc3BsYXk6IG5vbmUiIGlkPSJmaW0tZGUtcGFnaW5hIj4KICAKPC9kaXY+CgoKPC9ib2R5Pgo8L2h0bWw+Cg==
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:11 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1739964/programador-c-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:12 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '64'
      Set-Cookie:
      - __cfduid=d3208e7b8143998e64aec99a8d034349c1533172811; expires=Fri, 02-Aug-19
        01:20:11 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=475e97749e0391a048bdb57c9114d7c0055914b8f3d02dd882; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTM2NDU3OGM5YTI4YWNlNzVlMDJjYWQzNDk5NDMyNzljBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMStpS0hKbnRLVlpoOXJVODRKMTMzTEtPMjVDcWZ5Y0ZDR1UwR0o1Z0ZZUWM9BjsARg%3D%3D--7af51e5f2f46fa90646e8a26463e870a887ca82e;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"f134b583dc8d63bff18173b1f8f2b75a"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 5d1e107e6414f13fc28dc74f7dd57b5d
      X-Runtime:
      - '0.084264'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb879feb34ad3-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:12 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1739890/analista-de-software-c-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:12 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '64'
      Set-Cookie:
      - __cfduid=d1e61a5f6fc40d7beedc0d3d21880a26b1533172812; expires=Fri, 02-Aug-19
        01:20:12 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=6deb5bca0bba3edbfdb88289ab65c8cade575ac9cbd5abf215; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWJlM2FhMDUxOWUzYzVhNTM1NzQ1ZDMxY2QxYjAyYjFmBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMXFWeEVhQmwrMm9YL3BkZUJubFFicGV3akVWQnlCQkRqcU9MeXNNaHMxTEU9BjsARg%3D%3D--f6978592adc3ce6f52d8a7afbff63db744c19dc9;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"139929d17fbab91131de912267aab52e"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 38397726df57ac7cb2e6face335c9bf4
      X-Runtime:
      - '0.050545'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb87c4d664ad9-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:12 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1739891/analista-de-software-c-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:12 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '63'
      Set-Cookie:
      - __cfduid=d85d6bbc84b7f6316dd44a8b0ef33891b1533172812; expires=Fri, 02-Aug-19
        01:20:12 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=d57101fa0f56ef020c2bc767fa5819c63f6d6dbc0c45bc5b96; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTQxZjVmZDYyNDYzZTFiYWFkYmViNzljZjNkMmRkOWZjBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWM2ZWVqdnJncEtYa0hJU3Rtc0h0OGJzczIxUjZFT2NyQ2FZRTBKSUIwb0U9BjsARg%3D%3D--ebf995082893d8b8dade95c77efcb4863e901d60;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"c54d18037b8debc96b632fb9748dc31a"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 7c7d0db2d2506bc966e2ae61a0382200
      X-Runtime:
      - '0.078126'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb87e3a954bb1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InB0LWJyIj4KPGhlYWQ+CiAgPHRpdGxlPlZhZ2EgQW5hbGlzdGEgZGUgU29mdHdhcmUgKEMjLk5FVCkgLSBSYWRpeCBFbmdlbmhhcmlhIGUgU29mdHdhcmUgKHYxNzM5ODkxKSB8IFZBR0FTLmNvbS5icjwvdGl0bGU+CiAgPGxpbmsgaHJlZj0naHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PUxhdG86NDAwLDcwMCw0MDBpdGFsaWN8VGl0aWxsaXVtK1dlYjo0MDAsNjAwLDQwMGl0YWxpYywzMDAsNzAwfE9wZW4rU2FucycgcmVsPSdzdHlsZXNoZWV0JyB0eXBlPSd0ZXh0L2Nzcyc+CiAgPGxpbmsgaHJlZj0iL2Fzc2V0cy9wZXNzb2FzLTQwZTBiZjhjOWIxMjdjMWNjMjg4OGE0Yjk4ZTgyM2Q1LmNzcyIgbWVkaWE9InNjcmVlbiIgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgLz4KCiAgPG1ldGEgaHR0cC1lcXVpdj0iQ29udGVudC1UeXBlIiBjb250ZW50PSJ0ZXh0L2h0bWw7IGNoYXJzZXQ9dXRmLTgiLz4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPndpbmRvdy5OUkVVTXx8KE5SRVVNPXt9KTtOUkVVTS5pbmZvPXsiYmVhY29uIjoiYmFtLm5yLWRhdGEubmV0IiwiZXJyb3JCZWFjb24iOiJiYW0ubnItZGF0YS5uZXQiLCJsaWNlbnNlS2V5IjoiYjkyMTIxNjVkOCIsImFwcGxpY2F0aW9uSUQiOiI2ODkxNjU3MCIsInRyYW5zYWN0aW9uTmFtZSI6IklGMVpFVWRlQ2dvSFFCbERXQVJUUkVwRlZCVVhGMXRGVkVwTVFWOEtRZz09IiwicXVldWVUaW1lIjoxLCJhcHBsaWNhdGlvblRpbWUiOjc5LCJhZ2VudCI6IiJ9PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij53aW5kb3cuTlJFVU18fChOUkVVTT17fSksX19ucl9yZXF1aXJlPWZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKG4pe2lmKCF0W25dKXt2YXIgbz10W25dPXtleHBvcnRzOnt9fTtlW25dWzBdLmNhbGwoby5leHBvcnRzLGZ1bmN0aW9uKHQpe3ZhciBvPWVbbl1bMV1bdF07cmV0dXJuIHIob3x8dCl9LG8sby5leHBvcnRzKX1yZXR1cm4gdFtuXS5leHBvcnRzfWlmKCJmdW5jdGlvbiI9PXR5cGVvZiBfX25yX3JlcXVpcmUpcmV0dXJuIF9fbnJfcmVxdWlyZTtmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKylyKG5bb10pO3JldHVybiByfSh7MTpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoKXt9ZnVuY3Rpb24gbyhlLHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGkoZSxbZi5ub3coKV0uY29uY2F0KHUoYXJndW1lbnRzKSksdD9udWxsOnRoaXMsbiksdD92b2lkIDA6dGhpc319dmFyIGk9ZSgiaGFuZGxlIiksYT1lKDIpLHU9ZSgzKSxjPWUoImVlIikuZ2V0KCJ0cmFjZXIiKSxmPWUoImxvYWRlciIpLHM9TlJFVU07InVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3cubmV3cmVsaWMmJihuZXdyZWxpYz1zKTt2YXIgcD1bInNldFBhZ2VWaWV3TmFtZSIsInNldEN1c3RvbUF0dHJpYnV0ZSIsInNldEVycm9ySGFuZGxlciIsImZpbmlzaGVkIiwiYWRkVG9UcmFjZSIsImlubGluZUhpdCIsImFkZFJlbGVhc2UiXSxkPSJhcGktIixsPWQrIml4bi0iO2EocCxmdW5jdGlvbihlLHQpe3NbdF09byhkK3QsITAsImFwaSIpfSkscy5hZGRQYWdlQWN0aW9uPW8oZCsiYWRkUGFnZUFjdGlvbiIsITApLHMuc2V0Q3VycmVudFJvdXRlTmFtZT1vKGQrInJvdXRlTmFtZSIsITApLHQuZXhwb3J0cz1uZXdyZWxpYyxzLmludGVyYWN0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyByKS5nZXQoKX07dmFyIG09ci5wcm90b3R5cGU9e2NyZWF0ZVRyYWNlcjpmdW5jdGlvbihlLHQpe3ZhciBuPXt9LHI9dGhpcyxvPSJmdW5jdGlvbiI9PXR5cGVvZiB0O3JldHVybiBpKGwrInRyYWNlciIsW2Yubm93KCksZSxuXSxyKSxmdW5jdGlvbigpe2lmKGMuZW1pdCgobz8iIjoibm8tIikrImZuLXN0YXJ0IixbZi5ub3coKSxyLG9dLG4pLG8pdHJ5e3JldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaChlKXt0aHJvdyBjLmVtaXQoImZuLWVyciIsW2FyZ3VtZW50cyx0aGlzLGVdLG4pLGV9ZmluYWxseXtjLmVtaXQoImZuLWVuZCIsW2Yubm93KCldLG4pfX19fTthKCJzZXROYW1lLHNldEF0dHJpYnV0ZSxzYXZlLGlnbm9yZSxvbkVuZCxnZXRDb250ZXh0LGVuZCxnZXQiLnNwbGl0KCIsIiksZnVuY3Rpb24oZSx0KXttW3RdPW8obCt0KX0pLG5ld3JlbGljLm5vdGljZUVycm9yPWZ1bmN0aW9uKGUpeyJzdHJpbmciPT10eXBlb2YgZSYmKGU9bmV3IEVycm9yKGUpKSxpKCJlcnIiLFtlLGYubm93KCldKX19LHt9XSwyOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQpe3ZhciBuPVtdLHI9IiIsaT0wO2ZvcihyIGluIGUpby5jYWxsKGUscikmJihuW2ldPXQocixlW3JdKSxpKz0xKTtyZXR1cm4gbn12YXIgbz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1yfSx7fV0sMzpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe3R8fCh0PTApLCJ1bmRlZmluZWQiPT10eXBlb2YgbiYmKG49ZT9lLmxlbmd0aDowKTtmb3IodmFyIHI9LTEsbz1uLXR8fDAsaT1BcnJheShvPDA/MDpvKTsrK3I8bzspaVtyXT1lW3Qrcl07cmV0dXJuIGl9dC5leHBvcnRzPXJ9LHt9XSw0OltmdW5jdGlvbihlLHQsbil7dC5leHBvcnRzPXtleGlzdHM6InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UmJndpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcmJiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnR9fSx7fV0sZWU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7fWZ1bmN0aW9uIG8oZSl7ZnVuY3Rpb24gdChlKXtyZXR1cm4gZSYmZSBpbnN0YW5jZW9mIHI/ZTplP2MoZSx1LGkpOmkoKX1mdW5jdGlvbiBuKG4scixvLGkpe2lmKCFkLmFib3J0ZWR8fGkpe2UmJmUobixyLG8pO2Zvcih2YXIgYT10KG8pLHU9bShuKSxjPXUubGVuZ3RoLGY9MDtmPGM7ZisrKXVbZl0uYXBwbHkoYSxyKTt2YXIgcD1zW3lbbl1dO3JldHVybiBwJiZwLnB1c2goW2IsbixyLGFdKSxhfX1mdW5jdGlvbiBsKGUsdCl7dltlXT1tKGUpLmNvbmNhdCh0KX1mdW5jdGlvbiBtKGUpe3JldHVybiB2W2VdfHxbXX1mdW5jdGlvbiB3KGUpe3JldHVybiBwW2VdPXBbZV18fG8obil9ZnVuY3Rpb24gZyhlLHQpe2YoZSxmdW5jdGlvbihlLG4pe3Q9dHx8ImZlYXR1cmUiLHlbbl09dCx0IGluIHN8fChzW3RdPVtdKX0pfXZhciB2PXt9LHk9e30sYj17b246bCxlbWl0Om4sZ2V0OncsbGlzdGVuZXJzOm0sY29udGV4dDp0LGJ1ZmZlcjpnLGFib3J0OmEsYWJvcnRlZDohMX07cmV0dXJuIGJ9ZnVuY3Rpb24gaSgpe3JldHVybiBuZXcgcn1mdW5jdGlvbiBhKCl7KHMuYXBpfHxzLmZlYXR1cmUpJiYoZC5hYm9ydGVkPSEwLHM9ZC5iYWNrbG9nPXt9KX12YXIgdT0ibnJAY29udGV4dCIsYz1lKCJnb3MiKSxmPWUoMikscz17fSxwPXt9LGQ9dC5leHBvcnRzPW8oKTtkLmJhY2tsb2c9c30se31dLGdvczpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe2lmKG8uY2FsbChlLHQpKXJldHVybiBlW3RdO3ZhciByPW4oKTtpZihPYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5rZXlzKXRyeXtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExfSkscn1jYXRjaChpKXt9cmV0dXJuIGVbdF09cixyfXZhciBvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPXJ9LHt9XSxoYW5kbGU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCxuLHIpe28uYnVmZmVyKFtlXSxyKSxvLmVtaXQoZSx0LG4pfXZhciBvPWUoImVlIikuZ2V0KCJoYW5kbGUiKTt0LmV4cG9ydHM9cixyLmVlPW99LHt9XSxpZDpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSl7dmFyIHQ9dHlwZW9mIGU7cmV0dXJuIWV8fCJvYmplY3QiIT09dCYmImZ1bmN0aW9uIiE9PXQ/LTE6ZT09PXdpbmRvdz8wOmEoZSxpLGZ1bmN0aW9uKCl7cmV0dXJuIG8rK30pfXZhciBvPTEsaT0ibnJAaWQiLGE9ZSgiZ29zIik7dC5leHBvcnRzPXJ9LHt9XSxsb2FkZXI6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7aWYoIXgrKyl7dmFyIGU9aC5pbmZvPU5SRVVNLmluZm8sdD1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKVswXTtpZihzZXRUaW1lb3V0KHMuYWJvcnQsM2U0KSwhKGUmJmUubGljZW5zZUtleSYmZS5hcHBsaWNhdGlvbklEJiZ0KSlyZXR1cm4gcy5hYm9ydCgpO2YoeSxmdW5jdGlvbih0LG4pe2VbdF18fChlW3RdPW4pfSksYygibWFyayIsWyJvbmxvYWQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIik7dmFyIG49ZC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtuLnNyYz0iaHR0cHM6Ly8iK2UuYWdlbnQsdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuLHQpfX1mdW5jdGlvbiBvKCl7ImNvbXBsZXRlIj09PWQucmVhZHlTdGF0ZSYmaSgpfWZ1bmN0aW9uIGkoKXtjKCJtYXJrIixbImRvbUNvbnRlbnQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIil9ZnVuY3Rpb24gYSgpe3JldHVybiBFLmV4aXN0cyYmcGVyZm9ybWFuY2Uubm93P01hdGgucm91bmQocGVyZm9ybWFuY2Uubm93KCkpOih1PU1hdGgubWF4KChuZXcgRGF0ZSkuZ2V0VGltZSgpLHUpKS1oLm9mZnNldH12YXIgdT0obmV3IERhdGUpLmdldFRpbWUoKSxjPWUoImhhbmRsZSIpLGY9ZSgyKSxzPWUoImVlIikscD13aW5kb3csZD1wLmRvY3VtZW50LGw9ImFkZEV2ZW50TGlzdGVuZXIiLG09ImF0dGFjaEV2ZW50Iix3PXAuWE1MSHR0cFJlcXVlc3QsZz13JiZ3LnByb3RvdHlwZTtOUkVVTS5vPXtTVDpzZXRUaW1lb3V0LFNJOnAuc2V0SW1tZWRpYXRlLENUOmNsZWFyVGltZW91dCxYSFI6dyxSRVE6cC5SZXF1ZXN0LEVWOnAuRXZlbnQsUFI6cC5Qcm9taXNlLE1POnAuTXV0YXRpb25PYnNlcnZlcn07dmFyIHY9IiIrbG9jYXRpb24seT17YmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGVycm9yQmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGFnZW50OiJqcy1hZ2VudC5uZXdyZWxpYy5jb20vbnItMTA3MS5taW4uanMifSxiPXcmJmcmJmdbbF0mJiEvQ3JpT1MvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksaD10LmV4cG9ydHM9e29mZnNldDp1LG5vdzphLG9yaWdpbjp2LGZlYXR1cmVzOnt9LHhocldyYXBwYWJsZTpifTtlKDEpLGRbbF0/KGRbbF0oIkRPTUNvbnRlbnRMb2FkZWQiLGksITEpLHBbbF0oImxvYWQiLHIsITEpKTooZFttXSgib25yZWFkeXN0YXRlY2hhbmdlIixvKSxwW21dKCJvbmxvYWQiLHIpKSxjKCJtYXJrIixbImZpcnN0Ynl0ZSIsdV0sbnVsbCwiYXBpIik7dmFyIHg9MCxFPWUoNCl9LHt9XX0se30sWyJsb2FkZXIiXSk7PC9zY3JpcHQ+CiAgPG1ldGEgY29udGVudD0iYXV0aGVudGljaXR5X3Rva2VuIiBuYW1lPSJjc3JmLXBhcmFtIiAvPgo8bWV0YSBjb250ZW50PSJjNmVlanZyZ3BLWGtISVN0bXNIdDhic3MyMVI2RU9jckNhWUUwSklCMG9FPSIgbmFtZT0iY3NyZi10b2tlbiIgLz4KICA8bWV0YSBjaGFyc2V0PSJVVEYtOCIvPgogIDxtZXRhIG5hbWU9ImtleXdvcmRzIiBjb250ZW50PSJFbXByZWdvcywgVmFnYXMsIEN1cnJpY3VsdW0sIENhcnJlaXJhLCBDdXJyw61jdWxvLCBBbmFsaXN0YSBkZSBTb2Z0d2FyZSAoQyMuTkVUKSwgUmFkaXggRW5nZW5oYXJpYSBlIFNvZnR3YXJlLCBTw6NvIFBhdWxvIi8+CiAgPG1ldGEgbmFtZT0iZGVzY3JpcHRpb24iIGNvbnRlbnQ9IlZhZ2EgZGUgRW1wcmVnbyBwYXJhIEFuYWxpc3RhIGRlIFNvZnR3YXJlIChDIy5ORVQpIGVtIFPDo28gUGF1bG8gbmEgUmFkaXggRW5nZW5oYXJpYSBlIFNvZnR3YXJlLiBDYW5kaWRhdGUtc2UgZ3JhdHVpdGFtZW50ZSBubyBWQUdBUy5jb20uYnIiLz4KCiAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9wbmciIGhyZWY9Ii9hc3NldHMvbXVuZG9zL2Zhdmljb25fcC0zZWEyODY0OTI5NzM0MGQ5YTMyNjVmY2Y5ZjE5ZGFlNS5pY28iLz4KICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24iIGhyZWY9Ii9hc3NldHMvbXVuZG9zL2FwcGxlLXRvdWNoLWljb24tYmY0NDI4NWQxNjNhMzQyMGRlZmMwNDMwMzExMDNhNjYucG5nIi8+CiAgCiAgICA8bGluayByZWw9ImNhbm9uaWNhbCIgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL3ZhZ2FzL3YxNzM5ODkxL2FuYWxpc3RhLWRlLXNvZnR3YXJlLWMtbmV0Ii8+CgogICAgICAKICA8bWV0YSBodHRwLWVxdWl2PSJDYWNoZS1Db250cm9sIiBjb250ZW50PSJuby1jYWNoZSwgbm8tc3RvcmUsIG11c3QtcmV2YWxpZGF0ZSIgLz4KICA8bWV0YSBodHRwLWVxdWl2PSJQcmFnbWEiIGNvbnRlbnQ9Im5vLWNhY2hlIiAvPgogIDxtZXRhIGh0dHAtZXF1aXY9IkV4cGlyZXMiIGNvbnRlbnQ9IjAiIC8+CgogICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IkFuYWxpc3RhIGRlIFNvZnR3YXJlIChDIy5ORVQpIC0gUGxlbm8gKHYxNzM5ODkxKSIvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJjb21wYW55Ii8+CiAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cDovL3d3dy52YWdhcy5jb20uYnIvdmFnYXMvdjE3Mzk4OTEvYW5hbGlzdGEtZGUtc29mdHdhcmUtYy1uZXQiLz4KICA8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2UiIGNvbnRlbnQ9Imh0dHA6Ly93d3cudmFnYXMuY29tLmJyL2Fzc2V0cy9zb2NpYWwvbG9nb19vcGVuX2dyYXBoX2JpZy1iNjNiZDY5OWVkZTQ5ZTQ1NTRkNzkwMmEzNzllOWZiNi5qcGciLz4KICA8bWV0YSBwcm9wZXJ0eT0ib2c6c2l0ZV9uYW1lIiBjb250ZW50PSJ3d3cuVkFHQVMuY29tLmJyIi8+CiAgPG1ldGEgcHJvcGVydHk9ImZiOmFwcF9pZCIgY29udGVudD0iMzA5NzY2NzQ1NzYzNDg5Ii8+CgoKICA8IS0tW2lmIGx0IElFIDldPgogICAgPHNjcmlwdCBzcmM9Ii9hc3NldHMvaHRtbDUtMTMyMTRmMDhmZWU1MWIzM2I5MWI3MDQwOWIwODQ0Y2YuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+CiAgPCFbZW5kaWZdLS0+CiAgICAgIDwhLS0gVmFnYXMuY29tIEJlZ2luIFRhaWxUYXJnZXQgVGFnIE1hbmFnZXIgLS0+CjxzY3JpcHQ+CiAgKGZ1bmN0aW9uKGkpIHsKICAgIHZhciB0cyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpOwogICAgdHMudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnOwogICAgdHMuYXN5bmMgPSB0cnVlOwogICAgdHMuc3JjID0gKCdodHRwczonID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sID8gJ2h0dHBzOi8vJyA6ICdodHRwOi8vJykgKyAndGFncy50LnRhaWx0YXJnZXQuY29tL3QzbS5qcz9pPScgKyBpOwogICAgdmFyIHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07CiAgICBzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRzLCBzKTsKICB9KSgnVFQtMTAyMzUtMC9DVC0zMCcpOwo8L3NjcmlwdD4KPCEtLSBWYWdhcy5jb20gRW5kIFRhaWxUYXJnZXQgVGFnIE1hbmFnZXIgLS0+Cgo8IS0tIFByZWJpZCBDb25maWcgU2VjdGlvbiBFTkQgLS0+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgIHZhciBQUkVCSURfVElNRU9VVCA9IDIwMDA7CgogICAgdmFyIGFkVW5pdHMgPSBbXTsKICAgICAgICAgIGFkVW5pdHMucHVzaCgKICAgICAgICAgICAgewogICAgICAgICAgICAgIGNvZGU6ICJ2YWdhc19kZXNjcmljYW9fc3F1YXJlXzMwMHgyNTAiLAogICAgICAgICAgICAgIHNpemVzOiBbMzAwLCAyNTBdLAogICAgICAgICAgICAgIGJpZHM6IFt7ImJpZGRlciI6ImFwcG5leHVzIiwicGFyYW1zIjp7InBsYWNlbWVudElkIjoiMTMwMjA5MDgifX0seyJiaWRkZXIiOiJydWJpY29uIiwicGFyYW1zIjp7ImFjY291bnRJZCI6IjE1NDUyIiwic2l0ZUlkIjoiOTc3NTIiLCJ6b25lSWQiOiI0NTg3NDIiLCJzaXplcyI6WzE1XX19LHsiYmlkZGVyIjoiY3JpdGVvIiwicGFyYW1zIjp7InpvbmVJZCI6IjExMTQxNTYifX1dCiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAgICAgICBhZFVuaXRzLnB1c2goCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBjb2RlOiAidmFnYXNfZGVzY3JpY2FvX2hhbGZwYWdlXzMwMHg2MDAiLAogICAgICAgICAgICAgIHNpemVzOiBbMzAwLCA2MDBdLAogICAgICAgICAgICAgIGJpZHM6IFt7ImJpZGRlciI6ImFwcG5leHVzIiwicGFyYW1zIjp7InBsYWNlbWVudElkIjoiMTMwMjA5MTcifX0seyJiaWRkZXIiOiJydWJpY29uIiwicGFyYW1zIjp7ImFjY291bnRJZCI6IjE1NDUyIiwic2l0ZUlkIjoiOTc3NTIiLCJ6b25lSWQiOiI0NTg3NDIiLCJzaXplcyI6WzEwXX19LHsiYmlkZGVyIjoiY3JpdGVvIiwicGFyYW1zIjp7InpvbmVJZCI6IjExMTQxNTcifX1dCiAgICAgICAgICAgIH0KICAgICAgICAgICk7CiAgICAKICAgIHZhciBwYmpzID0gcGJqcyB8fCB7fTsKICAgIHBianMucXVlID0gcGJqcy5xdWUgfHwgW107CgogICAgKGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBkID0gZG9jdW1lbnQsCiAgICAgICAgICAgIGUgPSBkLmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpLAogICAgICAgICAgICBwID0gZC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpWzBdOwogICAgICAgIGUudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnOwogICAgICAgIGUuYXN5bmMgPSB0cnVlOwogICAgICAgIGUuc3JjID0gJy9zY3JpcHRzL3B1YmxpY2lkYWRlL3ByZWJpZF93aXRoX2N1cnJlbmN5LmpzJzsKICAgICAgICBwLmluc2VydEJlZm9yZShlLCBwLmZpcnN0Q2hpbGQpOwogICAgfSkoKTsKCiAgICBwYmpzLnF1ZS5wdXNoKGZ1bmN0aW9uKCkgewogICAgICAgIGNvbnN0IGN1c3RvbUdyYW51bGFyaXR5ID0gewogICAgICAgICAgICAnYnVja2V0cyc6IFt7J21pbic6IDAsICdtYXgnOiA1MCwgJ2luY3JlbWVudCc6IDAuMDEgfV0KICAgICAgICB9OwogICAgICAgIHBianMuc2V0Q29uZmlnKHsKICAgICAgICAgICAgcHJpY2VHcmFudWxhcml0eTogY3VzdG9tR3JhbnVsYXJpdHksCiAgICAgICAgICAgIGN1cnJlbmN5OiB7CiAgICAgICAgICAgICAgICBhZFNlcnZlckN1cnJlbmN5OiAiQlJMIiwKICAgICAgICAgICAgICAgIGdyYW51bGFyaXR5TXVsdGlwbGllcjogMSwKICAgICAgICAgICAgICAgIGNvbnZlcnNpb25SYXRlRmlsZTogImh0dHBzOi8vY3VycmVuY3kucHJlYmlkLm9yZy9sYXRlc3QuanNvbiIKICAgICAgICAgICAgfQogICAgICAgIH0pCiAgICB9KTsKPC9zY3JpcHQ+CjwhLS0gUHJlYmlkIENvbmZpZyBTZWN0aW9uIEVORCAtLT4KCjwhLS0gUHJlYmlkIEJvaWxlcnBsYXRlIFNlY3Rpb24gU1RBUlQuIC0tPgo8c2NyaXB0PgogIHZhciBnb29nbGV0YWcgPSBnb29nbGV0YWcgfHwge307CiAgZ29vZ2xldGFnLmNtZCA9IGdvb2dsZXRhZy5jbWQgfHwgW107CiAgZ29vZ2xldGFnLmNtZC5wdXNoKGZ1bmN0aW9uKCkgewogICAgICBnb29nbGV0YWcucHViYWRzKCkuZGlzYWJsZUluaXRpYWxMb2FkKCk7CiAgfSk7CgogIHBianMucXVlLnB1c2goZnVuY3Rpb24oKSB7CiAgICAgIHBianMuYWRkQWRVbml0cyhhZFVuaXRzKTsKICAgICAgcGJqcy5yZXF1ZXN0Qmlkcyh7CiAgICAgICAgICBiaWRzQmFja0hhbmRsZXI6IHNlbmRBZHNlcnZlclJlcXVlc3QKICAgICAgfSk7CiAgfSk7CgogIGZ1bmN0aW9uIHNlbmRBZHNlcnZlclJlcXVlc3QoKSB7CiAgICAgIGlmIChwYmpzLmFkc2VydmVyUmVxdWVzdFNlbnQpIHJldHVybjsKICAgICAgcGJqcy5hZHNlcnZlclJlcXVlc3RTZW50ID0gdHJ1ZTsKICAgICAgZ29vZ2xldGFnLmNtZC5wdXNoKGZ1bmN0aW9uKCkgewogICAgICAgICAgcGJqcy5xdWUucHVzaChmdW5jdGlvbigpIHsKICAgICAgICAgICAgICBwYmpzLnNldFRhcmdldGluZ0ZvckdQVEFzeW5jKCk7CiAgICAgICAgICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnJlZnJlc2goKTsKICAgICAgICAgIH0pOwogICAgICB9KTsKICB9CgogIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIHNlbmRBZHNlcnZlclJlcXVlc3QoKTsKICB9LCBQUkVCSURfVElNRU9VVCk7Cgo8L3NjcmlwdD4KPCEtLSBQcmViaWQgQm9pbGVycGxhdGUgU2VjdGlvbiBFTkQgLS0+Cgo8IS0tIFZhZ2FzLmNvbSBCZWdpbiBHb29nbGUgUHVibGlzaGVyIFRhZyAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogIHZhciBnZXRUYWlsVGFyZ2V0UGFyYW0gPSBmdW5jdGlvbihhKSB7CiAgICB2YXIgdHRDb29raWVOYW1lID0gIl90dGRtcCI7CiAgICBpZiAoIXdpbmRvdy5fdHRwcm9maWxlc2NhY2hlKSB7CiAgICAgIHdpbmRvdy5fdHRwcm9maWxlc2NhY2hlID0ge307CiAgICAgIHRyeSB7CiAgICAgICAgdmFyIGMgPSBkb2N1bWVudC5jb29raWUubWF0Y2goJyhefDspXFxzKicgKyB0dENvb2tpZU5hbWUgKyAnXFxzKj1cXHMqKFteO10rKScpOwogICAgICAgIHZhciBkID0gYyA/IGMucG9wKCkuc3BsaXQoJ3wnKSA6IFtdOwogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgZC5sZW5ndGg7IGkrKykgewogICAgICAgICAgdmFyIGt2ID0gZFtpXS5zcGxpdCgiOiIpOwogICAgICAgICAgaWYgKGt2WzFdICYmIGt2WzFdLmluZGV4T2YoIiwiKSA+IDApIHsKICAgICAgICAgICAgICB3aW5kb3cuX3R0cHJvZmlsZXNjYWNoZVtrdlswXV0gPSBrdlsxXS5zcGxpdCgiLCIpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB3aW5kb3cuX3R0cHJvZmlsZXNjYWNoZVtrdlswXV0gPSBrdlsxXTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgfQogICAgfQogICAgcmV0dXJuIHdpbmRvdy5fdHRwcm9maWxlc2NhY2hlW2FdID8gd2luZG93Ll90dHByb2ZpbGVzY2FjaGVbYV0gOiAnbmEnOwogIH07CgogIChmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBnYWRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICAgIGdhZHMuYXN5bmMgPSB0cnVlOwogICAgICBnYWRzLnR5cGUgPSAndGV4dC9qYXZhc2NyaXB0JzsKICAgICAgdmFyIHVzZVNTTCA9ICdodHRwczonID09IGRvY3VtZW50LmxvY2F0aW9uLnByb3RvY29sOwogICAgICBnYWRzLnNyYyA9ICh1c2VTU0wgPyAnaHR0cHM6JyA6ICdodHRwOicpICsKICAgICAgICAgICAgICAnLy93d3cuZ29vZ2xldGFnc2VydmljZXMuY29tL3RhZy9qcy9ncHQuanMnOwogICAgICB2YXIgbm9kZSA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTsKICAgICAgbm9kZS5wYXJlbnROb2RlLmluc2VydEJlZm9yZShnYWRzLCBub2RlKTsKICB9KSgpOwoKICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24gKCkgewogICAgICAgIGdvb2dsZXRhZy5kZWZpbmVTbG90KCcvMTcyMTgzNi92YWdhc19kZXNjcmljYW9fc3F1YXJlXzMwMHgyNTAnLCBbMzAwLCAyNTBdLCAndmFnYXNfZGVzY3JpY2FvX3NxdWFyZV8zMDB4MjUwJykuYWRkU2VydmljZShnb29nbGV0YWcucHViYWRzKCkpOwogICAgICAgIGdvb2dsZXRhZy5kZWZpbmVTbG90KCcvMTcyMTgzNi92YWdhc19kZXNjcmljYW9faGFsZnBhZ2VfMzAweDYwMCcsIFszMDAsIDYwMF0sICd2YWdhc19kZXNjcmljYW9faGFsZnBhZ2VfMzAweDYwMCcpLmFkZFNlcnZpY2UoZ29vZ2xldGFnLnB1YmFkcygpKTsKCiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0TFMnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0xTJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dFMnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ1MnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0VCcsIGdldFRhaWxUYXJnZXRQYXJhbSgnVCcpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRDJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdDJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dFUnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ1UnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0RScsIGdldFRhaWxUYXJnZXRQYXJhbSgnRScpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRBJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdBJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dEcnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0cnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0Q0EnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0NBJykpOwoKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygncXVlcnknLCBbXSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5lbmFibGVTaW5nbGVSZXF1ZXN0KCk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5jb2xsYXBzZUVtcHR5RGl2cygpOwogICAgICBnb29nbGV0YWcuZW5hYmxlU2VydmljZXMoKTsKICB9KTsKPC9zY3JpcHQ+CjwhLS0gRU5EIFZhZ2FzLmNvbSBHb29nbGUgUHVibGlzaGVyIFRhZyAtLT4KCgogIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vbGQranNvbiI+CiAgewogICAgIkBjb250ZXh0IjogImh0dHA6Ly9zY2hlbWEub3JnIiwKICAgICJAdHlwZSI6ICJXZWJTaXRlIiwKICAgICJuYW1lIjogIlZBR0FTLmNvbSIsCiAgICAiYWx0ZXJuYXRlTmFtZSI6ICJTaXRlIGRlIEVtcHJlZ29zIFZBR0FTLmNvbS5iciIsCiAgICAidXJsIjogImh0dHA6Ly93d3cudmFnYXMuY29tLmJyIgogIH0KPC9zY3JpcHQ+Cgo8L2hlYWQ+Cgo8Ym9keSBjbGFzcz0icHQtQlIiPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgovLzwhW0NEQVRBWwogICAgICB2YXIgZGF0YUxheWVyID0gW3sicGFnZSI6eyJ0ZW1wbGF0ZSI6IlZhZ2EiLCJuYW1lIjoiVmFnYSBBbmFsaXN0YSBkZSBTb2Z0d2FyZSAoQyMuTkVUKSAtIFJhZGl4IEVuZ2VuaGFyaWEgZSBTb2Z0d2FyZSAodjE3Mzk4OTEpIiwiYXJlYSI6ImNhbmRpZGF0b3MiLCJwYWdlVmVyc2lvbiI6bnVsbCwicGFnZVZhZ2EiOnsibmFtZSI6IkFuYWxpc3RhIGRlIFNvZnR3YXJlIChDIy5ORVQpIiwiZW1wcmVzYSI6IlJhZGl4IEVuZ2VuaGFyaWEgZSBTb2Z0d2FyZSIsImNvZGUiOiJ2MTczOTg5MSIsInF1YW50aXR5IjoiMSIsIkV4cGlyYXRpb24iOiIyMDE4LzA4LzI5IiwiTG9jYWwiOiJTw6NvIFBhdWxvIC8gU1AifX0sInNpdGUiOnsiZG9tYWluIjoid3d3LnZhZ2FzLmNvbS5iciIsInByb2R1Y3ROYW1lIjoiVmFnYXMiLCJsYW5ndWFnZSI6IlBULUJSIiwiYXBwbGljYXRpb24iOiJkZXNrdG9wIn0sInNlc3Npb24iOnsic2VhcmNoU3RyaW5nIjpudWxsLCJzdGFydFRpbWUiOm51bGwsInZpc2l0TnVtYmVyIjpudWxsLCJsb2dnZWQiOmZhbHNlfX1dOwoKICAgICAgZGF0YUxheWVyLnB1c2goeydldmVudCc6ICdkYXRhTGF5ZXJfbG9hZCd9KTsKCi8vXV0+Cjwvc2NyaXB0PgoKICA8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KPHNjcmlwdD4oZnVuY3Rpb24odyxkLHMsbCxpKXt3W2xdPXdbbF18fFtdO3dbbF0ucHVzaCh7J2d0bS5zdGFydCc6Cm5ldyBEYXRlKCkuZ2V0VGltZSgpLGV2ZW50OidndG0uanMnfSk7dmFyIGY9ZC5nZXRFbGVtZW50c0J5VGFnTmFtZShzKVswXSwKaj1kLmNyZWF0ZUVsZW1lbnQocyksZGw9bCE9J2RhdGFMYXllcic/JyZsPScrbDonJztqLmFzeW5jPXRydWU7ai5zcmM9CidodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ndG0uanM/aWQ9JytpK2RsO2YucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaixmKTsKfSkod2luZG93LGRvY3VtZW50LCdzY3JpcHQnLCdkYXRhTGF5ZXInLCdHVE0tNTJIMjM4Jyk7PC9zY3JpcHQ+CjwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAtLT4KPCEtLSBHb29nbGUgVGFnIE1hbmFnZXIgKG5vc2NyaXB0KSAtLT4KPG5vc2NyaXB0PjxpZnJhbWUgc3JjPSJodHRwczovL3d3dy5nb29nbGV0YWdtYW5hZ2VyLmNvbS9ucy5odG1sP2lkPUdUTS01MkgyMzgiCmhlaWdodD0iMCIgd2lkdGg9IjAiIHN0eWxlPSJkaXNwbGF5Om5vbmU7dmlzaWJpbGl0eTpoaWRkZW4iPjwvaWZyYW1lPjwvbm9zY3JpcHQ+CjwhLS0gRW5kIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgoKCgo8ZGl2PgoKICA8YSBpZD0ic2tpcHB5IiBjbGFzcz0ic3Itb25seSBzci1vbmx5LWZvY3VzYWJsZSIgaHJlZj0iI2N2LWNvcnBvIj48ZGl2IGNsYXNzPSJjb250YWluZXIiPjxzcGFuIGNsYXNzPSJza2lwbGluay10ZXh0Ij5QdWxhciBwYXJhIG8gY29udGXDumRvPC9zcGFuPjwvZGl2PjwvYT4KPGRpdiBpZD0iaGVhZGVySG9sZGVyIj4KCiAgICA8aGVhZGVyIGlkPSJ0b3BvLWNhbmRpZGF0by1sb2dhZG8iIGNsYXNzPSJkZXNsb2dhZG8iPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CiAgICAgICAgICAgIDxkaXYgaWQ9J2xvZ29WYWdhcyc+PGEgaHJlZj0iLyI+VkFHQVMuY29tLmJyPC9hPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21wb25lbnRzLWhvbGRlciI+CiAgICAgICAgICAgIAk8ZGl2IGNsYXNzPSJoZWFkZXItY29tcG9uZW50cyI+CgkJCQkJPGRpdiBpZD0icGVzcXVpc2EtbWVudSI+CiAgICA8YSBocmVmPSIjIiBpZD0iYnRuLXBlc3F1aXNhIj48c3BhbiBjbGFzcz0iZ2x5cGhpY29uIGdseXBoaWNvbi1zZWFyY2giPjwvc3Bhbj48L2E+CiAgICA8ZGl2IGlkPSJwZXNxdWlzYS1zdWJtZW51Ij4KICAgICAgICA8c3BhbgogICAgICAgICAgICByb2xlPSJidXR0b24iCiAgICAgICAgICAgIGNsYXNzPSJpY29uLXZvbHRhci1tb2JpbGUtMjQgYnRuLWZlY2hhci1wZXNxdWlzYSIKICAgICAgICAgICAgdGFiSW5kZXg9ezB9CiAgICAgICAgPjwvc3Bhbj4KICAgICAgICA8Zm9ybSBhY2NlcHQtY2hhcnNldD0iVVRGLTgiIGFjdGlvbj0iL3ZhZ2FzL3Blc3F1aXNhcyIgY2xhc3M9ImZvcm11bGFyaW9QZXNxdWlzYURlVmFnYXNfaGVhZGVyIiBtZXRob2Q9ImdldCI+PGRpdiBzdHlsZT0ibWFyZ2luOjA7cGFkZGluZzowO2Rpc3BsYXk6aW5saW5lIj48aW5wdXQgbmFtZT0idXRmOCIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iJiN4MjcxMzsiIC8+PC9kaXY+CiAgICAgICAgPGlucHV0IGNsYXNzPSJjYW1wb1Blc3F1aXNhVmFnYSIgaWQ9InNlYXJjaC1pbnB1dC1oZWFkZXIiIG5hbWU9InEiIHBsYWNlaG9sZGVyPSJEaWdpdGUgdW0gY2FyZ28sIGVtcHJlc2EgZS9vdSBsb2NhbGl6YcOnw6NvIiB0eXBlPSJ0ZXh0IiB2YWx1ZT0iIiAvPgogICAgICAgIDxpbnB1dCB0eXBlPSJzdWJtaXQiIHZhbHVlPSIiPgo8L2Zvcm0+ICAgIDwvZGl2Pgo8L2Rpdj4KCQkJCQkJPGRpdiBpZD0ibWVudS1jYW5kaWRhdG9zLWhvbGRlciI+CgkJCQkJCQk8YSBpZD0ibWVudS1idG4iIGNsYXNzPSJuYXZiYXItdG9nZ2xlIiB0aXRsZT0iTWVudSBwcmluY2lwYWwiPgoJCQkJCQkJCTxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgoJCQkJCQkJCTxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgoJCQkJCQkJCTxzcGFuIGNsYXNzPSJpY29uLWJhciI+PC9zcGFuPgoJCQkJCQkJCTxzcGFuIGNsYXNzPSJzci1vbmx5Ij5NZW51PC9zcGFuPgoJCQkJCQkJPC9hPgoJCQkJCQk8L2Rpdj4KCQkJCQkJPGRpdiBpZD0ibWVudS1jYW5kaWRhdG9zIiBjbGFzcz0ibWVudS1kcm9wZG93biI+CgkJCQkJCQk8ZGl2IGNsYXNzPSJuYXZlZ2FjYW8tZGVzbG9nYWRhIj4KCQkJCQkJCQk8YSBocmVmPSIvY2FkYXN0cm8tZGUtY3VycmljdWxvIj4KCQkJCQkJCQkJPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5IGNhZGFzdHJvIj5DYWRhc3RyZSBzZXUgY3VycsOtY3VsbzwvYnV0dG9uPgoJCQkJCQkJCTwvYT4KCQkJCQkJCQk8YSBocmVmPSIvbG9naW4tY2FuZGlkYXRvcyI+CgkJCQkJCQkJCTxidXR0b24gY2xhc3M9ImJ0biBidG4tb3V0bGluZSBidG4tb3V0bGluZS1kYXJrIj5FbnRyYXI8L2J1dHRvbj4KCQkJCQkJCQk8L2E+CgkJCQkJCQk8L2Rpdj4KCQkJCQkJPC9kaXY+CgoJCQkJCQk8ZGl2IGNsYXNzPSJuYXZlZ2FjYW8tZGVzbG9nYWRhIj4KCQkJCQkJCTxhIGhyZWY9Ii9jYWRhc3Ryby1kZS1jdXJyaWN1bG8iPgoJCQkJCQkJCTxidXR0b24gY2xhc3M9ImJ0biBidG4tcHJpbWFyeSI+Q2FkYXN0cmUgc2V1IGN1cnLDrWN1bG88L2J1dHRvbj4KCQkJCQkJCTwvYT4KCQkJCQkJCTxhIGhyZWY9Ii9sb2dpbi1jYW5kaWRhdG9zIj4KCQkJCQkJCQk8YnV0dG9uIGNsYXNzPSJidG4gYnRuLW91dGxpbmUiPkVudHJhcjwvYnV0dG9uPgoJCQkJCQkJPC9hPgoJCQkJCQk8L2Rpdj4KCQkJCTwvZGl2PgoJCQk8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvaGVhZGVyPgoKICAgIAo8L2Rpdj4KPGRpdiBpZD0ibm90aWZpY2FjYW9Ub3BvSG9sZGVyIj4KICAKPC9kaXY+Cgo8ZGl2IGlkPSJtZW51LW92ZXJsYXkiPjwvZGl2PgoKCgogIDxkaXYgaWQ9Im5vdGlmaWNhY2FvVG9wb0hvbGRlciI+CiAgICAKICA8L2Rpdj4KCjwvZGl2PgoKPGRpdiBpZD0id3JhcHBlciIgY2xhc3M9ImNsZWFyZml4Ij4KICAKCgoKCjxkaXYgY2xhc3M9ImNlbnRlciI+CiAgPGRpdiBpZD0iY29udGV1ZG9WYWdhIj4KCiAgICA8ZGl2IGlkPSJiYXJyYVZhZ2EiPgogICAgICAgICAgPGZvcm0gYWN0aW9uPSIvY2FuZGlkYXR1cmEiIG1ldGhvZD0iUE9TVCI+CiAgICA8aW5wdXQgaWQ9InZhZ2FfaWQiIG5hbWU9InZhZ2FbaWRdIiB0eXBlPSJoaWRkZW4iIHZhbHVlPSIxNzM5ODkxIiAvPgogICAgPGlucHV0IGlkPSJhdXRoZW50aWNpdHlfdG9rZW4iIG5hbWU9ImF1dGhlbnRpY2l0eV90b2tlbiIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iYzZlZWp2cmdwS1hrSElTdG1zSHQ4YnNzMjFSNkVPY3JDYVlFMEpJQjBvRT0iIC8+CiAgICA8aW5wdXQgaWQ9ImZudCIgbmFtZT0iZm50IiB0eXBlPSJoaWRkZW4iIHZhbHVlPSIxNCIgLz4KICAgIAogICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGlkPSJidC1jYW5kaWRhdHVyYSIgY2xhc3M9ImJ0LWNhbmRpZGF0dXJhIGJ0biBidG4tc3VjY2VzcyI+CiAgICAgIENhbmRpZGF0YXItc2UgYSBlc3NhIHZhZ2EKICAgIDwvYnV0dG9uPgogIDwvZm9ybT4KCiAgICA8L2Rpdj4KICAgIDxzcGFuPgoKICAgICAgCgogICAgICAgIDxhcnRpY2xlIGNsYXNzPSJ2YWdhIj4KICAgICAgICAgIDxoZWFkZXI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWJhc2ljYXMgY2xlYXJmaXgiPgogICAgICAgICAgICAgIDxmaWd1cmUgY2xhc3M9ImxvZ29FbXByZXNhIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imljb24tZW1wcmVzYS0yNCI+PC9zcGFuPgogICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImluZm9ybWFjb2VzLWNvbXBsZW1lbnRhcmVzIj4KICAgICAgICAgICAgICAgICAgPGgxIGNsYXNzPSJ0aXR1bG9WYWdhIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJub21lLWRvLWNhcmdvIj4KICAgICAgICAgICAgICAgICAgICAgIEFuYWxpc3RhIGRlIFNvZnR3YXJlIChDIy5ORVQpCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImlkLWRhLXZhZ2EiPnYxNzM5ODkxPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2gxPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZW1wcmVzYVF0ZFZhZ2FzIj4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImVtcHJlc2FWYWdhIj4KICAgICAgICAgICAgICAgICAgICBSYWRpeCBFbmdlbmhhcmlhIGUgU29mdHdhcmUKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvVmFnYSI+CiAgICAgICAgICAgICAgPHVsIGNsYXNzPSJjbGVhcmZpeCI+CiAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgIDxmaWd1cmUgY2xhc3M9Imljb25lLXNhbGFyaW8iPgogICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PSLDjWNvbmUgZGUgc2Fsw6FyaW8iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1zYWxhcmlvLTcwNzdlYTllMjY4YzMwMmVjMGIyYzY3MzQxN2IyMTYzLnN2ZyIgLz4KICAgICAgICAgICAgICAgICAgPC9maWd1cmU+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Ow6NvIGluZm9ybWFkbzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICA8ZmlndXJlIGNsYXNzPSJpY29uZS1sb2NhbGl6YWNhbyIgdGl0bGU9IkxvY2FsIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iw41jb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1sb2NhbGl6YWNhby05OGM5YjdhN2IxZjQxNjkwZjc1MDZmOWViNGVmMWNlOC5zdmciIC8+CiAgICAgICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgICAgICAgICAgICBTw6NvIFBhdWxvCiAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgIDxmaWd1cmUgY2xhc3M9Imljb25lLWhpZXJhcnF1aWEiIHRpdGxlPSJOw612ZWwgaGllcsOhcnF1aWNvIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iw41jb25lIGRlIGhpZXJhcnF1aWEiIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1uaXZlbC0zMTBkZjlhNGI4YWFhN2YxZGEyMDZlYjZmYzNiNjY3Ni5zdmciIC8+CiAgICAgICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIFBsZW5vCiAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgPGZpZ3VyZSBjbGFzcz0iaWNvbmUtZGF0YS1leHBpcmFjYW8iIHRpdGxlPSJEYXRhIGRlIGV4cGlyYcOnw6NvIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iw41jb25lIGRlIHJlbMOzZ2lhIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tZGF0YS1leHBpcmFjYW8tMDMxYWM2YWM4NzQyMjdmODg1NDQxNzY1MjY4YTZkOWMuc3ZnIiAvPgogICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICA8c3Bhbj5FeHBpcmEgZW0gMjggZGlhczwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9oZWFkZXI+CgogICAgICAgICAgPGRpdiBjbGFzcz0idGV4dG8iPgogICAgICAgICAgICA8cD48c3Ryb25nPkRlc2NyacOnw6NvIGRhcyBBdGl2aWRhZGVzOjwvc3Ryb25nPjwvcD4NCjxwPi0gTGlkZXJhciBwZXF1ZW5hIGVxdWlwZSBkZSBkZXNlbnZvbHZpbWVudG87PC9wPg0KPHA+LSBSZWxhY2lvbmFtZW50byBjb20gY2xpZW50ZTs8L3A+DQo8cD4tIEVtaXRpciAvIHJldmlzYXIgZG9jdW1lbnRhw6fDo28gdMOpY25pY2EgKGRpYWdyYW1hcywgVU1MLCBtYW51YWlzLCBleGVtcGxvcyBkZSB1c28pO8KgwqA8L3A+DQo8cD4tIFByb2dyYW1hciByZXNwZWl0YW5kbyBwYWRyw7VlcyBkZSBEZXNlbnZvbHZpbWVudG8uwqDCoMKgPC9wPg0KPHA+wqA8L3A+DQo8cD48c3Ryb25nPkZvcm1hw6fDo28gQWNhZMOqbWljYTo8L3N0cm9uZz48L3A+DQo8cD5FbmdlbmhhcmlhIGRhIENvbXB1dGHDp8OjbywgQ2nDqm5jaWEgZGEgQ29tcHV0YcOnw6NvIG91IGRlbWFpcyBjdXJzb3MgZGEgw6FyZWEgZGUgVGVjbm9sb2dpYS48L3A+DQo8cD7CoDwvcD4NCjxwPjxzdHJvbmc+Q29tcGV0w6puY2lhcyBUw6ljbmljYXM6PC9zdHJvbmc+PC9wPg0KPHA+LSBEZXNlasOhdmVsIGV4cGVyacOqbmNpYSBlbSBDIywgRGVzaWduIFBhdHRlcm5zLCBBbmd1bGFyIDUrLCB0ZXN0ZXMgdW5pdMOhcmlvcywgVU1MOzwvcD4NCjxwPi0gRGVzZWrDoXZlbCBjb25oZWNpbWVudG8gZW0gLk5ldCBjb3JlIDIuMCssIEFuc2libGUsIFllb21hbiwgRmx1ZW50VmFsaWRhdGlvbiwgT0RhdGEsIERvY2tlciwgRW50aXR5IEZyYW1ld29yaywgT0F1dGgsIEdyb292eSwgSldULCBTd2FnZ2VyLjwvcD4KICAgICAgICAgIDwvZGl2PgoKCiAgICAgICAgICA8aHI+CgogICAgICAgICAgPGRpdiBjbGFzcz0nYXByZXNlbnRhY2FvLWVtcHJlc2EnPgogICAgICAgICAgICA8aW1nIGFsdD0iTDU2MzQ2MTY5MTE0MzM0IiBpZD0ibG9nb3RpcG8tZGEtdmFnYSIgc3JjPSJodHRwczovL3NpdGUudmFnYXMuY29tLmJyL2ltZy9sb2dvcy9sNTYzNDYxNjkxMTQzMzQuZ2lmIiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyIiAvPgogICAgICAgICAgICAgIDxwPjxwPkEgUmFkaXggb2ZlcmVjZSBzZXJ2acOnb3MgZSBzb2x1w6fDtWVzIGRlIHRlY25vbG9naWEsIGFsdGFtZW50ZSBxdWFsaWZpY2Fkb3MgZSBjb20gaW5kZXBlbmTDqm5jaWEgdGVjbm9sw7NnaWNhLCBwYXJhIGF0ZW5kZXIgYXMgcHJpbmNpcGFpcyBpbmTDunN0cmlhcyBkZSBwcm9jZXNzbyBkbyBCcmFzaWwgZSBkbyBtdW5kby4gQ29tIHNlZGUgbm8gUmlvIGRlIEphbmVpcm8sIGEgUmFkaXggb2N1cGEgY29tIGRlc3RhcXVlIGEgTGlzdGEgZGFzIE1lbGhvcmVzIEVtcHJlc2FzIHBhcmEgc2UgVHJhYmFsaGFyLjwvcD48L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2FydGljbGU+CiAgICAgIAogICAgPGZvcm0gYWN0aW9uPSIvY2FuZGlkYXR1cmEiIG1ldGhvZD0iUE9TVCI+CiAgICA8aW5wdXQgaWQ9InZhZ2FfaWQiIG5hbWU9InZhZ2FbaWRdIiB0eXBlPSJoaWRkZW4iIHZhbHVlPSIxNzM5ODkxIiAvPgogICAgPGlucHV0IGlkPSJhdXRoZW50aWNpdHlfdG9rZW4iIG5hbWU9ImF1dGhlbnRpY2l0eV90b2tlbiIgdHlwZT0iaGlkZGVuIiB2YWx1ZT0iYzZlZWp2cmdwS1hrSElTdG1zSHQ4YnNzMjFSNkVPY3JDYVlFMEpJQjBvRT0iIC8+CiAgICA8aW5wdXQgaWQ9ImZudCIgbmFtZT0iZm50IiB0eXBlPSJoaWRkZW4iIHZhbHVlPSIxNCIgLz4KICAgIAogICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGlkPSJidC1jYW5kaWRhdHVyYSIgY2xhc3M9ImJ0LWNhbmRpZGF0dXJhIGJ0biBidG4tc3VjY2VzcyI+CiAgICAgIENhbmRpZGF0YXItc2UgYSBlc3NhIHZhZ2EKICAgIDwvYnV0dG9uPgogIDwvZm9ybT4KCgogICAgPHNlY3Rpb24gaWQ9ImNvbXBhcnRpbGhhci12YWdhIj4KICAgICAgPHNwYW4gY2xhc3M9InNoYXJlVFhUIj5Db21wYXJ0aWxoYXIgZXN0YSB2YWdhOjwvc3Bhbj4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPnZhciBzd2l0Y2hUbzV4ID0gdHJ1ZTs8L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cHM6Ly93cy5zaGFyZXRoaXMuY29tL2J1dHRvbi9idXR0b25zLmpzIj48L3NjcmlwdD4KICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPnN0TGlnaHQub3B0aW9ucyh7cHVibGlzaGVyOiAiZTkyODk1OTYtZjJkYy00NzdmLWJhNzAtOWZhNzJjYWQwYjY2IiwgZG9Ob3RIYXNoOiBmYWxzZSwgZG9Ob3RDb3B5OiBmYWxzZSwgaGFzaEFkZHJlc3NCYXI6IGZhbHNlfSk7PC9zY3JpcHQ+CiAgICAgIDxzcGFuIGNsYXNzPSdzdF9mYWNlYm9va19sYXJnZScgZGlzcGxheVRleHQ9J0ZhY2Vib29rJz48L3NwYW4+CiAgICAgIDxzcGFuIGNsYXNzPSdzdF90d2l0dGVyX2xhcmdlJyBkaXNwbGF5VGV4dD0nVHdlZXQnPjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9J3N0X2xpbmtlZGluX2xhcmdlJyBkaXNwbGF5VGV4dD0nTGlua2VkSW4nPjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9J3N0X2dvb2dsZXBsdXNfbGFyZ2UnIGRpc3BsYXlUZXh0PSdHb29nbGUgKyc+PC9zcGFuPgogICAgICA8YSBocmVmPSIvbW92ZV90bz9zZXJ2aWNvPWluZGljYWNhb19kZV92YWdhJmFtcDtjb2RpZ29fZGFfdmFnYT0xNzM5ODkxIiBjbGFzcz0iaWNvRW1haWwiIHRpdGxlPSJFbWFpbCI+PC9hPgogICAgPC9zZWN0aW9uPgoKICAgIDwvc3Bhbj4KCiAgPC9kaXY+CgogIDxhc2lkZSBpZD0ibGF0ZXJhbFZhZ2EiPgoKICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InB1YmxpY2lkYWRlIj4KICA8c3BhbiBjbGFzcz0icHViIj5QdWJsaWNpZGFkZTwvc3Bhbj4KICA8ZGl2IGlkPSJ2YWdhc19kZXNjcmljYW9fc3F1YXJlXzMwMHgyNTAiPgogIAk8c2NyaXB0IHR5cGU9J3RleHQvamF2YXNjcmlwdCc+CiAgICAgIGdvb2dsZXRhZy5jbWQucHVzaChmdW5jdGlvbigpIHsgZ29vZ2xldGFnLmRpc3BsYXkoJ3ZhZ2FzX2Rlc2NyaWNhb19zcXVhcmVfMzAweDI1MCcpOyB9KTsKICAgIDwvc2NyaXB0PgogIDwvZGl2Pgo8L2Rpdj4KCiAgICAgIDxzZWN0aW9uIGRhdGEtdXJsPSIvdmFnYXMvdmFnYXNfc2ltaWxhcmVzL3YxNzM5ODkxIiBpZD0idmFnYXMtc2ltaWxhcmVzIj48L3NlY3Rpb24+CiAgICAgIDxzY3JpcHQgc3JjPSIvYXNzZXRzL3ZhZ2FzX3NpbWlsYXJlcy92YWdhc1NpbWlsYXJlcy1hMWZmOGI3MTE0OGJmNWYxZjVmZDM1OTM2NTIzYjBjNC5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KCiAgICAgIDxkaXYgY2xhc3M9InB1YmxpY2lkYWRlIj4KICA8c3BhbiBjbGFzcz0icHViIj5QdWJsaWNpZGFkZTwvc3Bhbj4KICA8ZGl2IGlkPSJ2YWdhc19kZXNjcmljYW9faGFsZnBhZ2VfMzAweDYwMCI+CiAgCTxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KICAgICAgZ29vZ2xldGFnLmNtZC5wdXNoKGZ1bmN0aW9uKCkgeyBnb29nbGV0YWcuZGlzcGxheSgndmFnYXNfZGVzY3JpY2FvX2hhbGZwYWdlXzMwMHg2MDAnKTsgfSk7CiAgICA8L3NjcmlwdD4KICA8L2Rpdj4KPC9kaXY+CiAgPC9hc2lkZT4KCjwvZGl2PgoKPGRpdiBpZD0iYm94LWNhbmRpZGF0dXJhIj4KICA8ZGl2IGlkPSJib3gtY2FuZGlkYXR1cmEtaW5uZXIiPgoKICAgIDxkaXYgY2xhc3M9ImNoYW1hZGEiPgogICAgICA8aDIgY2xhc3M9InRpdCI+RXN0YSB2YWdhIHJlcXVlciBvIHByZWVuY2hpbWVudG8gZGUgZmljaGFzIGUgdGVzdGVzLjwvaDI+CiAgICAgIDxkaXYgY2xhc3M9ImltZy1maWNoYSI+PC9kaXY+CiAgICAgIDxwPlJlY29tZW5kYW1vcyBhIGNhbmRpZGF0dXJhIHZpYSBQQyBwYXJhIG1haW9yIGZhY2lsaWRhZGUgZGUgcHJlZW5jaGltZW50by48L3A+CiAgICA8L2Rpdj4KCiAgICA8YSBvbmNsaWNrPSJnYSgnc2VuZCcsICdldmVudCcsICdNb2JpbGUgLSBMaW5rIEVudmlhciB2YWdhIHBvciBlLW1haWwnLCAnQ2xpY2snKTsiIGlkPSJidG4tdmFnYS1lbWFpbCIgaHJlZj0ibWFpbHRvOj9zdWJqZWN0PUFuYWxpc3RhIGRlIFNvZnR3YXJlIChDIy5ORVQpICh2MTczOTg5MSkmYm9keT1odHRwOi8vd3d3LnZhZ2FzLmNvbS5ici92YWdhcy92MTczOTg5MS9hbmFsaXN0YS1kZS1zb2Z0d2FyZS1jLW5ldCI+PHNwYW4gY2xhc3M9Imljby1tYWlsIj48L3NwYW4+RW52aWFyIHZhZ2EgcG9yIGUtbWFpbDwvYT4KICAgIDxhIGhyZWY9Ii9tb3ZlX3RvP3NlcnZpY289Y2FuZGlkYXR1cmEmYW1wO2NvZGlnb19kYV92YWdhPTE3Mzk4OTEmYW1wO2ZvbnRlX2RlX2NhcHRhY2FvPTE0IiBpZD0idmFnYS1saW5rLWNvbnRpbnVhciIgb25jbGljaz0iZ2EoJiN4Mjc7c2VuZCYjeDI3OywgJiN4Mjc7ZXZlbnQmI3gyNzssICYjeDI3O01vYmlsZSAtIExpbmsgQ29udGludWFyIGNhbmRpZGF0dXJhJiN4Mjc7LCAmI3gyNztDbGljayYjeDI3Oyk7Ij5Db250aW51YXIgY2FuZGlkYXR1cmE8L2E+CiAgPC9kaXY+CjwvZGl2PgoKCgoKPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9sZCtqc29uIj4KICB7IkBjb250ZXh0IjoiaHR0cDovL3NjaGVtYS5vcmciLCJAdHlwZSI6IkpvYlBvc3RpbmciLCJ0aXRsZSI6IkFuYWxpc3RhIGRlIFNvZnR3YXJlIChDIy5ORVQpIiwiZGVzY3JpcHRpb24iOiJEZXNjcmnDp8OjbyBkYXMgQXRpdmlkYWRlczpcclxuLSBMaWRlcmFyIHBlcXVlbmEgZXF1aXBlIGRlIGRlc2Vudm9sdmltZW50bztcclxuLSBSZWxhY2lvbmFtZW50byBjb20gY2xpZW50ZTtcclxuLSBFbWl0aXIgLyByZXZpc2FyIGRvY3VtZW50YcOnw6NvIHTDqWNuaWNhIChkaWFncmFtYXMsIFVNTCwgbWFudWFpcywgZXhlbXBsb3MgZGUgdXNvKTvCoMKgXHJcbi0gUHJvZ3JhbWFyIHJlc3BlaXRhbmRvIHBhZHLDtWVzIGRlIERlc2Vudm9sdmltZW50by7CoMKgwqBcclxuwqBcclxuRm9ybWHDp8OjbyBBY2Fkw6ptaWNhOlxyXG5FbmdlbmhhcmlhIGRhIENvbXB1dGHDp8OjbywgQ2nDqm5jaWEgZGEgQ29tcHV0YcOnw6NvIG91IGRlbWFpcyBjdXJzb3MgZGEgw6FyZWEgZGUgVGVjbm9sb2dpYS5cclxuwqBcclxuQ29tcGV0w6puY2lhcyBUw6ljbmljYXM6XHJcbi0gRGVzZWrDoXZlbCBleHBlcmnDqm5jaWEgZW0gQyMsIERlc2lnbiBQYXR0ZXJucywgQW5ndWxhciA1KywgdGVzdGVzIHVuaXTDoXJpb3MsIFVNTDtcclxuLSBEZXNlasOhdmVsIGNvbmhlY2ltZW50byBlbSAuTmV0IGNvcmUgMi4wKywgQW5zaWJsZSwgWWVvbWFuLCBGbHVlbnRWYWxpZGF0aW9uLCBPRGF0YSwgRG9ja2VyLCBFbnRpdHkgRnJhbWV3b3JrLCBPQXV0aCwgR3Jvb3Z5LCBKV1QsIFN3YWdnZXIuIiwiaWRlbnRpZmllciI6eyJAdHlwZSI6IlByb3BlcnR5VmFsdWUiLCJuYW1lIjoiUmFkaXggRW5nZW5oYXJpYSBlIFNvZnR3YXJlIiwidmFsdWUiOjE3Mzk4OTF9LCJkYXRlUG9zdGVkIjoiMjAxOC0wNy0zMCIsInZhbGlkVGhyb3VnaCI6IjIwMTgtMDgtMjkiLCJoaXJpbmdPcmdhbml6YXRpb24iOnsiQHR5cGUiOiJPcmdhbml6YXRpb24iLCJuYW1lIjoiUmFkaXggRW5nZW5oYXJpYSBlIFNvZnR3YXJlIn0sImpvYkxvY2F0aW9uIjp7IkB0eXBlIjoiUGxhY2UiLCJhZGRyZXNzIjp7IkB0eXBlIjoiUG9zdGFsQWRkcmVzcyIsImFkZHJlc3NMb2NhbGl0eSI6IlPDo28gUGF1bG8iLCJhZGRyZXNzUmVnaW9uIjoiU1AiLCJhZGRyZXNzQ291bnRyeSI6IkJyYXNpbCJ9fX0KPC9zY3JpcHQ+CgoKCgo8L2Rpdj4KCjxmb290ZXIgaWQ9InJvZGFwZSI+CiAgPGRpdiBpZD0icm9kYXBlRmFpeGEiPgogIDxkaXYgY2xhc3M9ImNlbnRlciI+CiAgICA8ZGl2IGNsYXNzPSJwdWxsLXJpZ2h0LWNvbnRhaW5lciI+CgogICAgICA8ZGl2IGlkPSJsaXN0YUlkaW9tYXMiIGNsYXNzPSJsaXN0YS1pZGlvbWFzLWNvbnRhaW5lciI+CiAgPHVsIGNsYXNzPSJpZGlvbWEtbGlzdGEiPgogICAgPGRpdiBjbGFzcz0ib3Bjb2VzLWNvbnRhaW5lciI+CiAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDphcGxpY2FyX2xvY2FsZSgncHQtQlInKTsiIGNsYXNzPSJpdGVtIHNlbGVjaW9uYWRvIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uZSBidFB0Ij48L3NwYW4+CiAgICAgICAgICA8bGk+cG9ydHVndcOqczwvbGk+CiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXBsaWNhcl9sb2NhbGUoJ2VzJyk7IiBjbGFzcz0iaXRlbSAiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb25lIGJ0RXMiPjwvc3Bhbj4KICAgICAgICAgIDxsaT5lc3Bhw7FvbDwvbGk+CiAgICAgICAgPC9hPgogICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXBsaWNhcl9sb2NhbGUoJ2VuJyk7IiBjbGFzcz0iaXRlbSAiPgogICAgICAgICAgPHNwYW4gY2xhc3M9Imljb25lIGJ0RW4iPjwvc3Bhbj4KICAgICAgICAgIDxsaT5lbmdsaXNoPC9saT4KICAgICAgICA8L2E+CiAgICA8L2Rpdj4KICA8L3VsPgo8L2Rpdj4KCiAgICAgIDx1bCBpZD0ibGlzdGFSZWRlcyI+CiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly9mYWNlYm9vay5jb20vVkFHQVNjb20vIiBjbGFzcz0ibGlua0ZhY2UiIG9uY2xpY2s9ImdhKCYjeDI3O3NlbmQmI3gyNzssICYjeDI3O2V2ZW50JiN4Mjc7LCAmI3gyNztGYWNlYm9vayAtIEN1cnRpciYjeDI3OywgJiN4Mjc7Q2xpY2smI3gyNzspOyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJGYWNlYm9vayI+RmFjZWJvb2s8L2E+PC9saT4KICAgICAgICA8IS0tIFBhcmEgY2FuZGlkYXRvcyAtLT4KICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3R3aXR0ZXIuY29tL3ZhZ2FzIiBjbGFzcz0ibGlua1R3aXR0ZXIiIG9uY2xpY2s9ImdhKCYjeDI3O3NlbmQmI3gyNzssICYjeDI3O2V2ZW50JiN4Mjc7LCAmI3gyNztUd2l0dGVyIC0gU2VndWlyJiN4Mjc7LCAmI3gyNztDbGljayYjeDI3Oyk7IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IlR3aXR0ZXIiPlR3aXR0ZXI8L2E+PC9saT4KICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly9wbHVzLmdvb2dsZS5jb20vMTA1NTIwNjIxODE4NjU4NDI1OTE1IiBjbGFzcz0ibGlua0dvb2dsZSIgb25jbGljaz0iZ2EoJiN4Mjc7c2VuZCYjeDI3OywgJiN4Mjc7ZXZlbnQmI3gyNzssICYjeDI3O0dvb2dsZSsgLSBTZWd1aXImI3gyNzssICYjeDI3O0NsaWNrJiN4Mjc7KTsiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iR29vZ2xlICsiPkdvb2dsZSArPC9hPjwvbGk+CiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly9saW5rZC5pbi9HcnVwb1ZBR0FTIiBjbGFzcz0ibGlua0xpbmtlZEluIiBvbmNsaWNrPSJnYSgmI3gyNztzZW5kJiN4Mjc7LCAmI3gyNztldmVudCYjeDI3OywgJiN4Mjc7TGlua2VkSW4gLSBDb25lY3RhciYjeDI3OywgJiN4Mjc7Q2xpY2smI3gyNzspOyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJMaW5rZWRJbiI+TGlua2VkSW48L2E+PC9saT4KICAgICAgPC91bD4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KCiAgCiAgPGRpdiBpZD0icm9kYXBlTGlua3MiPgogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KCiAgICAgIDxkaXYgY2xhc3M9InJvZENvbCByb2RJbnN0aXR1Y2lvbmFsIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb2RUaXQiPjxhIGhyZWY9Ii9pbnN0aXR1Y2lvbmFsLyI+SW5zdGl0dWNpb25hbDwvYT48L2Rpdj4KICAgICAgICA8dWw+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2luc3RpdHVjaW9uYWwvcXVlbS1zb21vcyI+UXVlbSBzb21vczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wcm9kdXRvcyI+Tm9zc29zIHByb2R1dG9zPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3BhcmNlcmlhcyI+UGFyY2VyaWFzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3Byb2pldG9zLXNvY2lhaXMiPlJlc3BvbnNhYmlsaWRhZGUgc29jaWFsPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2ltcHJlbnNhIj5JbXByZW5zYTwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii90cmFiYWxoZS1jb25vc2NvIj5UcmFiYWxoZSBjb25vc2NvPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJyb2RDb2wgcm9kRW1wcmVzYXMiPgogICAgICAgIDxkaXYgY2xhc3M9InJvZFRpdCI+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8iPkVtcHJlc2FzPC9hPjwvZGl2PgogICAgICAgIDx1bD4KICAgICAgICAgIDxsaT48YSBocmVmPSIvc29sdWNhby1yZWNydXRhbWVudG8tc2VsZWNhbyI+U29sdcOnw7VlcyBwYXJhIFImYW1wO1M8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvc29sdWNhby1yZWNydXRhbWVudG8tc2VsZWNhby9yZWRlcy1sb2phcyI+UmVkZXMgZGUgbG9qYXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvc29sdWNhby1yZWNydXRhbWVudG8tc2VsZWNhby9wcm9ncmFtYS1lc3RhZ2lvLXRyYWluZWUiPlByb2dyYW1hcyBkZSBFc3TDoWdpbyBlIFRyYWluZWU8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvc29sdWNhby1yZWNydXRhbWVudG8tc2VsZWNhby9zb2Z0d2FyZS12YWdhcy1lLXBhcnRuZXIiPkNvbmhlw6dhIG8gVkFHQVMgZS1wYXJ0bmVyPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vZHV2aWRhcy1mcmVxdWVudGVzIj5GQVE8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvY2xpZW50ZXMtdmFnYXMiPkNsaWVudGVzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vI2ZhbGUtY29ub3NjbyI+PHNwYW4gY2xhc3M9InRyYW5zbGF0aW9uX21pc3NpbmciIHRpdGxlPSJ0cmFuc2xhdGlvbiBtaXNzaW5nOiBwdC1CUi5nbG9iYWwubmF2LmVtcHJlc2FzLnNvbGljaXRhci1jb250YXRvIj5Tb2xpY2l0YXIgQ29udGF0bzwvc3Bhbj48L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvZ2VudGVyaC8iPkdlbnRlUkg8L2E+PC9saT4KICAgICAgICA8L3VsPgogICAgICA8L2Rpdj4KCiAgICAgIDxkaXYgY2xhc3M9InJvZENvbCByb2RDYW5kaWRhdG9zIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb2RUaXQiPjxhIGhyZWY9Ii8iPkNhbmRpZGF0b3M8L2E+PC9kaXY+CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii8iPlBlc3F1aXNhIGRlIHZhZ2FzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlcnZpY29zLWdyYXR1aXRvcy1jYW5kaWRhdG9zIj5TZXJ2acOnb3MgZ3JhdHVpdG9zIHBhcmEgY2FuZGlkYXRvczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbXByZXNhcy1jb250cmF0YW5kbyI+UXVlbSBjb250cmF0YTwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jYW5kaWRhdG9zL3JlZGVzLXNvY2lhaXMiPlJlZGVzIHNvY2lhaXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FuZGlkYXRvcy9jb21vLWZ1bmNpb25hIj5PIFZBR0FTLmNvbS5icjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnZhZ2FzLmNvbS5ici9wcm9maXNzb2VzIj5WQUdBUyBQcm9maXNzw7VlczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnZhZ2FzLmNvbS5ici9tYXBhLWRlLWNhcnJlaXJhcy9zb2JyZSI+TWFwYSBWQUdBUyBkZSBDYXJyZWlyYXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvYWp1ZGEtY2FuZGlkYXRvcyIgdGFyZ2V0PSJfYmxhbmsiPkFqdWRhPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICAgICAgPGRpdiBjbGFzcz0icm9kQ29sIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icm9kVGl0Ij5Ib3RzaXRlczwvZGl2PgogICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly93d3cuZm9ydW12YWdhcy5jb20uYnIiIHRhcmdldD0iX2JsYW5rIj5Gw7NydW0gVkFHQVM8L2E+PC9saT4KICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL2FydGV2YWdhcyIgdGFyZ2V0PSJfYmxhbmsiPmFydGVWQUdBUzwvYT48L2xpPgogICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvcHVibGljaWRhZGUiIHRhcmdldD0iX2JsYW5rIj5QdWJsaWNpZGFkZTwvYT48L2xpPgogICAgICAgICAgICA8L3VsPgogICAgICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGlkPSJjb3B5cmlnaHQiPjxzcGFuIGlkPSJyb2RQb3dlcmVkIj5Qb3dlcmVkIGJ5IDxzdHJvbmc+VkFHQVM8L3N0cm9uZz48L3NwYW4+Q29weXJpZ2h0IMKpIDIwMTggVkFHQVMgVGVjbm9sb2dpYSAuIFRvZG9zIG9zIGRpcmVpdG9zIHJlc2VydmFkb3MuIHwgPGEgaHJlZj0iL3Rlcm1vcy1kZS11c28iPlRlcm1vcyBkZSB1c288L2E+PC9kaXY+CgogICAgPC9kaXY+CiAgPC9kaXY+Cgo8L2Zvb3Rlcj4KCjxkaXYgaWQ9Im92ZXJsYXkiPjwvZGl2Pgo8c2NyaXB0IHNyYz0iL2Fzc2V0cy9hcHBsaWNhdGlvbi01OGM3MjI3ZDJkMDY1NWQzYzlkYjBhMWNiMmU1Yjc5YS5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KCjxkaXYgc3R5bGU9ImRpc3BsYXk6IG5vbmUiIGlkPSJmaW0tZGUtcGFnaW5hIj4KICAKPC9kaXY+CgoKPC9ib2R5Pgo8L2h0bWw+Cg==
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:12 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1739892/analista-de-software-c-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:13 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '63'
      Set-Cookie:
      - __cfduid=d9c342986ba8555051135d713e179ed341533172812; expires=Fri, 02-Aug-19
        01:20:12 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=7a1e90c6ba62f9af0ba4adf6286a9dc59378aebbdf2e4e510d; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTA2N2IzYTU0ZWMwNzkwMjI0ZjEwNjEyYWQ3MjQyYWYzBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMXFhaDFQRTlEeXlYVVNKT25EU0RxOEludlBYd2M0K1lDbjgwQmdhMGFWbGs9BjsARg%3D%3D--da038eb4e5326551e7b1979eec14ec68325b70d7;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"b81517305834431c5d375bc48d648c39"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 86d1df93a1393b9760fb3058071b5a87
      X-Runtime:
      - '0.066468'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb88088614bff-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:13 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1733451/analista-engenheiro-de-software-c-c-lbs-wifi-android
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:13 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '63'
      Set-Cookie:
      - __cfduid=d0cf52b134ae9ffa8069e205a9f3f85d51533172813; expires=Fri, 02-Aug-19
        01:20:13 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=d9763f21aa2534de3d5fdb03361ab3f966fab5fed3543fa7cc; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTc1MTNkZTc1N2ZiNzA2OTA5Y2Q1OWI1OGY4ODJlZGYwBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMUp6NnI4d09wVWNITjNEK1Y3UnIrbERta21obElzNWs1cVd2VndYbGU5S1E9BjsARg%3D%3D--b8a92c089a575b03afea4c0378dfca82be4e82f6;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"d106c1414a3a11369efd1fcbc676e30d"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - '039474323beb882d24db06377414812b'
      X-Runtime:
      - '0.078171'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8828bca815c-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:13 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1709169/desenvolvedor-ms-sql-vb-net-ou-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:13 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '62'
      Set-Cookie:
      - __cfduid=d4c94184d3589cb6a9204e087e02e01f01533172813; expires=Fri, 02-Aug-19
        01:20:13 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=98d04b2ce8b2dc4adfcff9a47581da0bc38c520afc3c653ba5; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWViN2Y4YTg0ZGYyY2U0NDc2NzI0MTg0ZTQwZGM5NmZmBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMVlTMXlmKzNOVFhTREVIbmYwVFJoY2FEd0tsT0dmNnpNS01aWUt4Q1FYRG89BjsARg%3D%3D--63d11817ebe213268e6621b13c8d806759f28a4a;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"b83bbfe7a7d83f0ca87c4f4eaf745cfa"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 5c1bff69407c8f38becc68aaad92358b
      X-Runtime:
      - '0.046492'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb884dcf34b3f-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:13 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1681930/desenvolvedor-ms-sql-vb-net-ou-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:14 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '62'
      Set-Cookie:
      - __cfduid=dc982edc97fa349745c35dea9636dcd451533172813; expires=Fri, 02-Aug-19
        01:20:13 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=9a1a3b19afe2e47285de93c1cc8b57bc723185195004a1754f; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTQ1MzcyMDYwMWRhZmZkMDBkYWY5MTQwNjVkNzk5ZTE1BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWJIY1BycUYwZ2ExKytMYjJWaU1EUnMyQklRMWQ0MjJVdHhYN0NHU3YwRVE9BjsARg%3D%3D--1c0c588625d598a97675f5bce9a69cc973eedf87;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"b5eea09379930b59a01eb73be0578e94"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 571cc8c065fa6f1f70e0a7ff8a4ddead
      X-Runtime:
      - '0.053287'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8874ddc4af1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:14 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1740501/analista-de-tecnologia-da-informacao-n-c
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:14 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '62'
      Set-Cookie:
      - __cfduid=df017c03a271de483082a4988a086bd7d1533172814; expires=Fri, 02-Aug-19
        01:20:14 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=2572407da4159a22f1e7785a87c0d2173ce4a178871f09f0ff; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWVkM2M1MmExOGFmYmMzYjU2OTkzMTZhYWIwZjJmNTQ2BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWZNSWxQNmhONjBkTkI5b2MyUC9vVHNlcTIrNGpoVDMyemQxd1h5c1IyOG89BjsARg%3D%3D--640c471ee257c8b451ce7834c7491943903440b5;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"af86e6953d11fe69ce4014c7fea22ed2"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - ef36e896e038d44f591db2fee8e44557
      X-Runtime:
      - '0.048472'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb889390a4ac1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:14 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1739980/estagio-em-desenvolvimento-de-software-c-net
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:14 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '61'
      Set-Cookie:
      - __cfduid=d7202f425b3a11b5fdf204ade7a07d86c1533172814; expires=Fri, 02-Aug-19
        01:20:14 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=a7a01422209a022729e0a3e523545656ffa57c249236ca851f; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTc5MjE3NmQ3YTM0ZGUwNTU5ODY0MmUwZmJjYzZlYmQ2BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMVVoeTVYZ0FiU0hnNDd2WHU4a2d5U1ZSL2tmS1NYdzl6VFZDOWxYamZ5Lzg9BjsARg%3D%3D--44699ee602fc5133630c3c5f1e70bf16992a1743;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"7cac784e7b227706411910cd41c8a219"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 8e7d14c94736e04c4c1bfaf71e9fcc5d
      X-Runtime:
      - '0.068809'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb88b3b8d4b3f-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:14 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1736896/analista-de-sistemas-desenvolvedor-net-c-sql-server
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:15 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '61'
      Set-Cookie:
      - __cfduid=d7eb7c5cb371bed1242be7e0c38903da01533172814; expires=Fri, 02-Aug-19
        01:20:14 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=1dfd1024e906711e0328643bb9a0e99f1c85e729ae1abe61de; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTgxMTFmMTg5ZDFiZmRiYzFkMWY4YTRhMDQ4YmQ5NjcxBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWxPZzhwR0NqYWgrYmg3eUdWNnBtREMyNTNiTDFCSnE5ZWxMRzJmditURzA9BjsARg%3D%3D--1a87284b5daf81804f4d509265156f6065a1d6fb;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"8ed91f77004c87b3db25292cd5e6699c"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 8dfa50b10abc759537a153b6acbb568b
      X-Runtime:
      - '0.099104'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb88d3c6d4af1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:15 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1737139/analista-desenvolvedor-php-c-moodle-senior
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:15 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '61'
      Set-Cookie:
      - __cfduid=dcbd3f3f4234e537a965c2cfb790a19d81533172815; expires=Fri, 02-Aug-19
        01:20:15 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=b8dc2f29648e65ba48cbb20ee11450193f85ad8872d7f81887; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTMyNTQ0ZjEwOWQ4YWJiOTdhODgyM2FmZTQzYzU1MjU0BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMVJwRlgyNENkZUhyYjQ5OWIzeXNOYThwdHFFUzBVK1ZBOXNNbExhaUsrL0E9BjsARg%3D%3D--419d146c97ad2232912ca62f409f3cc2fece0349;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"3433ea6e6044262f3664264d4abe5b63"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - c52fc1f7c995f8c561f8037992e639e9
      X-Runtime:
      - '0.149762'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb88f5f3c4ac1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:15 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1733458/engenheiro-analista-de-software-c-camera-android
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:15 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '60'
      Set-Cookie:
      - __cfduid=d48c9ee1b2ea2f3866da1e606162d076d1533172815; expires=Fri, 02-Aug-19
        01:20:15 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=b5bc75729f92b80adaf3370ee279102a2b05709c1b9f35536a; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTBiZjk4NmQxNmE3NmE0NDZhNzczNGZmZmE0MTExNDY5BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMXZqR0MwZ2IyVDF1ZzlaK0I3M3NIenJZenM3dkNwbXpUSHZGR3hlTy9KSzQ9BjsARg%3D%3D--5ef05340047256ec869092b97771e60b9a2ddab3;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"86fc0f415442975a632bd5e86652fc2c"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 3812f0cbccb62fe28216e5e1079b7a51
      X-Runtime:
      - '0.065268'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb891d8074acd-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:15 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1707077/programador-delphi-c-e-java-teresopolis-rj
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:16 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '60'
      Set-Cookie:
      - __cfduid=da762c78effe52086b57fe31f3fe861681533172815; expires=Fri, 02-Aug-19
        01:20:15 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=7f77105c6679d4d0b367285567c652f75adc918edd7982af5b; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTRjMzI3Y2YyZGU2MWIyYmJlNWJkYjA4OTQ3ZTkwYThjBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMUVhWnJtK3hMbVNHQWQwUDZZODAwOEYxQmFJTlFVU2JCbHM5TVIyam1BN0k9BjsARg%3D%3D--05ebc40e4882960b1bd9e57bfa94f798b8b69d8a;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"1b991f1fdbf2d1f5171f77b64ffed4e9"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 8e8ff4863b1eefc171986dc0a623f435
      X-Runtime:
      - '0.083697'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb893fe4c4bb1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:16 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1738823/tecnico-de-manutencao-campina-grande-pb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:16 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '60'
      Set-Cookie:
      - __cfduid=df0a01a9d4eb9542327ca36185ef576f11533172816; expires=Fri, 02-Aug-19
        01:20:16 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=8e1360e6f565ae5d950751c229d1c941b11fab4f09d26fe525; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTc4ZjQxNGQ5NDc5YTVmOWM2NzA1ZWQ2NjJiM2FlMTNhBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMW92L2MxdEV3NjVZTWRYYy9MSWwycktnSFN3ZjZjQzZZd2hRek12RXgwc1U9BjsARg%3D%3D--62ad0ecd78026fc8a92812cfdad8346c0bf50ebc;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"7e151228f074b7daeb10408235a91607"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 0405dc090ca64924d24a63a68d912a32
      X-Runtime:
      - '0.039593'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb895f8744b87-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:16 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1738830/lider-de-visual-merchandising-vm-campina-grande-pb
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:16 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '59'
      Set-Cookie:
      - __cfduid=dfe0eb2a363fa7f0042dee255093113961533172816; expires=Fri, 02-Aug-19
        01:20:16 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=ce8e2f85fabc2685b521ae5079e2536b40d584146cf9ee8862; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJThjYjRhMDI2OGQ5YzYzYzNiMzk3YjVhZTk4OGUwZDM0BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMUQzd25QK0dnK3p0czE2MWNoaytqWjNFM0xyQ2JrdERvYlJkNGl0Y21BVmc9BjsARg%3D%3D--f4f77368d26f7eafe54175a740e0ee979e4710cf;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"3a024427fd17b024a5cd97fa64cd4566"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 9af710b07bce4088d5d7836f6e9730b4
      X-Runtime:
      - '0.094306'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb897de774bbd-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:16 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1736974/analista-tributario-junior
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:17 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '59'
      Set-Cookie:
      - __cfduid=dac454798fe929663a7a90e7c6ac645b71533172816; expires=Fri, 02-Aug-19
        01:20:16 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=b5637d56d2b1dbd20b3174b5cc1cf4f4a8ec6b9f325e4cda8d; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTg3ZGUxODkwODQxZDk1ZWZkOWZjNzE4Zjg0MGQxNTFjBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMUFjNWwyUXNvbjQ0K0VmZlFlVDBuTnRFdlhRWjQ2L081dHNwY3pUcmJLYVU9BjsARg%3D%3D--0acbaa0e5272be8a610496be99bb2228092bfe9e;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"525947ae3c6f91bfeed60a1d554a3b20"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 9f05af24c576278a0a068ea6dee93437
      X-Runtime:
      - '0.078442'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb899ee3c4b09-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:17 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1737632/lider-de-fashiontronics-telefonia-porto-alegre-rs
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:17 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '59'
      Set-Cookie:
      - __cfduid=d4ebf89b8e8f452297195aafba57ab7311533172817; expires=Fri, 02-Aug-19
        01:20:17 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=218b2917f50b1efbd7ae4034d55c72b3c003764982153ae434; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTk4MGFhYjQ2MGNiNGI4MThlYTgyOWQzZTMyZWUzM2U1BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMXI5VFVkR0poQkhyNHlNN3E3YzZZYTE1Wms4OVZXM2Qzb0hoQUJoSlMrR009BjsARg%3D%3D--82eb0a0383cf11803f6963f59b4b0a0d31bee8c9;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"3d229d3035ac6e10e95dfb431be8df9a"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - eae8155484521e344e917bf40b2056ce
      X-Runtime:
      - '0.088799'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb89c09ec4acd-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:17 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1737637/lider-de-fashiontronics-telefonia-florianopolis-sc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:17 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '58'
      Set-Cookie:
      - __cfduid=d3d39ef6a2c7c24e27be73631bb612c6c1533172817; expires=Fri, 02-Aug-19
        01:20:17 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=ed9f4ded4291bdc1233227f9e20ee5cc292585f5ab11a1741f; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWEyYmIxM2QyYmFjM2VmMWIyOTg2ZmIyZTA1OWVlYmU1BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWhxV1FXQ2EvKytGaFk0WDYxQk9FNGN2bWdPS0VnQ3VaS2tXVStjQ2lraEU9BjsARg%3D%3D--2d6072bb82c263cd2e73663b03775548c8823c98;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"1b75a385ce256bdafa249f98e0c01823"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 3578437a3007695fe6dcabdc524c007f
      X-Runtime:
      - '0.183855'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb89e3f094be1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:18 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1737639/lider-de-fashiontronics-telefonia-curitiba-pr
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:18 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '58'
      Set-Cookie:
      - __cfduid=d4f4f6bccc88d49a7d02574de804c81f41533172818; expires=Fri, 02-Aug-19
        01:20:18 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=c2025f55d3e0a56852b98b91d770e2ff6ed809a5c8dc07b6e5; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTI0YTZmMWU1ZTQ4M2QwZDRjNmJkYmI1M2EzNGE4ZjU0BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWhob3R5YVpXS1dsUWVLdG5jNnM3eElMTHk4V2sxM2tWRzlxZ0J1dy9iMlk9BjsARg%3D%3D--bf6547479b32f42510c58910dd58345b877c4858;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"e1c116d51a600edb92d4606ba7c14f9f"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 9de8c7a31f84c3dd00c25b0ec0fb42ee
      X-Runtime:
      - '0.055295'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8a0f86e815c-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:18 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1737641/lider-de-fashiontronics-telefonia-maringa-pr
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:18 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '58'
      Set-Cookie:
      - __cfduid=d4471dc712d7ef6a78ddfb756b3a04f0c1533172818; expires=Fri, 02-Aug-19
        01:20:18 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=c8f475e0a72bbeb77bacfaf4a6dce9e11fbbffddba7af072ed; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTk5OGIwYzUyZWMwNjIxM2M2OTgzZmM1N2MxYTllOGZiBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMXd5dlg5MTZlRko1L1JaMUt6T2hYNVBJK29WMmxHZmZWTXFyU1ZWNVI5MFk9BjsARg%3D%3D--92f57ed976fbc1f52fbdc0a5e8ccb7bf655040ec;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"c43ec9c68448db68c6273e460b2abb10"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 9a72d9531613e3273a7f348968e4cbe5
      X-Runtime:
      - '0.082569'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8a2e9914acd-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:18 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1737624/lider-de-vendas-produtos-financeiros-curitiba-pr
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:18 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '57'
      Set-Cookie:
      - __cfduid=d4471dc712d7ef6a78ddfb756b3a04f0c1533172818; expires=Fri, 02-Aug-19
        01:20:18 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=21457f505a54992544bba4faeafd16893b04183e75a17e801e; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWFlMmM3Nzc1Yzc1YjIwMjhhOTJmNzg2ZTZmYWEzZjc4BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMVk5MTJicnczQVBHZzNUZm9GdUtBdDVLLzh3ei93RzlicHpxQTZzcGFxNHM9BjsARg%3D%3D--f5b4d168a089b0137737d0be3f03e8677799eba2;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"f4e9b89a4a782ab1fd4f4e4839aebdb1"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 9ab6df264173060e3db642be225c683b
      X-Runtime:
      - '0.066861'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8a4fb654acd-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:18 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1737628/lider-de-vendas-produtos-financeiros-maringa-pr
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:19 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '57'
      Set-Cookie:
      - __cfduid=de27a90b8dbd80c92e243eb810afc9e731533172819; expires=Fri, 02-Aug-19
        01:20:19 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=39a5ab7c3cd6ec19bb5a76643dc6985f853f39f9e01c00c993; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWVmOThiMGI5YWI2MjBjN2M0ZjliYmJkZWYxNzJiMDYxBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMXp6SHp4VkIxcmpmeU5XemlZcXdIUHRVZlExVngvamRPNlBvdjQwS0hxSjA9BjsARg%3D%3D--d23a1b2e9fe1dc134ec7fdfaf620db1c89481d6e;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"e4f45943ed4332a1fbe521ef74660b57"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - ba0c789d7729aadccf6bbffdb6df13b5
      X-Runtime:
      - '0.052149'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8a70c334ad9-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:19 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1737618/lider-de-vendas-produtos-financeiros-porto-alegre-rs
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:19 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '57'
      Set-Cookie:
      - __cfduid=d5d02488b19d4694c95f06743f334e8901533172819; expires=Fri, 02-Aug-19
        01:20:19 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=2151abbac06d1fb7dc7ee00683b9eb86a8d35abdafbd84aa27; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWI5MWZiMTdjZjhmYWM2N2JhNDEyM2IzZDNhMzBjNDA4BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMUcyUXlmSFF1NnBlTlFDSGFQbVZUT3RkcGR2MUxzcXNtNTQ4VWNhUk1YZDQ9BjsARg%3D%3D--fc760fec0f734a2738f2ed4c84bea16f53746dbb;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"ed49ac8cc440f2a043914ea7f34a8649"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - d01c87d2feb643fffe9d05499b116005
      X-Runtime:
      - '0.037606'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8a9596d4af1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:19 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1737620/lider-de-vendas-produtos-financeiros-florianopolis-sc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:20 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '56'
      Set-Cookie:
      - __cfduid=d8b592dc60f54a973d04ad062c92190bf1533172819; expires=Fri, 02-Aug-19
        01:20:19 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=8bb005d13bf3a345931382a3c7b2b20ac35f708c8f1ad6b7a6; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTFkMGI2ZGJjZjk0NDI5MTUzZTI3ZjAzYmIzM2I5MjFlBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMUlCKzZiUFQ4MExVaWJUekVjUGg2WkdsejNsYXNDQU0vZTdoMysxMFQxSEE9BjsARg%3D%3D--df75dd761f7a297cba1963490624b3f1d7bfcab5;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"a6dbc54a9df7dd324093ef9abb22bfed"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 387cad0d75010e2a97061b1db8ba29a6
      X-Runtime:
      - '0.095122'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8ab5c814be1-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:20 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1733703/lider-de-visual-merchandising-vm-florianopolis-sc
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:20 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '56'
      Set-Cookie:
      - __cfduid=dc1b6810a728040a2838a729157adebdc1533172820; expires=Fri, 02-Aug-19
        01:20:20 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=2ba7ae0f3b7a7e87e51ff0f7a5a0682387e9d27a6ce5b5ce8f; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJWYzYjI2NjY3Zjg5MTIzMzU4OWM5NDJlMmFmODY1ZjBiBjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMWcvVlB4RVBSNGsreUl3QnpSYjBZUzNLRlBGOHNPMmkreUJaWjVNT0M4ZG89BjsARg%3D%3D--261298da7a2ec8942a4d901b8c244b041e6fb81a;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"9e33c1ef1d5caad97dbbeb6de5ef93d4"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - 4240c3f84963e61a2aed88bb8c97eb1e
      X-Runtime:
      - '0.093595'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8ad9cb4815c-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9InB0LWJyIj4KPGhlYWQ+CiAgPHRpdGxlPlZhZ2EgTMOtZGVyIGRlIFZpc3VhbCBNZXJjaGFuZGlzaW5nIChWTSkgICAtIEZsb3JpYW7Ds3BvbGlzIC0gU0MgLSBDJmFtcDtBIE1vZGFzICh2MTczMzcwMykgfCBWQUdBUy5jb20uYnI8L3RpdGxlPgogIDxsaW5rIGhyZWY9J2h0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzP2ZhbWlseT1MYXRvOjQwMCw3MDAsNDAwaXRhbGljfFRpdGlsbGl1bStXZWI6NDAwLDYwMCw0MDBpdGFsaWMsMzAwLDcwMHxPcGVuK1NhbnMnIHJlbD0nc3R5bGVzaGVldCcgdHlwZT0ndGV4dC9jc3MnPgogIDxsaW5rIGhyZWY9Ii9hc3NldHMvcGVzc29hcy00MGUwYmY4YzliMTI3YzFjYzI4ODhhNGI5OGU4MjNkNS5jc3MiIG1lZGlhPSJzY3JlZW4iIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIC8+CgogIDxtZXRhIGh0dHAtZXF1aXY9IkNvbnRlbnQtVHlwZSIgY29udGVudD0idGV4dC9odG1sOyBjaGFyc2V0PXV0Zi04Ii8+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij53aW5kb3cuTlJFVU18fChOUkVVTT17fSk7TlJFVU0uaW5mbz17ImJlYWNvbiI6ImJhbS5uci1kYXRhLm5ldCIsImVycm9yQmVhY29uIjoiYmFtLm5yLWRhdGEubmV0IiwibGljZW5zZUtleSI6ImI5MjEyMTY1ZDgiLCJhcHBsaWNhdGlvbklEIjoiNjg5MTY1NzAiLCJ0cmFuc2FjdGlvbk5hbWUiOiJJRjFaRVVkZUNnb0hRQmxEV0FSVFJFcEZWQlVYRjF0RlZFcE1RVjhLUWc9PSIsInF1ZXVlVGltZSI6MTQ0LCJhcHBsaWNhdGlvblRpbWUiOjk4LCJhZ2VudCI6IiJ9PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij53aW5kb3cuTlJFVU18fChOUkVVTT17fSksX19ucl9yZXF1aXJlPWZ1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKG4pe2lmKCF0W25dKXt2YXIgbz10W25dPXtleHBvcnRzOnt9fTtlW25dWzBdLmNhbGwoby5leHBvcnRzLGZ1bmN0aW9uKHQpe3ZhciBvPWVbbl1bMV1bdF07cmV0dXJuIHIob3x8dCl9LG8sby5leHBvcnRzKX1yZXR1cm4gdFtuXS5leHBvcnRzfWlmKCJmdW5jdGlvbiI9PXR5cGVvZiBfX25yX3JlcXVpcmUpcmV0dXJuIF9fbnJfcmVxdWlyZTtmb3IodmFyIG89MDtvPG4ubGVuZ3RoO28rKylyKG5bb10pO3JldHVybiByfSh7MTpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoKXt9ZnVuY3Rpb24gbyhlLHQsbil7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIGkoZSxbZi5ub3coKV0uY29uY2F0KHUoYXJndW1lbnRzKSksdD9udWxsOnRoaXMsbiksdD92b2lkIDA6dGhpc319dmFyIGk9ZSgiaGFuZGxlIiksYT1lKDIpLHU9ZSgzKSxjPWUoImVlIikuZ2V0KCJ0cmFjZXIiKSxmPWUoImxvYWRlciIpLHM9TlJFVU07InVuZGVmaW5lZCI9PXR5cGVvZiB3aW5kb3cubmV3cmVsaWMmJihuZXdyZWxpYz1zKTt2YXIgcD1bInNldFBhZ2VWaWV3TmFtZSIsInNldEN1c3RvbUF0dHJpYnV0ZSIsInNldEVycm9ySGFuZGxlciIsImZpbmlzaGVkIiwiYWRkVG9UcmFjZSIsImlubGluZUhpdCIsImFkZFJlbGVhc2UiXSxkPSJhcGktIixsPWQrIml4bi0iO2EocCxmdW5jdGlvbihlLHQpe3NbdF09byhkK3QsITAsImFwaSIpfSkscy5hZGRQYWdlQWN0aW9uPW8oZCsiYWRkUGFnZUFjdGlvbiIsITApLHMuc2V0Q3VycmVudFJvdXRlTmFtZT1vKGQrInJvdXRlTmFtZSIsITApLHQuZXhwb3J0cz1uZXdyZWxpYyxzLmludGVyYWN0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyByKS5nZXQoKX07dmFyIG09ci5wcm90b3R5cGU9e2NyZWF0ZVRyYWNlcjpmdW5jdGlvbihlLHQpe3ZhciBuPXt9LHI9dGhpcyxvPSJmdW5jdGlvbiI9PXR5cGVvZiB0O3JldHVybiBpKGwrInRyYWNlciIsW2Yubm93KCksZSxuXSxyKSxmdW5jdGlvbigpe2lmKGMuZW1pdCgobz8iIjoibm8tIikrImZuLXN0YXJ0IixbZi5ub3coKSxyLG9dLG4pLG8pdHJ5e3JldHVybiB0LmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaChlKXt0aHJvdyBjLmVtaXQoImZuLWVyciIsW2FyZ3VtZW50cyx0aGlzLGVdLG4pLGV9ZmluYWxseXtjLmVtaXQoImZuLWVuZCIsW2Yubm93KCldLG4pfX19fTthKCJzZXROYW1lLHNldEF0dHJpYnV0ZSxzYXZlLGlnbm9yZSxvbkVuZCxnZXRDb250ZXh0LGVuZCxnZXQiLnNwbGl0KCIsIiksZnVuY3Rpb24oZSx0KXttW3RdPW8obCt0KX0pLG5ld3JlbGljLm5vdGljZUVycm9yPWZ1bmN0aW9uKGUpeyJzdHJpbmciPT10eXBlb2YgZSYmKGU9bmV3IEVycm9yKGUpKSxpKCJlcnIiLFtlLGYubm93KCldKX19LHt9XSwyOltmdW5jdGlvbihlLHQsbil7ZnVuY3Rpb24gcihlLHQpe3ZhciBuPVtdLHI9IiIsaT0wO2ZvcihyIGluIGUpby5jYWxsKGUscikmJihuW2ldPXQocixlW3JdKSxpKz0xKTtyZXR1cm4gbn12YXIgbz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5O3QuZXhwb3J0cz1yfSx7fV0sMzpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe3R8fCh0PTApLCJ1bmRlZmluZWQiPT10eXBlb2YgbiYmKG49ZT9lLmxlbmd0aDowKTtmb3IodmFyIHI9LTEsbz1uLXR8fDAsaT1BcnJheShvPDA/MDpvKTsrK3I8bzspaVtyXT1lW3Qrcl07cmV0dXJuIGl9dC5leHBvcnRzPXJ9LHt9XSw0OltmdW5jdGlvbihlLHQsbil7dC5leHBvcnRzPXtleGlzdHM6InVuZGVmaW5lZCIhPXR5cGVvZiB3aW5kb3cucGVyZm9ybWFuY2UmJndpbmRvdy5wZXJmb3JtYW5jZS50aW1pbmcmJiJ1bmRlZmluZWQiIT10eXBlb2Ygd2luZG93LnBlcmZvcm1hbmNlLnRpbWluZy5uYXZpZ2F0aW9uU3RhcnR9fSx7fV0sZWU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7fWZ1bmN0aW9uIG8oZSl7ZnVuY3Rpb24gdChlKXtyZXR1cm4gZSYmZSBpbnN0YW5jZW9mIHI/ZTplP2MoZSx1LGkpOmkoKX1mdW5jdGlvbiBuKG4scixvLGkpe2lmKCFkLmFib3J0ZWR8fGkpe2UmJmUobixyLG8pO2Zvcih2YXIgYT10KG8pLHU9bShuKSxjPXUubGVuZ3RoLGY9MDtmPGM7ZisrKXVbZl0uYXBwbHkoYSxyKTt2YXIgcD1zW3lbbl1dO3JldHVybiBwJiZwLnB1c2goW2IsbixyLGFdKSxhfX1mdW5jdGlvbiBsKGUsdCl7dltlXT1tKGUpLmNvbmNhdCh0KX1mdW5jdGlvbiBtKGUpe3JldHVybiB2W2VdfHxbXX1mdW5jdGlvbiB3KGUpe3JldHVybiBwW2VdPXBbZV18fG8obil9ZnVuY3Rpb24gZyhlLHQpe2YoZSxmdW5jdGlvbihlLG4pe3Q9dHx8ImZlYXR1cmUiLHlbbl09dCx0IGluIHN8fChzW3RdPVtdKX0pfXZhciB2PXt9LHk9e30sYj17b246bCxlbWl0Om4sZ2V0OncsbGlzdGVuZXJzOm0sY29udGV4dDp0LGJ1ZmZlcjpnLGFib3J0OmEsYWJvcnRlZDohMX07cmV0dXJuIGJ9ZnVuY3Rpb24gaSgpe3JldHVybiBuZXcgcn1mdW5jdGlvbiBhKCl7KHMuYXBpfHxzLmZlYXR1cmUpJiYoZC5hYm9ydGVkPSEwLHM9ZC5iYWNrbG9nPXt9KX12YXIgdT0ibnJAY29udGV4dCIsYz1lKCJnb3MiKSxmPWUoMikscz17fSxwPXt9LGQ9dC5leHBvcnRzPW8oKTtkLmJhY2tsb2c9c30se31dLGdvczpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSx0LG4pe2lmKG8uY2FsbChlLHQpKXJldHVybiBlW3RdO3ZhciByPW4oKTtpZihPYmplY3QuZGVmaW5lUHJvcGVydHkmJk9iamVjdC5rZXlzKXRyeXtyZXR1cm4gT2JqZWN0LmRlZmluZVByb3BlcnR5KGUsdCx7dmFsdWU6cix3cml0YWJsZTohMCxlbnVtZXJhYmxlOiExfSkscn1jYXRjaChpKXt9cmV0dXJuIGVbdF09cixyfXZhciBvPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dC5leHBvcnRzPXJ9LHt9XSxoYW5kbGU6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKGUsdCxuLHIpe28uYnVmZmVyKFtlXSxyKSxvLmVtaXQoZSx0LG4pfXZhciBvPWUoImVlIikuZ2V0KCJoYW5kbGUiKTt0LmV4cG9ydHM9cixyLmVlPW99LHt9XSxpZDpbZnVuY3Rpb24oZSx0LG4pe2Z1bmN0aW9uIHIoZSl7dmFyIHQ9dHlwZW9mIGU7cmV0dXJuIWV8fCJvYmplY3QiIT09dCYmImZ1bmN0aW9uIiE9PXQ/LTE6ZT09PXdpbmRvdz8wOmEoZSxpLGZ1bmN0aW9uKCl7cmV0dXJuIG8rK30pfXZhciBvPTEsaT0ibnJAaWQiLGE9ZSgiZ29zIik7dC5leHBvcnRzPXJ9LHt9XSxsb2FkZXI6W2Z1bmN0aW9uKGUsdCxuKXtmdW5jdGlvbiByKCl7aWYoIXgrKyl7dmFyIGU9aC5pbmZvPU5SRVVNLmluZm8sdD1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKVswXTtpZihzZXRUaW1lb3V0KHMuYWJvcnQsM2U0KSwhKGUmJmUubGljZW5zZUtleSYmZS5hcHBsaWNhdGlvbklEJiZ0KSlyZXR1cm4gcy5hYm9ydCgpO2YoeSxmdW5jdGlvbih0LG4pe2VbdF18fChlW3RdPW4pfSksYygibWFyayIsWyJvbmxvYWQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIik7dmFyIG49ZC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTtuLnNyYz0iaHR0cHM6Ly8iK2UuYWdlbnQsdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZShuLHQpfX1mdW5jdGlvbiBvKCl7ImNvbXBsZXRlIj09PWQucmVhZHlTdGF0ZSYmaSgpfWZ1bmN0aW9uIGkoKXtjKCJtYXJrIixbImRvbUNvbnRlbnQiLGEoKStoLm9mZnNldF0sbnVsbCwiYXBpIil9ZnVuY3Rpb24gYSgpe3JldHVybiBFLmV4aXN0cyYmcGVyZm9ybWFuY2Uubm93P01hdGgucm91bmQocGVyZm9ybWFuY2Uubm93KCkpOih1PU1hdGgubWF4KChuZXcgRGF0ZSkuZ2V0VGltZSgpLHUpKS1oLm9mZnNldH12YXIgdT0obmV3IERhdGUpLmdldFRpbWUoKSxjPWUoImhhbmRsZSIpLGY9ZSgyKSxzPWUoImVlIikscD13aW5kb3csZD1wLmRvY3VtZW50LGw9ImFkZEV2ZW50TGlzdGVuZXIiLG09ImF0dGFjaEV2ZW50Iix3PXAuWE1MSHR0cFJlcXVlc3QsZz13JiZ3LnByb3RvdHlwZTtOUkVVTS5vPXtTVDpzZXRUaW1lb3V0LFNJOnAuc2V0SW1tZWRpYXRlLENUOmNsZWFyVGltZW91dCxYSFI6dyxSRVE6cC5SZXF1ZXN0LEVWOnAuRXZlbnQsUFI6cC5Qcm9taXNlLE1POnAuTXV0YXRpb25PYnNlcnZlcn07dmFyIHY9IiIrbG9jYXRpb24seT17YmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGVycm9yQmVhY29uOiJiYW0ubnItZGF0YS5uZXQiLGFnZW50OiJqcy1hZ2VudC5uZXdyZWxpYy5jb20vbnItMTA3MS5taW4uanMifSxiPXcmJmcmJmdbbF0mJiEvQ3JpT1MvLnRlc3QobmF2aWdhdG9yLnVzZXJBZ2VudCksaD10LmV4cG9ydHM9e29mZnNldDp1LG5vdzphLG9yaWdpbjp2LGZlYXR1cmVzOnt9LHhocldyYXBwYWJsZTpifTtlKDEpLGRbbF0/KGRbbF0oIkRPTUNvbnRlbnRMb2FkZWQiLGksITEpLHBbbF0oImxvYWQiLHIsITEpKTooZFttXSgib25yZWFkeXN0YXRlY2hhbmdlIixvKSxwW21dKCJvbmxvYWQiLHIpKSxjKCJtYXJrIixbImZpcnN0Ynl0ZSIsdV0sbnVsbCwiYXBpIik7dmFyIHg9MCxFPWUoNCl9LHt9XX0se30sWyJsb2FkZXIiXSk7PC9zY3JpcHQ+CiAgPG1ldGEgY29udGVudD0iYXV0aGVudGljaXR5X3Rva2VuIiBuYW1lPSJjc3JmLXBhcmFtIiAvPgo8bWV0YSBjb250ZW50PSJnL1ZQeEVQUjRrK3lJd0J6UmIwWVMzS0ZQRjhzTzJpK3lCWlo1TU9DOGRvPSIgbmFtZT0iY3NyZi10b2tlbiIgLz4KICA8bWV0YSBjaGFyc2V0PSJVVEYtOCIvPgogIDxtZXRhIG5hbWU9ImtleXdvcmRzIiBjb250ZW50PSJFbXByZWdvcywgVmFnYXMsIEN1cnJpY3VsdW0sIENhcnJlaXJhLCBDdXJyw61jdWxvLCBMw61kZXIgZGUgVmlzdWFsIE1lcmNoYW5kaXNpbmcgKFZNKSAgIC0gRmxvcmlhbsOzcG9saXMgLSBTQywgQyZhbXA7QSBNb2RhcywgRmxvcmlhbsOzcG9saXMiLz4KICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iVmFnYSBkZSBFbXByZWdvIHBhcmEgTMOtZGVyIGRlIFZpc3VhbCBNZXJjaGFuZGlzaW5nIChWTSkgICAtIEZsb3JpYW7Ds3BvbGlzIC0gU0MgZW0gRmxvcmlhbsOzcG9saXMgbmEgQyZhbXA7QSBNb2Rhcy4gQ2FuZGlkYXRlLXNlIGdyYXR1aXRhbWVudGUgbm8gVkFHQVMuY29tLmJyIi8+CgogIDxsaW5rIHJlbD0iaWNvbiIgdHlwZT0iaW1hZ2UvcG5nIiBocmVmPSIvYXNzZXRzL211bmRvcy9mYXZpY29uX3AtM2VhMjg2NDkyOTczNDBkOWEzMjY1ZmNmOWYxOWRhZTUuaWNvIi8+CiAgPGxpbmsgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBocmVmPSIvYXNzZXRzL211bmRvcy9hcHBsZS10b3VjaC1pY29uLWJmNDQyODVkMTYzYTM0MjBkZWZjMDQzMDMxMTAzYTY2LnBuZyIvPgogIAogICAgPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHBzOi8vd3d3LnZhZ2FzLmNvbS5ici92YWdhcy92MTczMzcwMy9saWRlci1kZS12aXN1YWwtbWVyY2hhbmRpc2luZy12bS1mbG9yaWFub3BvbGlzLXNjIi8+CgogICAgICAKICA8bWV0YSBodHRwLWVxdWl2PSJDYWNoZS1Db250cm9sIiBjb250ZW50PSJuby1jYWNoZSwgbm8tc3RvcmUsIG11c3QtcmV2YWxpZGF0ZSIgLz4KICA8bWV0YSBodHRwLWVxdWl2PSJQcmFnbWEiIGNvbnRlbnQ9Im5vLWNhY2hlIiAvPgogIDxtZXRhIGh0dHAtZXF1aXY9IkV4cGlyZXMiIGNvbnRlbnQ9IjAiIC8+CgogICAgICA8bWV0YSBwcm9wZXJ0eT0ib2c6dGl0bGUiIGNvbnRlbnQ9IkzDrWRlciBkZSBWaXN1YWwgTWVyY2hhbmRpc2luZyAoVk0pICAgLSBGbG9yaWFuw7Nwb2xpcyAtIFNDIC0gQXV4aWxpYXIvT3BlcmFjaW9uYWwgKHYxNzMzNzAzKSIvPgogIDxtZXRhIHByb3BlcnR5PSJvZzp0eXBlIiBjb250ZW50PSJjb21wYW55Ii8+CiAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cDovL3d3dy52YWdhcy5jb20uYnIvdmFnYXMvdjE3MzM3MDMvbGlkZXItZGUtdmlzdWFsLW1lcmNoYW5kaXNpbmctdm0tZmxvcmlhbm9wb2xpcy1zYyIvPgogIDxtZXRhIHByb3BlcnR5PSJvZzppbWFnZSIgY29udGVudD0iaHR0cDovL3d3dy52YWdhcy5jb20uYnIvYXNzZXRzL3NvY2lhbC9sb2dvX29wZW5fZ3JhcGhfYmlnLWI2M2JkNjk5ZWRlNDllNDU1NGQ3OTAyYTM3OWU5ZmI2LmpwZyIvPgogIDxtZXRhIHByb3BlcnR5PSJvZzpzaXRlX25hbWUiIGNvbnRlbnQ9Ind3dy5WQUdBUy5jb20uYnIiLz4KICA8bWV0YSBwcm9wZXJ0eT0iZmI6YXBwX2lkIiBjb250ZW50PSIzMDk3NjY3NDU3NjM0ODkiLz4KCgogIDwhLS1baWYgbHQgSUUgOV0+CiAgICA8c2NyaXB0IHNyYz0iL2Fzc2V0cy9odG1sNS0xMzIxNGYwOGZlZTUxYjMzYjkxYjcwNDA5YjA4NDRjZi5qcyIgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij48L3NjcmlwdD4KICA8IVtlbmRpZl0tLT4KICAgICAgPCEtLSBWYWdhcy5jb20gQmVnaW4gVGFpbFRhcmdldCBUYWcgTWFuYWdlciAtLT4KPHNjcmlwdD4KICAoZnVuY3Rpb24oaSkgewogICAgdmFyIHRzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7CiAgICB0cy50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7CiAgICB0cy5hc3luYyA9IHRydWU7CiAgICB0cy5zcmMgPSAoJ2h0dHBzOicgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wgPyAnaHR0cHM6Ly8nIDogJ2h0dHA6Ly8nKSArICd0YWdzLnQudGFpbHRhcmdldC5jb20vdDNtLmpzP2k9JyArIGk7CiAgICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdzY3JpcHQnKVswXTsKICAgIHMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodHMsIHMpOwogIH0pKCdUVC0xMDIzNS0wL0NULTMwJyk7Cjwvc2NyaXB0Pgo8IS0tIFZhZ2FzLmNvbSBFbmQgVGFpbFRhcmdldCBUYWcgTWFuYWdlciAtLT4KCjwhLS0gUHJlYmlkIENvbmZpZyBTZWN0aW9uIEVORCAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgdmFyIFBSRUJJRF9USU1FT1VUID0gMjAwMDsKCiAgICB2YXIgYWRVbml0cyA9IFtdOwogICAgICAgICAgYWRVbml0cy5wdXNoKAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgY29kZTogInZhZ2FzX2Rlc2NyaWNhb19zcXVhcmVfMzAweDI1MCIsCiAgICAgICAgICAgICAgc2l6ZXM6IFszMDAsIDI1MF0sCiAgICAgICAgICAgICAgYmlkczogW3siYmlkZGVyIjoiYXBwbmV4dXMiLCJwYXJhbXMiOnsicGxhY2VtZW50SWQiOiIxMzAyMDkwOCJ9fSx7ImJpZGRlciI6InJ1Ymljb24iLCJwYXJhbXMiOnsiYWNjb3VudElkIjoiMTU0NTIiLCJzaXRlSWQiOiI5Nzc1MiIsInpvbmVJZCI6IjQ1ODc0MiIsInNpemVzIjpbMTVdfX0seyJiaWRkZXIiOiJjcml0ZW8iLCJwYXJhbXMiOnsiem9uZUlkIjoiMTExNDE1NiJ9fV0KICAgICAgICAgICAgfQogICAgICAgICAgKTsKICAgICAgICAgIGFkVW5pdHMucHVzaCgKICAgICAgICAgICAgewogICAgICAgICAgICAgIGNvZGU6ICJ2YWdhc19kZXNjcmljYW9faGFsZnBhZ2VfMzAweDYwMCIsCiAgICAgICAgICAgICAgc2l6ZXM6IFszMDAsIDYwMF0sCiAgICAgICAgICAgICAgYmlkczogW3siYmlkZGVyIjoiYXBwbmV4dXMiLCJwYXJhbXMiOnsicGxhY2VtZW50SWQiOiIxMzAyMDkxNyJ9fSx7ImJpZGRlciI6InJ1Ymljb24iLCJwYXJhbXMiOnsiYWNjb3VudElkIjoiMTU0NTIiLCJzaXRlSWQiOiI5Nzc1MiIsInpvbmVJZCI6IjQ1ODc0MiIsInNpemVzIjpbMTBdfX0seyJiaWRkZXIiOiJjcml0ZW8iLCJwYXJhbXMiOnsiem9uZUlkIjoiMTExNDE1NyJ9fV0KICAgICAgICAgICAgfQogICAgICAgICAgKTsKICAgIAogICAgdmFyIHBianMgPSBwYmpzIHx8IHt9OwogICAgcGJqcy5xdWUgPSBwYmpzLnF1ZSB8fCBbXTsKCiAgICAoZnVuY3Rpb24oKSB7CiAgICAgICAgdmFyIGQgPSBkb2N1bWVudCwKICAgICAgICAgICAgZSA9IGQuY3JlYXRlRWxlbWVudCgnc2NyaXB0JyksCiAgICAgICAgICAgIHAgPSBkLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07CiAgICAgICAgZS50eXBlID0gJ3RleHQvamF2YXNjcmlwdCc7CiAgICAgICAgZS5hc3luYyA9IHRydWU7CiAgICAgICAgZS5zcmMgPSAnL3NjcmlwdHMvcHVibGljaWRhZGUvcHJlYmlkX3dpdGhfY3VycmVuY3kuanMnOwogICAgICAgIHAuaW5zZXJ0QmVmb3JlKGUsIHAuZmlyc3RDaGlsZCk7CiAgICB9KSgpOwoKICAgIHBianMucXVlLnB1c2goZnVuY3Rpb24oKSB7CiAgICAgICAgY29uc3QgY3VzdG9tR3JhbnVsYXJpdHkgPSB7CiAgICAgICAgICAgICdidWNrZXRzJzogW3snbWluJzogMCwgJ21heCc6IDUwLCAnaW5jcmVtZW50JzogMC4wMSB9XQogICAgICAgIH07CiAgICAgICAgcGJqcy5zZXRDb25maWcoewogICAgICAgICAgICBwcmljZUdyYW51bGFyaXR5OiBjdXN0b21HcmFudWxhcml0eSwKICAgICAgICAgICAgY3VycmVuY3k6IHsKICAgICAgICAgICAgICAgIGFkU2VydmVyQ3VycmVuY3k6ICJCUkwiLAogICAgICAgICAgICAgICAgZ3JhbnVsYXJpdHlNdWx0aXBsaWVyOiAxLAogICAgICAgICAgICAgICAgY29udmVyc2lvblJhdGVGaWxlOiAiaHR0cHM6Ly9jdXJyZW5jeS5wcmViaWQub3JnL2xhdGVzdC5qc29uIgogICAgICAgICAgICB9CiAgICAgICAgfSkKICAgIH0pOwo8L3NjcmlwdD4KPCEtLSBQcmViaWQgQ29uZmlnIFNlY3Rpb24gRU5EIC0tPgoKPCEtLSBQcmViaWQgQm9pbGVycGxhdGUgU2VjdGlvbiBTVEFSVC4gLS0+CjxzY3JpcHQ+CiAgdmFyIGdvb2dsZXRhZyA9IGdvb2dsZXRhZyB8fCB7fTsKICBnb29nbGV0YWcuY21kID0gZ29vZ2xldGFnLmNtZCB8fCBbXTsKICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKSB7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5kaXNhYmxlSW5pdGlhbExvYWQoKTsKICB9KTsKCiAgcGJqcy5xdWUucHVzaChmdW5jdGlvbigpIHsKICAgICAgcGJqcy5hZGRBZFVuaXRzKGFkVW5pdHMpOwogICAgICBwYmpzLnJlcXVlc3RCaWRzKHsKICAgICAgICAgIGJpZHNCYWNrSGFuZGxlcjogc2VuZEFkc2VydmVyUmVxdWVzdAogICAgICB9KTsKICB9KTsKCiAgZnVuY3Rpb24gc2VuZEFkc2VydmVyUmVxdWVzdCgpIHsKICAgICAgaWYgKHBianMuYWRzZXJ2ZXJSZXF1ZXN0U2VudCkgcmV0dXJuOwogICAgICBwYmpzLmFkc2VydmVyUmVxdWVzdFNlbnQgPSB0cnVlOwogICAgICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKSB7CiAgICAgICAgICBwYmpzLnF1ZS5wdXNoKGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgIHBianMuc2V0VGFyZ2V0aW5nRm9yR1BUQXN5bmMoKTsKICAgICAgICAgICAgICBnb29nbGV0YWcucHViYWRzKCkucmVmcmVzaCgpOwogICAgICAgICAgfSk7CiAgICAgIH0pOwogIH0KCiAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgc2VuZEFkc2VydmVyUmVxdWVzdCgpOwogIH0sIFBSRUJJRF9USU1FT1VUKTsKCjwvc2NyaXB0Pgo8IS0tIFByZWJpZCBCb2lsZXJwbGF0ZSBTZWN0aW9uIEVORCAtLT4KCjwhLS0gVmFnYXMuY29tIEJlZ2luIEdvb2dsZSBQdWJsaXNoZXIgVGFnIC0tPgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgdmFyIGdldFRhaWxUYXJnZXRQYXJhbSA9IGZ1bmN0aW9uKGEpIHsKICAgIHZhciB0dENvb2tpZU5hbWUgPSAiX3R0ZG1wIjsKICAgIGlmICghd2luZG93Ll90dHByb2ZpbGVzY2FjaGUpIHsKICAgICAgd2luZG93Ll90dHByb2ZpbGVzY2FjaGUgPSB7fTsKICAgICAgdHJ5IHsKICAgICAgICB2YXIgYyA9IGRvY3VtZW50LmNvb2tpZS5tYXRjaCgnKF58OylcXHMqJyArIHR0Q29va2llTmFtZSArICdcXHMqPVxccyooW147XSspJyk7CiAgICAgICAgdmFyIGQgPSBjID8gYy5wb3AoKS5zcGxpdCgnfCcpIDogW107CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBkLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICB2YXIga3YgPSBkW2ldLnNwbGl0KCI6Iik7CiAgICAgICAgICBpZiAoa3ZbMV0gJiYga3ZbMV0uaW5kZXhPZigiLCIpID4gMCkgewogICAgICAgICAgICAgIHdpbmRvdy5fdHRwcm9maWxlc2NhY2hlW2t2WzBdXSA9IGt2WzFdLnNwbGl0KCIsIik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHdpbmRvdy5fdHRwcm9maWxlc2NhY2hlW2t2WzBdXSA9IGt2WzFdOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZSkgewogICAgICB9CiAgICB9CiAgICByZXR1cm4gd2luZG93Ll90dHByb2ZpbGVzY2FjaGVbYV0gPyB3aW5kb3cuX3R0cHJvZmlsZXNjYWNoZVthXSA6ICduYSc7CiAgfTsKCiAgKGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIGdhZHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTsKICAgICAgZ2Fkcy5hc3luYyA9IHRydWU7CiAgICAgIGdhZHMudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnOwogICAgICB2YXIgdXNlU1NMID0gJ2h0dHBzOicgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2w7CiAgICAgIGdhZHMuc3JjID0gKHVzZVNTTCA/ICdodHRwczonIDogJ2h0dHA6JykgKwogICAgICAgICAgICAgICcvL3d3dy5nb29nbGV0YWdzZXJ2aWNlcy5jb20vdGFnL2pzL2dwdC5qcyc7CiAgICAgIHZhciBub2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ3NjcmlwdCcpWzBdOwogICAgICBub2RlLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGdhZHMsIG5vZGUpOwogIH0pKCk7CgogIGdvb2dsZXRhZy5jbWQucHVzaChmdW5jdGlvbiAoKSB7CiAgICAgICAgZ29vZ2xldGFnLmRlZmluZVNsb3QoJy8xNzIxODM2L3ZhZ2FzX2Rlc2NyaWNhb19zcXVhcmVfMzAweDI1MCcsIFszMDAsIDI1MF0sICd2YWdhc19kZXNjcmljYW9fc3F1YXJlXzMwMHgyNTAnKS5hZGRTZXJ2aWNlKGdvb2dsZXRhZy5wdWJhZHMoKSk7CiAgICAgICAgZ29vZ2xldGFnLmRlZmluZVNsb3QoJy8xNzIxODM2L3ZhZ2FzX2Rlc2NyaWNhb19oYWxmcGFnZV8zMDB4NjAwJywgWzMwMCwgNjAwXSwgJ3ZhZ2FzX2Rlc2NyaWNhb19oYWxmcGFnZV8zMDB4NjAwJykuYWRkU2VydmljZShnb29nbGV0YWcucHViYWRzKCkpOwoKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRMUycsIGdldFRhaWxUYXJnZXRQYXJhbSgnTFMnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0UycsIGdldFRhaWxUYXJnZXRQYXJhbSgnUycpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRUJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdUJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dEMnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0MnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0VScsIGdldFRhaWxUYXJnZXRQYXJhbSgnVScpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRFJywgZ2V0VGFpbFRhcmdldFBhcmFtKCdFJykpOwogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCd0dEEnLCBnZXRUYWlsVGFyZ2V0UGFyYW0oJ0EnKSk7CiAgICAgIGdvb2dsZXRhZy5wdWJhZHMoKS5zZXRUYXJnZXRpbmcoJ3R0RycsIGdldFRhaWxUYXJnZXRQYXJhbSgnRycpKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLnNldFRhcmdldGluZygndHRDQScsIGdldFRhaWxUYXJnZXRQYXJhbSgnQ0EnKSk7CgogICAgICBnb29nbGV0YWcucHViYWRzKCkuc2V0VGFyZ2V0aW5nKCdxdWVyeScsIFtdKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLmVuYWJsZVNpbmdsZVJlcXVlc3QoKTsKICAgICAgZ29vZ2xldGFnLnB1YmFkcygpLmNvbGxhcHNlRW1wdHlEaXZzKCk7CiAgICAgIGdvb2dsZXRhZy5lbmFibGVTZXJ2aWNlcygpOwogIH0pOwo8L3NjcmlwdD4KPCEtLSBFTkQgVmFnYXMuY29tIEdvb2dsZSBQdWJsaXNoZXIgVGFnIC0tPgoKCiAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9sZCtqc29uIj4KICB7CiAgICAiQGNvbnRleHQiOiAiaHR0cDovL3NjaGVtYS5vcmciLAogICAgIkB0eXBlIjogIldlYlNpdGUiLAogICAgIm5hbWUiOiAiVkFHQVMuY29tIiwKICAgICJhbHRlcm5hdGVOYW1lIjogIlNpdGUgZGUgRW1wcmVnb3MgVkFHQVMuY29tLmJyIiwKICAgICJ1cmwiOiAiaHR0cDovL3d3dy52YWdhcy5jb20uYnIiCiAgfQo8L3NjcmlwdD4KCjwvaGVhZD4KCjxib2R5IGNsYXNzPSJwdC1CUiI+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+Ci8vPCFbQ0RBVEFbCiAgICAgIHZhciBkYXRhTGF5ZXIgPSBbeyJwYWdlIjp7InRlbXBsYXRlIjoiVmFnYSIsIm5hbWUiOiJWYWdhIEzDrWRlciBkZSBWaXN1YWwgTWVyY2hhbmRpc2luZyAoVk0pICAgLSBGbG9yaWFuw7Nwb2xpcyAtIFNDIC0gQyZBIE1vZGFzICh2MTczMzcwMykiLCJhcmVhIjoiY2FuZGlkYXRvcyIsInBhZ2VWZXJzaW9uIjpudWxsLCJwYWdlVmFnYSI6eyJuYW1lIjoiTMOtZGVyIGRlIFZpc3VhbCBNZXJjaGFuZGlzaW5nIChWTSkgICAtIEZsb3JpYW7Ds3BvbGlzIC0gU0MiLCJlbXByZXNhIjoiQyZBIE1vZGFzIiwiY29kZSI6InYxNzMzNzAzIiwicXVhbnRpdHkiOiIiLCJFeHBpcmF0aW9uIjoiMjAxOC8wOC8xNyIsIkxvY2FsIjoiRmxvcmlhbsOzcG9saXMgLyBTQyJ9fSwic2l0ZSI6eyJkb21haW4iOiJ3d3cudmFnYXMuY29tLmJyIiwicHJvZHVjdE5hbWUiOiJWYWdhcyIsImxhbmd1YWdlIjoiUFQtQlIiLCJhcHBsaWNhdGlvbiI6ImRlc2t0b3AifSwic2Vzc2lvbiI6eyJzZWFyY2hTdHJpbmciOm51bGwsInN0YXJ0VGltZSI6bnVsbCwidmlzaXROdW1iZXIiOm51bGwsImxvZ2dlZCI6ZmFsc2V9fV07CgogICAgICBkYXRhTGF5ZXIucHVzaCh7J2V2ZW50JzogJ2RhdGFMYXllcl9sb2FkJ30pOwoKLy9dXT4KPC9zY3JpcHQ+CgogIDwhLS0gR29vZ2xlIFRhZyBNYW5hZ2VyIC0tPgo8c2NyaXB0PihmdW5jdGlvbih3LGQscyxsLGkpe3dbbF09d1tsXXx8W107d1tsXS5wdXNoKHsnZ3RtLnN0YXJ0JzoKbmV3IERhdGUoKS5nZXRUaW1lKCksZXZlbnQ6J2d0bS5qcyd9KTt2YXIgZj1kLmdldEVsZW1lbnRzQnlUYWdOYW1lKHMpWzBdLApqPWQuY3JlYXRlRWxlbWVudChzKSxkbD1sIT0nZGF0YUxheWVyJz8nJmw9JytsOicnO2ouYXN5bmM9dHJ1ZTtqLnNyYz0KJ2h0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL2d0bS5qcz9pZD0nK2krZGw7Zi5wYXJlbnROb2RlLmluc2VydEJlZm9yZShqLGYpOwp9KSh3aW5kb3csZG9jdW1lbnQsJ3NjcmlwdCcsJ2RhdGFMYXllcicsJ0dUTS01MkgyMzgnKTs8L3NjcmlwdD4KPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIC0tPgo8IS0tIEdvb2dsZSBUYWcgTWFuYWdlciAobm9zY3JpcHQpIC0tPgo8bm9zY3JpcHQ+PGlmcmFtZSBzcmM9Imh0dHBzOi8vd3d3Lmdvb2dsZXRhZ21hbmFnZXIuY29tL25zLmh0bWw/aWQ9R1RNLTUySDIzOCIKaGVpZ2h0PSIwIiB3aWR0aD0iMCIgc3R5bGU9ImRpc3BsYXk6bm9uZTt2aXNpYmlsaXR5OmhpZGRlbiI+PC9pZnJhbWU+PC9ub3NjcmlwdD4KPCEtLSBFbmQgR29vZ2xlIFRhZyBNYW5hZ2VyIChub3NjcmlwdCkgLS0+CgoKCjxkaXY+CgogIDxhIGlkPSJza2lwcHkiIGNsYXNzPSJzci1vbmx5IHNyLW9ubHktZm9jdXNhYmxlIiBocmVmPSIjY3YtY29ycG8iPjxkaXYgY2xhc3M9ImNvbnRhaW5lciI+PHNwYW4gY2xhc3M9InNraXBsaW5rLXRleHQiPlB1bGFyIHBhcmEgbyBjb250ZcO6ZG88L3NwYW4+PC9kaXY+PC9hPgo8ZGl2IGlkPSJoZWFkZXJIb2xkZXIiPgoKICAgIDxoZWFkZXIgaWQ9InRvcG8tY2FuZGlkYXRvLWxvZ2FkbyIgY2xhc3M9ImRlc2xvZ2FkbyI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgICAgICAgPGRpdiBpZD0nbG9nb1ZhZ2FzJz48YSBocmVmPSIvIj5WQUdBUy5jb20uYnI8L2E+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbXBvbmVudHMtaG9sZGVyIj4KICAgICAgICAgICAgCTxkaXYgY2xhc3M9ImhlYWRlci1jb21wb25lbnRzIj4KCQkJCQk8ZGl2IGlkPSJwZXNxdWlzYS1tZW51Ij4KICAgIDxhIGhyZWY9IiMiIGlkPSJidG4tcGVzcXVpc2EiPjxzcGFuIGNsYXNzPSJnbHlwaGljb24gZ2x5cGhpY29uLXNlYXJjaCI+PC9zcGFuPjwvYT4KICAgIDxkaXYgaWQ9InBlc3F1aXNhLXN1Ym1lbnUiPgogICAgICAgIDxzcGFuCiAgICAgICAgICAgIHJvbGU9ImJ1dHRvbiIKICAgICAgICAgICAgY2xhc3M9Imljb24tdm9sdGFyLW1vYmlsZS0yNCBidG4tZmVjaGFyLXBlc3F1aXNhIgogICAgICAgICAgICB0YWJJbmRleD17MH0KICAgICAgICA+PC9zcGFuPgogICAgICAgIDxmb3JtIGFjY2VwdC1jaGFyc2V0PSJVVEYtOCIgYWN0aW9uPSIvdmFnYXMvcGVzcXVpc2FzIiBjbGFzcz0iZm9ybXVsYXJpb1Blc3F1aXNhRGVWYWdhc19oZWFkZXIiIG1ldGhvZD0iZ2V0Ij48ZGl2IHN0eWxlPSJtYXJnaW46MDtwYWRkaW5nOjA7ZGlzcGxheTppbmxpbmUiPjxpbnB1dCBuYW1lPSJ1dGY4IiB0eXBlPSJoaWRkZW4iIHZhbHVlPSImI3gyNzEzOyIgLz48L2Rpdj4KICAgICAgICA8aW5wdXQgY2xhc3M9ImNhbXBvUGVzcXVpc2FWYWdhIiBpZD0ic2VhcmNoLWlucHV0LWhlYWRlciIgbmFtZT0icSIgcGxhY2Vob2xkZXI9IkRpZ2l0ZSB1bSBjYXJnbywgZW1wcmVzYSBlL291IGxvY2FsaXphw6fDo28iIHR5cGU9InRleHQiIHZhbHVlPSIiIC8+CiAgICAgICAgPGlucHV0IHR5cGU9InN1Ym1pdCIgdmFsdWU9IiI+CjwvZm9ybT4gICAgPC9kaXY+CjwvZGl2PgoJCQkJCQk8ZGl2IGlkPSJtZW51LWNhbmRpZGF0b3MtaG9sZGVyIj4KCQkJCQkJCTxhIGlkPSJtZW51LWJ0biIgY2xhc3M9Im5hdmJhci10b2dnbGUiIHRpdGxlPSJNZW51IHByaW5jaXBhbCI+CgkJCQkJCQkJPHNwYW4gY2xhc3M9Imljb24tYmFyIj48L3NwYW4+CgkJCQkJCQkJPHNwYW4gY2xhc3M9Imljb24tYmFyIj48L3NwYW4+CgkJCQkJCQkJPHNwYW4gY2xhc3M9Imljb24tYmFyIj48L3NwYW4+CgkJCQkJCQkJPHNwYW4gY2xhc3M9InNyLW9ubHkiPk1lbnU8L3NwYW4+CgkJCQkJCQk8L2E+CgkJCQkJCTwvZGl2PgoJCQkJCQk8ZGl2IGlkPSJtZW51LWNhbmRpZGF0b3MiIGNsYXNzPSJtZW51LWRyb3Bkb3duIj4KCQkJCQkJCTxkaXYgY2xhc3M9Im5hdmVnYWNhby1kZXNsb2dhZGEiPgoJCQkJCQkJCTxhIGhyZWY9Ii9jYWRhc3Ryby1kZS1jdXJyaWN1bG8iPgoJCQkJCQkJCQk8YnV0dG9uIGNsYXNzPSJidG4gYnRuLXByaW1hcnkgY2FkYXN0cm8iPkNhZGFzdHJlIHNldSBjdXJyw61jdWxvPC9idXR0b24+CgkJCQkJCQkJPC9hPgoJCQkJCQkJCTxhIGhyZWY9Ii9sb2dpbi1jYW5kaWRhdG9zIj4KCQkJCQkJCQkJPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lIGJ0bi1vdXRsaW5lLWRhcmsiPkVudHJhcjwvYnV0dG9uPgoJCQkJCQkJCTwvYT4KCQkJCQkJCTwvZGl2PgoJCQkJCQk8L2Rpdj4KCgkJCQkJCTxkaXYgY2xhc3M9Im5hdmVnYWNhby1kZXNsb2dhZGEiPgoJCQkJCQkJPGEgaHJlZj0iL2NhZGFzdHJvLWRlLWN1cnJpY3VsbyI+CgkJCQkJCQkJPGJ1dHRvbiBjbGFzcz0iYnRuIGJ0bi1wcmltYXJ5Ij5DYWRhc3RyZSBzZXUgY3VycsOtY3VsbzwvYnV0dG9uPgoJCQkJCQkJPC9hPgoJCQkJCQkJPGEgaHJlZj0iL2xvZ2luLWNhbmRpZGF0b3MiPgoJCQkJCQkJCTxidXR0b24gY2xhc3M9ImJ0biBidG4tb3V0bGluZSI+RW50cmFyPC9idXR0b24+CgkJCQkJCQk8L2E+CgkJCQkJCTwvZGl2PgoJCQkJPC9kaXY+CgkJCTwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9oZWFkZXI+CgogICAgCjwvZGl2Pgo8ZGl2IGlkPSJub3RpZmljYWNhb1RvcG9Ib2xkZXIiPgogIAo8L2Rpdj4KCjxkaXYgaWQ9Im1lbnUtb3ZlcmxheSI+PC9kaXY+CgoKCiAgPGRpdiBpZD0ibm90aWZpY2FjYW9Ub3BvSG9sZGVyIj4KICAgIAogIDwvZGl2PgoKPC9kaXY+Cgo8ZGl2IGlkPSJ3cmFwcGVyIiBjbGFzcz0iY2xlYXJmaXgiPgogIAoKCgoKPGRpdiBjbGFzcz0iY2VudGVyIj4KICA8ZGl2IGlkPSJjb250ZXVkb1ZhZ2EiPgoKICAgIDxkaXYgaWQ9ImJhcnJhVmFnYSI+CiAgICAgICAgICA8Zm9ybSBhY3Rpb249Ii9jYW5kaWRhdHVyYSIgbWV0aG9kPSJQT1NUIj4KICAgIDxpbnB1dCBpZD0idmFnYV9pZCIgbmFtZT0idmFnYVtpZF0iIHR5cGU9ImhpZGRlbiIgdmFsdWU9IjE3MzM3MDMiIC8+CiAgICA8aW5wdXQgaWQ9ImF1dGhlbnRpY2l0eV90b2tlbiIgbmFtZT0iYXV0aGVudGljaXR5X3Rva2VuIiB0eXBlPSJoaWRkZW4iIHZhbHVlPSJnL1ZQeEVQUjRrK3lJd0J6UmIwWVMzS0ZQRjhzTzJpK3lCWlo1TU9DOGRvPSIgLz4KICAgIDxpbnB1dCBpZD0iZm50IiBuYW1lPSJmbnQiIHR5cGU9ImhpZGRlbiIgdmFsdWU9IjE0IiAvPgogICAgCiAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgaWQ9ImJ0LWNhbmRpZGF0dXJhIiBjbGFzcz0iYnQtY2FuZGlkYXR1cmEgYnRuIGJ0bi1zdWNjZXNzIj4KICAgICAgQ2FuZGlkYXRhci1zZSBhIGVzc2EgdmFnYQogICAgPC9idXR0b24+CiAgPC9mb3JtPgoKICAgIDwvZGl2PgogICAgPHNwYW4+CgogICAgICAKCiAgICAgICAgPGFydGljbGUgY2xhc3M9InZhZ2EiPgogICAgICAgICAgPGhlYWRlcj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtYmFzaWNhcyBjbGVhcmZpeCI+CiAgICAgICAgICAgICAgPGZpZ3VyZSBjbGFzcz0ibG9nb0VtcHJlc2EiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbi1lbXByZXNhLTI0Ij48L3NwYW4+CiAgICAgICAgICAgICAgPC9maWd1cmU+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5mb3JtYWNvZXMtY29tcGxlbWVudGFyZXMiPgogICAgICAgICAgICAgICAgICA8aDEgY2xhc3M9InRpdHVsb1ZhZ2EiPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5vbWUtZG8tY2FyZ28iPgogICAgICAgICAgICAgICAgICAgICAgTMOtZGVyIGRlIFZpc3VhbCBNZXJjaGFuZGlzaW5nIChWTSkgICAtIEZsb3JpYW7Ds3BvbGlzIC0gU0MKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWQtZGEtdmFnYSI+djE3MzM3MDM8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDwvaDE+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlbXByZXNhUXRkVmFnYXMiPgogICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZW1wcmVzYVZhZ2EiPgogICAgICAgICAgICAgICAgICAgIEMmYW1wO0EgTW9kYXMKICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvVmFnYSI+CiAgICAgICAgICAgICAgPHVsIGNsYXNzPSJjbGVhcmZpeCI+CiAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgIDxmaWd1cmUgY2xhc3M9Imljb25lLXNhbGFyaW8iPgogICAgICAgICAgICAgICAgICAgIDxpbWcgYWx0PSLDjWNvbmUgZGUgc2Fsw6FyaW8iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1zYWxhcmlvLTcwNzdlYTllMjY4YzMwMmVjMGIyYzY3MzQxN2IyMTYzLnN2ZyIgLz4KICAgICAgICAgICAgICAgICAgPC9maWd1cmU+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj5Ow6NvIGluZm9ybWFkbzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICA8ZmlndXJlIGNsYXNzPSJpY29uZS1sb2NhbGl6YWNhbyIgdGl0bGU9IkxvY2FsIj4KICAgICAgICAgICAgICAgICAgICA8aW1nIGFsdD0iw41jb25lIGRlIGxvY2FsaXphw6fDo28iIHNyYz0iL2Fzc2V0cy92YWdhcy9wZXNxdWlzYXMvZmVlZHMvaWNvbi1sb2NhbGl6YWNhby05OGM5YjdhN2IxZjQxNjkwZjc1MDZmOWViNGVmMWNlOC5zdmciIC8+CiAgICAgICAgICAgICAgICAgIDwvZmlndXJlPgogICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgICAgICAgICAgICBGbG9yaWFuw7Nwb2xpcwogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICA8ZmlndXJlIGNsYXNzPSJpY29uZS1oaWVyYXJxdWlhIiB0aXRsZT0iTsOtdmVsIGhpZXLDoXJxdWljbyI+CiAgICAgICAgICAgICAgICAgICAgPGltZyBhbHQ9IsONY29uZSBkZSBoaWVyYXJxdWlhIiBzcmM9Ii9hc3NldHMvdmFnYXMvcGVzcXVpc2FzL2ZlZWRzL2ljb24tbml2ZWwtMzEwZGY5YTRiOGFhYTdmMWRhMjA2ZWI2ZmMzYjY2NzYuc3ZnIiAvPgogICAgICAgICAgICAgICAgICA8L2ZpZ3VyZT4KICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgICAgICAgICAgICBBdXhpbGlhci8KICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPgogICAgICAgICAgICAgICAgICAgICAgICBPcGVyYWNpb25hbAogICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2hlYWRlcj4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJ0ZXh0byI+CiAgICAgICAgICAgIDxwPkV4cGVyacOqbmNpYSBjb20gbW9kYSBlIGV4cG9zacOnw6NvIGRlIHByb2R1dG9zIG5hIGxvamEuPC9wPg0KPHA+Vml2w6puY2lhIGNvbSBHZXN0w6NvIGRlIEVxdWlwZXMuPC9wPg0KPHA+U2Vyw6EgcmVzcG9uc8OhdmVsIHBlbGEgYW7DoWxpc2UgZGUgcmVzdWx0YWRvcyBlIHBsYW5lamFtZW50byBkYXMgcm90aW5hcyBkYSBlcXVpcGUsIGFjb21wYW5oYW1lbnRvIGRhIG1vbnRhZ2VtIGRlIHZpdHJpbmVzLCBwcm9kdcOnw6NvIGRlIG1vZGEgbm9zIG1hbmVxdWlucywgZXhlY3XDp8OjbyBkYXMgZXRhcGFzIGRlIGV4cG9zacOnw6NvIGUgY2ljbG8gZGUgdmlkYSBkbyBwcm9kdXRvIHNlZ3VpbmRvIGEgZXN0cmF0w6lnaWEgY29ycG9yYXRpdmEuPC9wPg0KPHA+RGVzZWrDoXZlbCBlbnNpbm8gc3VwZXJpb3IgY3Vyc2FuZG8gKG7Do28gb2JyaWdhdMOzcmlvKS48YnI+IERpc3BvbmliaWxpZGFkZSBwYXJhIHRyYWJhbGhhciBhb3MgZmluYWlzIGRlIHNlbWFuYS48L3A+DQo8cD7CoDwvcD4KICAgICAgICAgIDwvZGl2PgoKCiAgICAgICAgICA8aHI+CgogICAgICAgICAgPGRpdiBjbGFzcz0nYXByZXNlbnRhY2FvLWVtcHJlc2EnPgogICAgICAgICAgICA8aW1nIGFsdD0iTHY5MDYzNjExNDkxMDY1NSIgaWQ9ImxvZ290aXBvLWRhLXZhZ2EiIHNyYz0iaHR0cHM6Ly9zaXRlLnZhZ2FzLmNvbS5ici9pbWcvbG9nb3MvbHY5MDYzNjExNDkxMDY1NS5naWYiIHN0eWxlPSJ0ZXh0LWFsaWduOiBjZW50ZXIiIC8+CiAgICAgICAgICAgICAgPHA+PHA+QSBDJmFtcDtBIMOpIHVtYSBtdWx0aW5hY2lvbmFsIGRlIG9yaWdlbSBob2xhbmRlc2EsIHF1ZSBlc3TDoSBwcmVzZW50ZSBubyBtdW5kbyBow6EgbWFpcyBkZSAxNzUgYW5vcyBlIGjDoSBtYWlzIGRlIDQwIG5vIEJyYXNpbC4gPGJyPjxicj5BcXVpIG5vIEJyYXNpbCwgY29udGFtb3MgY29tIG1haXMgZGUgMTUgbWlsIGZ1bmNpb27DoXJpb3MgZSB0ZW1vcyBtYWlzIGRlIDI3MCBsb2phcywgcHJlc2VudGVzIGVtIHRvZGFzIGFzIGNhcGl0YWlzLCBhbMOpbSBkYSBub3NzYSBsb2phIHZpcnR1YWwgcXVlIGF0ZW5kZSBhIHRvZGFzIGFzIHJlZ2nDtWVzIGRvIHBhw61zLiA8YnI+PGJyPkFsw6ltIGRpc3NvLCBmb21vcyBhIHByaW1laXJhIGVtcHJlc2EgZG8gdmFyZWpvIGRlIG1vZGEgYSBhc3NpbmFyIG8gUGFjdG8gTmFjaW9uYWwgcGVsYSBFcnJhZGljYcOnw6NvIGRvIFRyYWJhbGhvIEVzY3Jhdm8sIGVtIDIwMTAsIHNvbW9zIGEgcHJpbWVpcmEgZG8gc2V0b3IgYSBpbmNsdWlyIG5hcyBjYW1wYW5oYXMgdGVtYXMgcmVsYWNpb25hZG9zIMOgIHN1c3RlbnRhYmlsaWRhZGUgZSB0YW1iw6ltIGZvbW9zIHBpb25laXJvcyBubyBtb25pdG9yYW1lbnRvIGRlIG5vc3NvcyBmb3JuZWNlZG9yZXMgZSBzdWJjb250cmF0YWRvcy4gPGJyPjxicj5MZWdhbCwgbsOpPyA8YnI+PGJyPlR1ZG8gaXNzbywgc2VuZG8gc8OpcmlvcyBzZW0gc2VyIGNoYXRvcyBlIGN1bXByaW5kbyBvIGNvbWJpbmFkbywgZGUgZm9ybWEgc2ltcGxlcyBlIGNvbnNpc3RlbnRlLiBRdWVyIGZhemVyIHBhcnRlIGRvIG5vc3NvIHRpbWU/PC9wPjwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvYXJ0aWNsZT4KICAgICAgCiAgICA8Zm9ybSBhY3Rpb249Ii9jYW5kaWRhdHVyYSIgbWV0aG9kPSJQT1NUIj4KICAgIDxpbnB1dCBpZD0idmFnYV9pZCIgbmFtZT0idmFnYVtpZF0iIHR5cGU9ImhpZGRlbiIgdmFsdWU9IjE3MzM3MDMiIC8+CiAgICA8aW5wdXQgaWQ9ImF1dGhlbnRpY2l0eV90b2tlbiIgbmFtZT0iYXV0aGVudGljaXR5X3Rva2VuIiB0eXBlPSJoaWRkZW4iIHZhbHVlPSJnL1ZQeEVQUjRrK3lJd0J6UmIwWVMzS0ZQRjhzTzJpK3lCWlo1TU9DOGRvPSIgLz4KICAgIDxpbnB1dCBpZD0iZm50IiBuYW1lPSJmbnQiIHR5cGU9ImhpZGRlbiIgdmFsdWU9IjE0IiAvPgogICAgCiAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgaWQ9ImJ0LWNhbmRpZGF0dXJhIiBjbGFzcz0iYnQtY2FuZGlkYXR1cmEgYnRuIGJ0bi1zdWNjZXNzIj4KICAgICAgQ2FuZGlkYXRhci1zZSBhIGVzc2EgdmFnYQogICAgPC9idXR0b24+CiAgPC9mb3JtPgoKCiAgICA8c2VjdGlvbiBpZD0iY29tcGFydGlsaGFyLXZhZ2EiPgogICAgICA8c3BhbiBjbGFzcz0ic2hhcmVUWFQiPkNvbXBhcnRpbGhhciBlc3RhIHZhZ2E6PC9zcGFuPgogICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+dmFyIHN3aXRjaFRvNXggPSB0cnVlOzwvc2NyaXB0PgogICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJodHRwczovL3dzLnNoYXJldGhpcy5jb20vYnV0dG9uL2J1dHRvbnMuanMiPjwvc2NyaXB0PgogICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+c3RMaWdodC5vcHRpb25zKHtwdWJsaXNoZXI6ICJlOTI4OTU5Ni1mMmRjLTQ3N2YtYmE3MC05ZmE3MmNhZDBiNjYiLCBkb05vdEhhc2g6IGZhbHNlLCBkb05vdENvcHk6IGZhbHNlLCBoYXNoQWRkcmVzc0JhcjogZmFsc2V9KTs8L3NjcmlwdD4KICAgICAgPHNwYW4gY2xhc3M9J3N0X2ZhY2Vib29rX2xhcmdlJyBkaXNwbGF5VGV4dD0nRmFjZWJvb2snPjwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9J3N0X3R3aXR0ZXJfbGFyZ2UnIGRpc3BsYXlUZXh0PSdUd2VldCc+PC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0nc3RfbGlua2VkaW5fbGFyZ2UnIGRpc3BsYXlUZXh0PSdMaW5rZWRJbic+PC9zcGFuPgogICAgICA8c3BhbiBjbGFzcz0nc3RfZ29vZ2xlcGx1c19sYXJnZScgZGlzcGxheVRleHQ9J0dvb2dsZSArJz48L3NwYW4+CiAgICAgIDxhIGhyZWY9Ii9tb3ZlX3RvP3NlcnZpY289aW5kaWNhY2FvX2RlX3ZhZ2EmYW1wO2NvZGlnb19kYV92YWdhPTE3MzM3MDMiIGNsYXNzPSJpY29FbWFpbCIgdGl0bGU9IkVtYWlsIj48L2E+CiAgICA8L3NlY3Rpb24+CgogICAgPC9zcGFuPgoKICA8L2Rpdj4KCiAgPGFzaWRlIGlkPSJsYXRlcmFsVmFnYSI+CgogICAgICAKICAgICAgPGRpdiBjbGFzcz0icHVibGljaWRhZGUiPgogIDxzcGFuIGNsYXNzPSJwdWIiPlB1YmxpY2lkYWRlPC9zcGFuPgogIDxkaXYgaWQ9InZhZ2FzX2Rlc2NyaWNhb19zcXVhcmVfMzAweDI1MCI+CiAgCTxzY3JpcHQgdHlwZT0ndGV4dC9qYXZhc2NyaXB0Jz4KICAgICAgZ29vZ2xldGFnLmNtZC5wdXNoKGZ1bmN0aW9uKCkgeyBnb29nbGV0YWcuZGlzcGxheSgndmFnYXNfZGVzY3JpY2FvX3NxdWFyZV8zMDB4MjUwJyk7IH0pOwogICAgPC9zY3JpcHQ+CiAgPC9kaXY+CjwvZGl2PgoKICAgICAgPHNlY3Rpb24gZGF0YS11cmw9Ii92YWdhcy92YWdhc19zaW1pbGFyZXMvdjE3MzM3MDMiIGlkPSJ2YWdhcy1zaW1pbGFyZXMiPjwvc2VjdGlvbj4KICAgICAgPHNjcmlwdCBzcmM9Ii9hc3NldHMvdmFnYXNfc2ltaWxhcmVzL3ZhZ2FzU2ltaWxhcmVzLWExZmY4YjcxMTQ4YmY1ZjFmNWZkMzU5MzY1MjNiMGM0LmpzIiB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPjwvc2NyaXB0PgoKICAgICAgPGRpdiBjbGFzcz0icHVibGljaWRhZGUiPgogIDxzcGFuIGNsYXNzPSJwdWIiPlB1YmxpY2lkYWRlPC9zcGFuPgogIDxkaXYgaWQ9InZhZ2FzX2Rlc2NyaWNhb19oYWxmcGFnZV8zMDB4NjAwIj4KICAJPHNjcmlwdCB0eXBlPSd0ZXh0L2phdmFzY3JpcHQnPgogICAgICBnb29nbGV0YWcuY21kLnB1c2goZnVuY3Rpb24oKSB7IGdvb2dsZXRhZy5kaXNwbGF5KCd2YWdhc19kZXNjcmljYW9faGFsZnBhZ2VfMzAweDYwMCcpOyB9KTsKICAgIDwvc2NyaXB0PgogIDwvZGl2Pgo8L2Rpdj4KICA8L2FzaWRlPgoKPC9kaXY+Cgo8ZGl2IGlkPSJib3gtY2FuZGlkYXR1cmEiPgogIDxkaXYgaWQ9ImJveC1jYW5kaWRhdHVyYS1pbm5lciI+CgogICAgPGRpdiBjbGFzcz0iY2hhbWFkYSI+CiAgICAgIDxoMiBjbGFzcz0idGl0Ij5Fc3RhIHZhZ2EgcmVxdWVyIG8gcHJlZW5jaGltZW50byBkZSBmaWNoYXMgZSB0ZXN0ZXMuPC9oMj4KICAgICAgPGRpdiBjbGFzcz0iaW1nLWZpY2hhIj48L2Rpdj4KICAgICAgPHA+UmVjb21lbmRhbW9zIGEgY2FuZGlkYXR1cmEgdmlhIFBDIHBhcmEgbWFpb3IgZmFjaWxpZGFkZSBkZSBwcmVlbmNoaW1lbnRvLjwvcD4KICAgIDwvZGl2PgoKICAgIDxhIG9uY2xpY2s9ImdhKCdzZW5kJywgJ2V2ZW50JywgJ01vYmlsZSAtIExpbmsgRW52aWFyIHZhZ2EgcG9yIGUtbWFpbCcsICdDbGljaycpOyIgaWQ9ImJ0bi12YWdhLWVtYWlsIiBocmVmPSJtYWlsdG86P3N1YmplY3Q9TMOtZGVyIGRlIFZpc3VhbCBNZXJjaGFuZGlzaW5nIChWTSkgICAtIEZsb3JpYW7Ds3BvbGlzIC0gU0MgKHYxNzMzNzAzKSZib2R5PWh0dHA6Ly93d3cudmFnYXMuY29tLmJyL3ZhZ2FzL3YxNzMzNzAzL2xpZGVyLWRlLXZpc3VhbC1tZXJjaGFuZGlzaW5nLXZtLWZsb3JpYW5vcG9saXMtc2MiPjxzcGFuIGNsYXNzPSJpY28tbWFpbCI+PC9zcGFuPkVudmlhciB2YWdhIHBvciBlLW1haWw8L2E+CiAgICA8YSBocmVmPSIvbW92ZV90bz9zZXJ2aWNvPWNhbmRpZGF0dXJhJmFtcDtjb2RpZ29fZGFfdmFnYT0xNzMzNzAzJmFtcDtmb250ZV9kZV9jYXB0YWNhbz0xNCIgaWQ9InZhZ2EtbGluay1jb250aW51YXIiIG9uY2xpY2s9ImdhKCYjeDI3O3NlbmQmI3gyNzssICYjeDI3O2V2ZW50JiN4Mjc7LCAmI3gyNztNb2JpbGUgLSBMaW5rIENvbnRpbnVhciBjYW5kaWRhdHVyYSYjeDI3OywgJiN4Mjc7Q2xpY2smI3gyNzspOyI+Q29udGludWFyIGNhbmRpZGF0dXJhPC9hPgogIDwvZGl2Pgo8L2Rpdj4KCgoKCjxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vbGQranNvbiI+CiAgeyJAY29udGV4dCI6Imh0dHA6Ly9zY2hlbWEub3JnIiwiQHR5cGUiOiJKb2JQb3N0aW5nIiwidGl0bGUiOiJMw61kZXIgZGUgVmlzdWFsIE1lcmNoYW5kaXNpbmcgKFZNKSAgIC0gRmxvcmlhbsOzcG9saXMgLSBTQyIsImRlc2NyaXB0aW9uIjoiRXhwZXJpw6puY2lhIGNvbSBtb2RhIGUgZXhwb3Npw6fDo28gZGUgcHJvZHV0b3MgbmEgbG9qYS5cclxuVml2w6puY2lhIGNvbSBHZXN0w6NvIGRlIEVxdWlwZXMuXHJcblNlcsOhIHJlc3BvbnPDoXZlbCBwZWxhIGFuw6FsaXNlIGRlIHJlc3VsdGFkb3MgZSBwbGFuZWphbWVudG8gZGFzIHJvdGluYXMgZGEgZXF1aXBlLCBhY29tcGFuaGFtZW50byBkYSBtb250YWdlbSBkZSB2aXRyaW5lcywgcHJvZHXDp8OjbyBkZSBtb2RhIG5vcyBtYW5lcXVpbnMsIGV4ZWN1w6fDo28gZGFzIGV0YXBhcyBkZSBleHBvc2nDp8OjbyBlIGNpY2xvIGRlIHZpZGEgZG8gcHJvZHV0byBzZWd1aW5kbyBhIGVzdHJhdMOpZ2lhIGNvcnBvcmF0aXZhLlxyXG5EZXNlasOhdmVsIGVuc2lubyBzdXBlcmlvciBjdXJzYW5kbyAobsOjbyBvYnJpZ2F0w7NyaW8pLiBEaXNwb25pYmlsaWRhZGUgcGFyYSB0cmFiYWxoYXIgYW9zIGZpbmFpcyBkZSBzZW1hbmEuXHJcbsKgIiwiaWRlbnRpZmllciI6eyJAdHlwZSI6IlByb3BlcnR5VmFsdWUiLCJuYW1lIjoiQyZBIE1vZGFzIiwidmFsdWUiOjE3MzM3MDN9LCJkYXRlUG9zdGVkIjoiMjAxOC0wNy0xOCIsInZhbGlkVGhyb3VnaCI6IjIwMTgtMDgtMTciLCJoaXJpbmdPcmdhbml6YXRpb24iOnsiQHR5cGUiOiJPcmdhbml6YXRpb24iLCJuYW1lIjoiQyZBIE1vZGFzIn0sImpvYkxvY2F0aW9uIjp7IkB0eXBlIjoiUGxhY2UiLCJhZGRyZXNzIjp7IkB0eXBlIjoiUG9zdGFsQWRkcmVzcyIsImFkZHJlc3NMb2NhbGl0eSI6IkZsb3JpYW7Ds3BvbGlzIiwiYWRkcmVzc1JlZ2lvbiI6IlNDIiwiYWRkcmVzc0NvdW50cnkiOiJCcmFzaWwifX19Cjwvc2NyaXB0PgoKCgoKPC9kaXY+Cgo8Zm9vdGVyIGlkPSJyb2RhcGUiPgogIDxkaXYgaWQ9InJvZGFwZUZhaXhhIj4KICA8ZGl2IGNsYXNzPSJjZW50ZXIiPgogICAgPGRpdiBjbGFzcz0icHVsbC1yaWdodC1jb250YWluZXIiPgoKICAgICAgPGRpdiBpZD0ibGlzdGFJZGlvbWFzIiBjbGFzcz0ibGlzdGEtaWRpb21hcy1jb250YWluZXIiPgogIDx1bCBjbGFzcz0iaWRpb21hLWxpc3RhIj4KICAgIDxkaXYgY2xhc3M9Im9wY29lcy1jb250YWluZXIiPgogICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6YXBsaWNhcl9sb2NhbGUoJ3B0LUJSJyk7IiBjbGFzcz0iaXRlbSBzZWxlY2lvbmFkbyI+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNvbmUgYnRQdCI+PC9zcGFuPgogICAgICAgICAgPGxpPnBvcnR1Z3XDqnM8L2xpPgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmFwbGljYXJfbG9jYWxlKCdlcycpOyIgY2xhc3M9Iml0ZW0gIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uZSBidEVzIj48L3NwYW4+CiAgICAgICAgICA8bGk+ZXNwYcOxb2w8L2xpPgogICAgICAgIDwvYT4KICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OmFwbGljYXJfbG9jYWxlKCdlbicpOyIgY2xhc3M9Iml0ZW0gIj4KICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY29uZSBidEVuIj48L3NwYW4+CiAgICAgICAgICA8bGk+ZW5nbGlzaDwvbGk+CiAgICAgICAgPC9hPgogICAgPC9kaXY+CiAgPC91bD4KPC9kaXY+CgogICAgICA8dWwgaWQ9Imxpc3RhUmVkZXMiPgogICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vZmFjZWJvb2suY29tL1ZBR0FTY29tLyIgY2xhc3M9ImxpbmtGYWNlIiBvbmNsaWNrPSJnYSgmI3gyNztzZW5kJiN4Mjc7LCAmI3gyNztldmVudCYjeDI3OywgJiN4Mjc7RmFjZWJvb2sgLSBDdXJ0aXImI3gyNzssICYjeDI3O0NsaWNrJiN4Mjc7KTsiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iRmFjZWJvb2siPkZhY2Vib29rPC9hPjwvbGk+CiAgICAgICAgPCEtLSBQYXJhIGNhbmRpZGF0b3MgLS0+CiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHA6Ly90d2l0dGVyLmNvbS92YWdhcyIgY2xhc3M9ImxpbmtUd2l0dGVyIiBvbmNsaWNrPSJnYSgmI3gyNztzZW5kJiN4Mjc7LCAmI3gyNztldmVudCYjeDI3OywgJiN4Mjc7VHdpdHRlciAtIFNlZ3VpciYjeDI3OywgJiN4Mjc7Q2xpY2smI3gyNzspOyIgdGFyZ2V0PSJfYmxhbmsiIHRpdGxlPSJUd2l0dGVyIj5Ud2l0dGVyPC9hPjwvbGk+CiAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vcGx1cy5nb29nbGUuY29tLzEwNTUyMDYyMTgxODY1ODQyNTkxNSIgY2xhc3M9ImxpbmtHb29nbGUiIG9uY2xpY2s9ImdhKCYjeDI3O3NlbmQmI3gyNzssICYjeDI3O2V2ZW50JiN4Mjc7LCAmI3gyNztHb29nbGUrIC0gU2VndWlyJiN4Mjc7LCAmI3gyNztDbGljayYjeDI3Oyk7IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9Ikdvb2dsZSArIj5Hb29nbGUgKzwvYT48L2xpPgogICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vbGlua2QuaW4vR3J1cG9WQUdBUyIgY2xhc3M9ImxpbmtMaW5rZWRJbiIgb25jbGljaz0iZ2EoJiN4Mjc7c2VuZCYjeDI3OywgJiN4Mjc7ZXZlbnQmI3gyNzssICYjeDI3O0xpbmtlZEluIC0gQ29uZWN0YXImI3gyNzssICYjeDI3O0NsaWNrJiN4Mjc7KTsiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iTGlua2VkSW4iPkxpbmtlZEluPC9hPjwvbGk+CiAgICAgIDwvdWw+CiAgICA8L2Rpdj4KICA8L2Rpdj4KPC9kaXY+CgogIAogIDxkaXYgaWQ9InJvZGFwZUxpbmtzIj4KICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lciI+CgogICAgICA8ZGl2IGNsYXNzPSJyb2RDb2wgcm9kSW5zdGl0dWNpb25hbCI+CiAgICAgICAgPGRpdiBjbGFzcz0icm9kVGl0Ij48YSBocmVmPSIvaW5zdGl0dWNpb25hbC8iPkluc3RpdHVjaW9uYWw8L2E+PC9kaXY+CiAgICAgICAgPHVsPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9pbnN0aXR1Y2lvbmFsL3F1ZW0tc29tb3MiPlF1ZW0gc29tb3M8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvcHJvZHV0b3MiPk5vc3NvcyBwcm9kdXRvczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wYXJjZXJpYXMiPlBhcmNlcmlhczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9wcm9qZXRvcy1zb2NpYWlzIj5SZXNwb25zYWJpbGlkYWRlIHNvY2lhbDwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9pbXByZW5zYSI+SW1wcmVuc2E8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvdHJhYmFsaGUtY29ub3NjbyI+VHJhYmFsaGUgY29ub3NjbzwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBjbGFzcz0icm9kQ29sIHJvZEVtcHJlc2FzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyb2RUaXQiPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvIj5FbXByZXNhczwvYT48L2Rpdj4KICAgICAgICA8dWw+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8iPlNvbHXDp8O1ZXMgcGFyYSBSJmFtcDtTPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vcmVkZXMtbG9qYXMiPlJlZGVzIGRlIGxvamFzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vcHJvZ3JhbWEtZXN0YWdpby10cmFpbmVlIj5Qcm9ncmFtYXMgZGUgRXN0w6FnaW8gZSBUcmFpbmVlPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NvbHVjYW8tcmVjcnV0YW1lbnRvLXNlbGVjYW8vc29mdHdhcmUtdmFnYXMtZS1wYXJ0bmVyIj5Db25oZcOnYSBvIFZBR0FTIGUtcGFydG5lcjwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvL2R1dmlkYXMtZnJlcXVlbnRlcyI+RkFRPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NsaWVudGVzLXZhZ2FzIj5DbGllbnRlczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zb2x1Y2FvLXJlY3J1dGFtZW50by1zZWxlY2FvLyNmYWxlLWNvbm9zY28iPjxzcGFuIGNsYXNzPSJ0cmFuc2xhdGlvbl9taXNzaW5nIiB0aXRsZT0idHJhbnNsYXRpb24gbWlzc2luZzogcHQtQlIuZ2xvYmFsLm5hdi5lbXByZXNhcy5zb2xpY2l0YXItY29udGF0byI+U29saWNpdGFyIENvbnRhdG88L3NwYW4+PC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL2dlbnRlcmgvIj5HZW50ZVJIPC9hPjwvbGk+CiAgICAgICAgPC91bD4KICAgICAgPC9kaXY+CgogICAgICA8ZGl2IGNsYXNzPSJyb2RDb2wgcm9kQ2FuZGlkYXRvcyI+CiAgICAgICAgPGRpdiBjbGFzcz0icm9kVGl0Ij48YSBocmVmPSIvIj5DYW5kaWRhdG9zPC9hPjwvZGl2PgogICAgICAgIDx1bD4KICAgICAgICAgIDxsaT48YSBocmVmPSIvIj5QZXNxdWlzYSBkZSB2YWdhczwvYT48L2xpPgogICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zZXJ2aWNvcy1ncmF0dWl0b3MtY2FuZGlkYXRvcyI+U2VydmnDp29zIGdyYXR1aXRvcyBwYXJhIGNhbmRpZGF0b3M8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvZW1wcmVzYXMtY29udHJhdGFuZG8iPlF1ZW0gY29udHJhdGE8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FuZGlkYXRvcy9yZWRlcy1zb2NpYWlzIj5SZWRlcyBzb2NpYWlzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iL2NhbmRpZGF0b3MvY29tby1mdW5jaW9uYSI+TyBWQUdBUy5jb20uYnI8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvcHJvZmlzc29lcyI+VkFHQVMgUHJvZmlzc8O1ZXM8L2E+PC9saT4KICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwczovL3d3dy52YWdhcy5jb20uYnIvbWFwYS1kZS1jYXJyZWlyYXMvc29icmUiPk1hcGEgVkFHQVMgZGUgQ2FycmVpcmFzPC9hPjwvbGk+CiAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL2FqdWRhLWNhbmRpZGF0b3MiIHRhcmdldD0iX2JsYW5rIj5BanVkYTwvYT48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvZGl2PgoKICAgICAgICAgIDxkaXYgY2xhc3M9InJvZENvbCI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvZFRpdCI+SG90c2l0ZXM8L2Rpdj4KICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgIDxsaT48YSBocmVmPSJodHRwOi8vd3d3LmZvcnVtdmFnYXMuY29tLmJyIiB0YXJnZXQ9Il9ibGFuayI+RsOzcnVtIFZBR0FTPC9hPjwvbGk+CiAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Imh0dHBzOi8vd3d3LnZhZ2FzLmNvbS5ici9hcnRldmFnYXMiIHRhcmdldD0iX2JsYW5rIj5hcnRlVkFHQVM8L2E+PC9saT4KICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cHM6Ly93d3cudmFnYXMuY29tLmJyL3B1YmxpY2lkYWRlIiB0YXJnZXQ9Il9ibGFuayI+UHVibGljaWRhZGU8L2E+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvZGl2PgoKICAgICAgPGRpdiBpZD0iY29weXJpZ2h0Ij48c3BhbiBpZD0icm9kUG93ZXJlZCI+UG93ZXJlZCBieSA8c3Ryb25nPlZBR0FTPC9zdHJvbmc+PC9zcGFuPkNvcHlyaWdodCDCqSAyMDE4IFZBR0FTIFRlY25vbG9naWEgLiBUb2RvcyBvcyBkaXJlaXRvcyByZXNlcnZhZG9zLiB8IDxhIGhyZWY9Ii90ZXJtb3MtZGUtdXNvIj5UZXJtb3MgZGUgdXNvPC9hPjwvZGl2PgoKICAgIDwvZGl2PgogIDwvZGl2PgoKPC9mb290ZXI+Cgo8ZGl2IGlkPSJvdmVybGF5Ij48L2Rpdj4KPHNjcmlwdCBzcmM9Ii9hc3NldHMvYXBwbGljYXRpb24tNThjNzIyN2QyZDA2NTVkM2M5ZGIwYTFjYjJlNWI3OWEuanMiIHR5cGU9InRleHQvamF2YXNjcmlwdCI+PC9zY3JpcHQ+Cgo8ZGl2IHN0eWxlPSJkaXNwbGF5OiBub25lIiBpZD0iZmltLWRlLXBhZ2luYSI+CiAgCjwvZGl2PgoKCjwvYm9keT4KPC9odG1sPgo=
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:20 GMT
- request:
    method: get
    uri: https://www.vagas.com.br/vagas/v1733726/operador-visual-merchandising-vm-londrina-pr
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 02 Aug 2018 01:20:20 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Rate-Limit-Rule-Id:
      - 0663ad19a24840d5ad2d05590074c7d3
      Cf-Rate-Limit-Action:
      - simulate
      Retry-After:
      - '55'
      Set-Cookie:
      - __cfduid=d346a6812eda093e328b8b030d9fd7f001533172820; expires=Fri, 02-Aug-19
        01:20:20 GMT; path=/; domain=.vagas.com.br; HttpOnly
      - retorna_para_vaga=; path=/; expires=Thu, 01-Jan-1970 00:00:00 GMT
      - uuid=4c2536dcd615f4106ab31fdce516e6de7bee039078f6f20f17; path=/
      - vagas.com.br=BAh7B0kiD3Nlc3Npb25faWQGOgZFVEkiJTZmNWMzM2RkODg5N2EwNGQ2MWZlYzA0YjFiYWZmMmI0BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMU8zTWY2TU5HLzZqR1NHMU1RWENlcGc0bEhocm5Kei9JTDJZKzB3Rk5lSlU9BjsARg%3D%3D--7b3f29340ac8204f9c4ea9282e050cf71f84581c;
        domain=.vagas.com.br; path=/; HttpOnly
      Status:
      - 200 OK
      X-Ua-Compatible:
      - IE=Edge,chrome=1
      Etag:
      - W/"aba74a49246185f5172b85c50ce5971b"
      Cache-Control:
      - max-age=0, private, must-revalidate
      X-Request-Id:
      - c2a693be6bba828e6e634aebf89ae68f
      X-Runtime:
      - '0.156113'
      X-Rack-Cache:
      - miss
      X-Cache-Status:
      - MISS
      Expect-Ct:
      - max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
      Server:
      - cloudflare
      Cf-Ray:
      - 443cb8b0a8f34bab-GRU
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Thu, 02 Aug 2018 01:20:20 GMT
recorded_with: VCR 4.0.0
